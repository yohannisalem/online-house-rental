[{"/home/yohannis/Desktop/min/Final-Project OHR/client/src/index.js":"1","/home/yohannis/Desktop/min/Final-Project OHR/client/src/App.js":"2","/home/yohannis/Desktop/min/Final-Project OHR/client/src/reportWebVitals.js":"3","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/Navigator.js":"4","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/routing/PrivateRoute.js":"5","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/Login.js":"6","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/Register.js":"7","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/ResetPassword.js":"8","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/ForgotPassword.js":"9","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/Private.js":"10","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/NavBar.js":"11","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/TenantScreen.js":"12","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/RegisterHouses.js":"13","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/pages/About.js":"14","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/pages/Help.js":"15","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/pages/Home.js":"16","/home/yohannis/Desktop/min/Final-Project OHR/client/src/firebase.js":"17","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/FileUp.js":"18","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/SwiperSlider.js":"19","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/StyledComponent.js":"20","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/HousesInTheSameDistrict.js":"21","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/RelatedHouses.js":"22","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/maps/HousesLocation.js":"23","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/maps/useGeoLocation.js":"24","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/LandlordProfile.js":"25","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/Modal.js":"26","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/ContractForm.js":"27","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/admin/AdminPanel.js":"28","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/Notification.js":"29","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/admin/PostList.js":"30","/home/yohannis/Desktop/Final-Project OHR/client/src/index.js":"31","/home/yohannis/Desktop/Final-Project OHR/client/src/reportWebVitals.js":"32","/home/yohannis/Desktop/Final-Project OHR/client/src/App.js":"33","/home/yohannis/Desktop/Final-Project OHR/client/src/components/pages/Home.js":"34","/home/yohannis/Desktop/Final-Project OHR/client/src/components/Navigator.js":"35","/home/yohannis/Desktop/Final-Project OHR/client/src/components/pages/Help.js":"36","/home/yohannis/Desktop/Final-Project OHR/client/src/components/NavBar.js":"37","/home/yohannis/Desktop/Final-Project OHR/client/src/components/routing/PrivateRoute.js":"38","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/FileUp.js":"39","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/HousesInTheSameDistrict.js":"40","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/LandlordRegister.js":"41","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/Login.js":"42","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/ContractForm.js":"43","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/LandlordLogin.js":"44","/home/yohannis/Desktop/Final-Project OHR/client/src/components/pages/About.js":"45","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/HouseDetails.js":"46","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/Register.js":"47","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/AdminPanel.js":"48","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/Notification.js":"49","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/LandlordProfile.js":"50","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/SwiperSlider.js":"51","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/RelatedHouses.js":"52","/home/yohannis/Desktop/Final-Project OHR/client/src/firebase.js":"53","/home/yohannis/Desktop/Final-Project OHR/client/src/components/maps/useGeoLocation.js":"54","/home/yohannis/Desktop/Final-Project OHR/client/src/components/maps/HousesLocation.js":"55","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/LandlordAccountReview.js":"56","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/ReportIssue.js":"57","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/FeedBack.js":"58","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/EditHouse.js":"59","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/FeedBacks.js":"60","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/HouseList.js":"61","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/Reports.js":"62","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SendAppointment.js":"63","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/TenantList.js":"64","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/LandlordList.js":"65","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/DashBoard.js":"66","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/TenantDashboard.js":"67","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/RequestedHouse.js":"68","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SignHere.js":"69","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SignaturePanel.js":"70","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/HouseRequests.js":"71","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/Terms.js":"72","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SendContract.js":"73","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/RentedHouse.js":"74","/home/yohannis/Desktop/Final-Project OHR/client/src/components/routing/AdminRoute.js":"75","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/AdminLogin.js":"76","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/ForgotPassword.js":"77","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/LandlordForgotPassword.js":"78","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/HousesByLandlord.js":"79","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/TenantProfile.js":"80"},{"size":542,"mtime":1628771147216,"results":"81","hashOfConfig":"82"},{"size":4911,"mtime":1630067009137,"results":"83","hashOfConfig":"82"},{"size":362,"mtime":1627451455440,"results":"84","hashOfConfig":"82"},{"size":2011,"mtime":1630669419583,"results":"85","hashOfConfig":"82"},{"size":383,"mtime":1629887231648,"results":"86","hashOfConfig":"82"},{"size":2685,"mtime":1630066935908,"results":"87","hashOfConfig":"82"},{"size":2868,"mtime":1629832698165,"results":"88","hashOfConfig":"82"},{"size":2506,"mtime":1628769237803,"results":"89","hashOfConfig":"90"},{"size":1793,"mtime":1628769204002,"results":"91","hashOfConfig":"90"},{"size":1413,"mtime":1629887317085,"results":"92","hashOfConfig":"90"},{"size":3653,"mtime":1630499271930,"results":"93","hashOfConfig":"82"},{"size":284,"mtime":1629562996822,"results":"94","hashOfConfig":"90"},{"size":7367,"mtime":1630066915824,"results":"95","hashOfConfig":"90"},{"size":950,"mtime":1628925877480,"results":"96","hashOfConfig":"82"},{"size":150,"mtime":1628839032122,"results":"97","hashOfConfig":"82"},{"size":9820,"mtime":1630691046942,"results":"98","hashOfConfig":"82"},{"size":614,"mtime":1629032747883,"results":"99","hashOfConfig":"82"},{"size":11648,"mtime":1630502034815,"results":"100","hashOfConfig":"82"},{"size":4884,"mtime":1630066849628,"results":"101","hashOfConfig":"82"},{"size":187,"mtime":1629525749588,"results":"102","hashOfConfig":"90"},{"size":2216,"mtime":1629480595367,"results":"103","hashOfConfig":"82"},{"size":1642,"mtime":1630066947617,"results":"104","hashOfConfig":"82"},{"size":4410,"mtime":1629623092906,"results":"105","hashOfConfig":"82"},{"size":993,"mtime":1629598645389,"results":"106","hashOfConfig":"82"},{"size":15932,"mtime":1630148949284,"results":"107","hashOfConfig":"82"},{"size":903,"mtime":1630148172800,"results":"108","hashOfConfig":"90"},{"size":1178,"mtime":1630483462939,"results":"109","hashOfConfig":"82"},{"size":705,"mtime":1630694166512,"results":"110","hashOfConfig":"82"},{"size":1719,"mtime":1630503280815,"results":"111","hashOfConfig":"82"},{"size":862,"mtime":1630696141599,"results":"112","hashOfConfig":"82"},{"size":542,"mtime":1628771147000,"results":"113","hashOfConfig":"114"},{"size":362,"mtime":1627451455000,"results":"115","hashOfConfig":"114"},{"size":6531,"mtime":1631685751045,"results":"116","hashOfConfig":"114"},{"size":10870,"mtime":1632765180909,"results":"117","hashOfConfig":"114"},{"size":2891,"mtime":1632826715235,"results":"118","hashOfConfig":"114"},{"size":150,"mtime":1628839032000,"results":"119","hashOfConfig":"114"},{"size":4349,"mtime":1632846472486,"results":"120","hashOfConfig":"114"},{"size":386,"mtime":1632846890277,"results":"121","hashOfConfig":"114"},{"size":12026,"mtime":1632846812324,"results":"122","hashOfConfig":"114"},{"size":6666,"mtime":1631905304877,"results":"123","hashOfConfig":"114"},{"size":4971,"mtime":1632813323689,"results":"124","hashOfConfig":"114"},{"size":3342,"mtime":1631679984209,"results":"125","hashOfConfig":"114"},{"size":9419,"mtime":1632845217386,"results":"126","hashOfConfig":"114"},{"size":4175,"mtime":1632849065308,"results":"127","hashOfConfig":"114"},{"size":950,"mtime":1628925877000,"results":"128","hashOfConfig":"114"},{"size":11120,"mtime":1632798444351,"results":"129","hashOfConfig":"114"},{"size":4260,"mtime":1632839473706,"results":"130","hashOfConfig":"114"},{"size":7110,"mtime":1632747712144,"results":"131","hashOfConfig":"114"},{"size":1719,"mtime":1630503280000,"results":"132","hashOfConfig":"133"},{"size":2993,"mtime":1632853705235,"results":"134","hashOfConfig":"114"},{"size":6570,"mtime":1631939457302,"results":"135","hashOfConfig":"114"},{"size":1596,"mtime":1631775286396,"results":"136","hashOfConfig":"114"},{"size":614,"mtime":1629032747000,"results":"137","hashOfConfig":"114"},{"size":993,"mtime":1629598645000,"results":"138","hashOfConfig":"114"},{"size":4931,"mtime":1632762207375,"results":"139","hashOfConfig":"114"},{"size":4369,"mtime":1632852337277,"results":"140","hashOfConfig":"114"},{"size":2352,"mtime":1632768861026,"results":"141","hashOfConfig":"114"},{"size":2146,"mtime":1632737079940,"results":"142","hashOfConfig":"114"},{"size":11055,"mtime":1632855156742,"results":"143","hashOfConfig":"114"},{"size":1736,"mtime":1632736794309,"results":"144","hashOfConfig":"114"},{"size":4152,"mtime":1632769537332,"results":"145","hashOfConfig":"114"},{"size":1723,"mtime":1632737094724,"results":"146","hashOfConfig":"114"},{"size":3247,"mtime":1632736858498,"results":"147","hashOfConfig":"114"},{"size":3662,"mtime":1631731208939,"results":"148","hashOfConfig":"114"},{"size":4053,"mtime":1632736822993,"results":"149","hashOfConfig":"114"},{"size":1191,"mtime":1631762029398,"results":"150","hashOfConfig":"114"},{"size":3585,"mtime":1632828786263,"results":"151","hashOfConfig":"114"},{"size":3726,"mtime":1631939002827,"results":"152","hashOfConfig":"114"},{"size":2126,"mtime":1632718997297,"results":"153","hashOfConfig":"114"},{"size":2559,"mtime":1632736868762,"results":"154","hashOfConfig":"114"},{"size":4240,"mtime":1632736816285,"results":"155","hashOfConfig":"114"},{"size":4856,"mtime":1632656536637,"results":"156","hashOfConfig":"114"},{"size":2883,"mtime":1632840002729,"results":"157","hashOfConfig":"114"},{"size":3666,"mtime":1632736831173,"results":"158","hashOfConfig":"114"},{"size":377,"mtime":1632747550695,"results":"159","hashOfConfig":"114"},{"size":2896,"mtime":1632754567711,"results":"160","hashOfConfig":"114"},{"size":1779,"mtime":1632812909652,"results":"161","hashOfConfig":"114"},{"size":1804,"mtime":1632813136497,"results":"162","hashOfConfig":"114"},{"size":4204,"mtime":1632854391165,"results":"163","hashOfConfig":"114"},{"size":3668,"mtime":1632828699863,"results":"164","hashOfConfig":"114"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3sstge",{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},"yuw2w1",{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"190"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"190"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},"1jhgr0w",{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"247"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"247"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"247"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"247"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"247"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"247"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"247"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"247"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"292"},"1f8z63g",{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"247"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"247"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"247"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"247"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"247"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"247"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"247"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"247"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"247"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"247"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"247"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"247"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"247"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"346"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"247"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"337"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"247"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"247"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"247"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"247"},"/home/yohannis/Desktop/min/Final-Project OHR/client/src/index.js",[],"/home/yohannis/Desktop/min/Final-Project OHR/client/src/App.js",["374","375","376","377","378","379"],"import { createMedia } from '@artsy/fresnel';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Button,\n  Container, Grid, Header, Icon, List, Menu,\n  Segment,\n  Sidebar\n} from 'semantic-ui-react';\nimport Navigator from \"./components/Navigator\";\nimport Home from \"./components/pages/Home\";\n\nconst { MediaContextProvider, Media } = createMedia({\n  breakpoints: {\n    mobile: 0,\n    tablet: 768,\n    computer: 1024,\n  },\n})\n\nconst DesktopContainer=({children})=>{\n  const history = useHistory()\n  const [fixed,toggleFixedBar] = useState(false)\n  const showNav =()=>{\n    toggleFixedBar(true)\n  }\n  const hideNav =()=>{\n    toggleFixedBar(false)\n  }\n\n  const [activeItem,setActiveItem] = useState({\n    name:'home'\n  })\n\n  const handleItemClick =(e,{name})=>{\n    setActiveItem(name)\n  }\n  \n  \n   return (\n     <Media greaterThan='mobile'>\n       \n           <Navigator/>\n       {children}\n     </Media>\n   )\n }\n\n\nDesktopContainer.propTypes = {\n children: PropTypes.node,\n}\n\nconst MobileContainer =({children})=>{\n  const [sidebarOpened, setOpenedSideBar] = useState(false)\n\n/* thsi is a handler for sidebar toggler */\n  const handleSidebarHide = () => {\n    setOpenedSideBar(false)\n  }\n\n  const handleToggle = () =>{\n    setOpenedSideBar(true)\n  }\n\n\n    return (\n      <Media as={Sidebar.Pushable} at='mobile'>\n        <Sidebar.Pushable>\n          <Sidebar\n            as={Menu}\n            animation='overlay'\n            inverted\n            onHide={handleSidebarHide}\n            vertical\n            visible={sidebarOpened}\n          >\n            <Menu.Item as='a' active>\n              Home\n            </Menu.Item>\n            <Menu.Item as='a'>Work</Menu.Item>\n            <Menu.Item as='a'>Company</Menu.Item>\n            <Menu.Item as='a'>Careers</Menu.Item>\n            <Menu.Item as='a'>Log in</Menu.Item>\n            <Menu.Item as='a'>Sign Up</Menu.Item>\n          </Sidebar>\n\n          <Sidebar.Pusher dimmed={sidebarOpened}>\n            <Segment\n              textAlign='center'\n              style={{ minHeight: 350, padding: '1em 0em' }}\n              vertical\n            >\n              <Container>\n                <Menu pointing secondary size='large'>\n                  <Menu.Item onClick={handleToggle}>\n                    <Icon name='sidebar' />\n                  </Menu.Item>\n                  <Menu.Item position='right'>\n                    <Button as='a' >\n                      Log in\n                    </Button>\n                    <Button as='a'style={{ marginLeft: '0.5em' }}>\n                      Sign Up\n                    </Button>\n                  </Menu.Item>\n                </Menu>\n              </Container>\n              <Home/>\n            </Segment>\n\n            {children}\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </Media>\n    )\n  }\n\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n}\nconst ResponsiveContainer = ({ children }) => (\n  /* Heads up!\n   * For large applications it may not be best option to put all page into these containers at\n   * they will be rendered twice for SSR.\n   */\n  <MediaContextProvider>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </MediaContextProvider>\n)\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nfunction App() {\n  return (\n    <div>\n\n      <ResponsiveContainer/>\n      <Segment inverted vertical style={{ padding: '5em 0em' }}>\n        <Container>\n          <Grid divided inverted stackable>\n            <Grid.Row>\n              <Grid.Column width={3}>\n                <Header inverted as='h4' content='About' />\n                <List link inverted>\n                  <List.Item as='a'>Sitemap</List.Item>\n                  <List.Item as='a'>Contact Us</List.Item>\n                  <List.Item as='a'>Religious Ceremonies</List.Item>\n                  <List.Item as='a'>Gazebo Plans</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <Header inverted as='h4' content='Services' />\n                <List link inverted>\n                  <List.Item as='a'>Banana Pre-Order</List.Item>\n                  <List.Item as='a'>DNA FAQ</List.Item>\n                  <List.Item as='a'>How To Access</List.Item>\n                  <List.Item as='a'>Favorite X-Men</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column width={7}>\n                <Header as='h4' inverted>\n                  Footer Header\n                </Header>\n                <p>\n                  Extra space for a call to action inside the footer that could help re-engage users.\n                </p>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </Segment>\n    </div>\n      \n    \n    \n  );\n}\n\nexport default App;\n","/home/yohannis/Desktop/min/Final-Project OHR/client/src/reportWebVitals.js",[],"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/Navigator.js",["380"],"import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport NavBar from './NavBar'\nimport About from './pages/About'\nimport Help from './pages/Help'\nimport Home from './pages/Home'\nimport PrivateRoute from './routing/PrivateRoute'\nimport FileUp from './screen/FileUp'\nimport HouseDetails from './screen/HouseDetails'\nimport HousesInTheSameDistrict from './screen/HousesInTheSameDistrict'\nimport LandlordLogin from './screen/LandlordLogin'\nimport LandlordProfile from './screen/LandlordProfile'\nimport LandlordRegister from './screen/LandlordRegister'\nimport Login from './screen/Login'\nimport Register from './screen/Register'\nimport SwiperSlider from './screen/SwiperSlider'\nimport ContractForm from './screen/ContractForm'\nimport AdminPanel from './admin/AdminPanel';\nimport Notification from './screen/Notification'\n\nconst Navigator = () => {\n    return (\n        <div>\n            <Router>\n                <NavBar/>\n                \n                <Route exact path=\"/\"><Home/></Route>\n                <Route path=\"/about\"><About/></Route>\n                <Route path=\"/help\"><Help/></Route>\n                <Route path=\"/login\"><Login/></Route>\n                <Route path=\"/register\"><Register/></Route>\n                <Route path=\"/landlordLogin\"><LandlordLogin/></Route>\n                <Route path=\"/landlordRegister\"><LandlordRegister/></Route>\n                <Route path=\"/managelisting\"><LandlordProfile/></Route>\n                <Route path=\"/admin\"><AdminPanel/></Route>\n                <PrivateRoute path=\"/listproperty\"><FileUp/></PrivateRoute>\n                <Route path=\"/tenantscreen\"><SwiperSlider/></Route>\n                <Route path=\"/contract\"><ContractForm/></Route>\n                <Route path=\"/houseDetails/:productId\"><HouseDetails/></Route>\n                <Route path=\"/houseDistrict/:district\"><HousesInTheSameDistrict/></Route>\n\n                \n\n                \n            </Router>\n        </div>\n    )\n}\n\nexport default Navigator\n","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/routing/PrivateRoute.js",[],"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/Login.js",["381"],"import axios from \"axios\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\n\nconst Login = () => {\n  let history = useHistory()\n    const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [user,setUser] =useState({})\n\n useEffect(() => {\n    if (localStorage.getItem(\"authToken\")) {\n      history.push(\"/\");\n    }\n  }, [history]); \n\n  const loginHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const { data } = await axios.post(\n        \"http://localhost:5000/api/auth/login\",\n        { email, password },\n        config\n      );\n      setUser(data)\n\n     localStorage.setItem(\"authToken\", data.token);\n     localStorage.setItem(\"username\",data.username)\n     localStorage.setItem(\"userid\",data.id)\n     history.push(\"/\");\n    } catch (error) {\n      \n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n  \n  return (\n    <div className=\"login-screen\">\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n    <Grid.Column style={{ maxWidth: 450 }}>\n      <Header as='h2' color='teal' textAlign='center'>\n        Tenant Log-in\n      </Header>\n      {error && <span className=\"error-message\">{error}</span>}\n      <Form size='large'>\n        <Segment stacked>\n          <Form.Input fluid icon='user' iconPosition='left' type=\"email\"\n            required\n            id=\"email\"\n            placeholder=\"Email address\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n            tabIndex={1}\n             />\n             <label htmlFor=\"password\">\n            Password:{\" \"}\n            <Link to=\"/forgotpassword\" className=\"login-screen__forgotpassword\">\n              Forgot Password?\n            </Link>\n          </label>\n          <Form.Input\n            fluid\n            icon='lock'\n            iconPosition='left'\n            type=\"password\"\n            required\n            id=\"password\"\n            autoComplete=\"true\"\n            placeholder=\"Enter password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            tabIndex={2}\n          />\n\n          <Button onClick={loginHandler}>Login</Button>\n        </Segment>\n      </Form>\n      <Message>\n        Don't have an account? <Link to=\"/register\">Register</Link>\n      </Message>\n    </Grid.Column>\n  </Grid>\n       \n    </div>\n  );\n}\n\nexport default Login\n\n\n\n\n\n","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/Register.js",["382"],"import React,{useState} from 'react'\nimport axios from \"axios\";\nimport { Link,Redirect,useHistory} from \"react-router-dom\";\nimport { Button,Form } from 'semantic-ui-react'\n\nconst Register = () => {\n  let history = useHistory()\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const registerHandler = async (e) => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (password !== confirmpassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const { data } = await axios.post(\n        \"http://localhost:5000/api/auth/register\", { username, email, password,},\n        config\n      );\n      localStorage.setItem(\"authToken\",data.token)\n      history.push(\"/\")\n      \n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return (\n    <div style={{marginTop:\"100px\"}}>\n      {error && <span className=\"error-message\">{error}</span>}\n      <Form>\n        <Form.Field>\n          <label>First Name</label>\n          <input\n            type=\"text\"\n            required\n            id=\"name\"\n            placeholder=\"Enter username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>email</label>\n          <input\n            type=\"email\"\n            required\n            id=\"email\"\n            placeholder=\"Email address\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>password</label>\n        <input\n            type=\"password\"\n            required\n            id=\"password\"\n            autoComplete=\"true\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>confirm password</label>\n        <input\n            type=\"password\"\n            required  \n            autoComplete=\"true\"\n            placeholder=\"Confirm password\"\n            value={confirmpassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Field>\n        <Button onClick={registerHandler}>Submit</Button>\n    </Form>\n    <span className=\"register-screen__subtext\">\n          Already have an account? <Link to=\"/login\">Login</Link>\n    </span>\n      \n    </div>\n  );\n}\n\nexport default Register\n","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/ResetPassword.js",[],["383","384"],"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/ForgotPassword.js",[],"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/Private.js",[],["385","386"],"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/NavBar.js",[],"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/TenantScreen.js",["387","388","389","390","391","392","393","394"],"import React from 'react'\nimport {\n  Container,\n  Grid,\n  Header,\n  Image,\n  Form,\n  Input,\n  Segment,\n  GridColumn\n} from 'semantic-ui-react'\nconst TenantScreen = () => {\n  return (\n    <div style={{marginTop:\"100px\"}}>\n      \n\n      \n\n\n    </div>\n  )\n}\n\nexport default TenantScreen\n",["395","396"],"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/RegisterHouses.js",["397","398","399","400","401","402","403","404","405","406","407","408","409","410"],"import React,{useState} from 'react'\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\nimport storage from \"../../firebase\";\nimport axios from 'axios'\nconst RegisterHouses = () => {\n  const apiurl = ''\n  const [housedata,setHouseData]= useState(null)\n/*   */\n  const [imageUrls, setImageUrls] = useState([]);\n  const [videoUrls, setVideoUrls] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [video, setVideo] = useState(null);\n\n  // const handleChange = (e) => {\n  //   const value = e.target.value;\n  //   setHouseData({ ...housedata, [e.target.name]: value });\n  // };\n  const handleChangeForImg= (e)=>{\n    for (let i = 0; i < e.target.files.length; i++) {\n      const newImage = e.target.files[i];\n      newImage[\"id\"] = Math.random();\n      setFiles((prevState) => [...prevState, newImage]);\n      console.log(files)\n    }\n\n  }\n  \n  /* const createHouse = async (housedata) => {\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/multipleFiles\", housedata,config); \n      console.log(res) \n    } catch (err) {\n      console.log(err)\n    }\n  };\n */\n /*  const upload = (items) => {\n    items.forEach((item) => {\n      var uploadTask = null;\n      console.log(item.files)\n      \n      const fileName = new Date().getTime() + item.label + item.file.name;\n      uploadTask = storage.ref(`/items/${fileName}`).put(item.file);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log(\"Upload is \" + progress + \"% done\");\n        },\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          uploadTask.snapshot.ref.getDownloadURL().then((url) => {\n            \n            setHouseData((prev) => {\n              return [ ...prev,url ];\n            });\n          });\n        }\n      );\n    });\n  \n  }; */\n  const handleUpload = () => {\n    const promises = [];\n    const uploadTaskTwo = storage.ref(`images/${video.name}`).put(video)\n    uploadTaskTwo.on(\n      \"state_changed\",\n      (snapshot) => {\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n      },\n      (error) => {\n        console.log(error);\n      },\n      async () => {\n        await storage\n          .ref(\"images\")\n          .child(video.name)\n          .getDownloadURL()\n          .then((urls) => {\n            setVideoUrls((prevState) => [...prevState, urls]);\n          });\n      }\n    );\n    files.map((image) => {\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      promises.push(uploadTask);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n        },\n        (error) => {\n          console.log(error);\n        },\n        async () => {\n          await storage\n            .ref(\"images\")\n            .child(image.name)\n            .getDownloadURL()\n            .then((urls) => {\n              setImageUrls((prevState) => [...prevState, urls]);\n            });\n        }\n      );\n      \n    });\n\n    Promise.all(promises)\n      .then(() => alert(\"All images uploaded\"))\n      .catch((err) => console.log(err));\n\n      console.log(imageUrls)\n      console.log(videoUrls)\n  };\n  /* const handleUpload = (e) => {\n    e.preventDefault();\n    var uploadTask = null;\n    const promises = [];\n    files.map((image) => {\n      uploadTask = storage.ref(`files/${image.name}`).put(image);\n      promises.push(uploadTask);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log(\"Upload is \" + progress + \"% done\");\n        },\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          uploadTask.snapshot.ref.getDownloadURL().then((url) => {\n            setHouseData((prev) => {\n              return { ...prev, [image]: url };\n            });\n            });\n        }\n      );\n    });\n      uploadTask = storage.ref(`files/${video.name}`).put(video);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log(\"Upload is \" + progress + \"% done\");\n        },\n        (error) => {\n          console.log(error);\n        },\n        () => {\n          uploadTask.snapshot.ref.getDownloadURL().then((url) => {\n            setHouseData((prev) => {\n              return {...prev, [video]:url};\n            });\n          });\n        }\n      );\n    console.log(housedata)\n    createHouse(housedata);\n  }; */\n\n    return (      \n    <div>\n      <h1 className=\"addProductTitle\">New Movie</h1>\n      <form className=\"addProductForm\">\n        {/* <div className=\"addProductItem\">\n          <label>House Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"housename\"\n            name=\"housename\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Description</label>\n          <input\n            type=\"text\"\n            placeholder=\"description\"\n            name=\"description\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Fee per Month</label>\n          <input\n            type=\"number\"\n            placeholder=\"feepermonth\"\n            name=\"feepermonth\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Size</label>\n          <input\n            type=\"number\"\n            placeholder=\"size\"\n            name=\"size\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Number of Beds</label>\n          <input\n            type=\"number\"\n            placeholder=\"numberofbeds\"\n            name=\"numberofbeds\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>propertytype</label>\n          <input\n            type=\"text\"\n            placeholder=\"propertytype\"\n            name=\"propertytype\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Available?</label>\n          <select name=\"available\" id=\"available\" onChange={handleChange}>\n            <option value=\"false\">No</option>\n            <option value=\"true\">Yes</option>\n          </select>\n        </div> */}\n        <div className=\"addProductItem\">\n          <label>Image</label>\n          <input\n            type=\"file\"\n            id=\"files\"\n            name=\"files\"\n            multiple\n            onChange={handleChangeForImg}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Video</label>\n          <input\n            type=\"file\"\n            name=\"video\"\n            id=\"video\"\n            onChange={(e) => setVideo(e.target.files[0])}\n          />\n        </div>\n          <button className=\"addProductButton\" onClick={handleUpload}>\n            Upload\n          </button>\n      </form>\n    </div>\n    )\n}\n\nexport default RegisterHouses\n","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/pages/About.js",[],"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/pages/Help.js",[],"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/pages/Home.js",["411","412","413","414"],"\nimport axios from 'axios'\nimport React, { useEffect, useState, useRef } from 'react'\nimport {\n  Button,\n  Container, Divider, Form, Grid,\n  Header, Image, Input, List, Segment, Ref\n} from 'semantic-ui-react'\n/* const Auto = () => {\n  const [display, setDisplay] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const wrapperRef = useRef(null);\n  const searchPokemon= async (text)=>{\n    try {\n      const pokemon = [];\n      const searchedHouse = await axios.get(`http://localhost:5000/api/autoCompleteSearch?term=bo`)\n        searchedHouse.data.map(house=>{\n          pokemon.push(house)\n          console.log(house)\n        })\n        setOptions(pokemon);\n    } catch (error) {\n      \n      \n      console.log(error.message)\n    }\n  }\n\n  useEffect(() => {\n    searchPokemon()\n    console.log('options',options)\n    \n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n\n  const handleClickOutside = event => {\n    const { current: wrap } = wrapperRef;\n    if (wrap && !wrap.contains(event.target)) {\n      setDisplay(false);\n    }\n  };\n\n  const updatePokeDex = poke => {\n    setSearch(poke);\n    setDisplay(false);\n    \n  };\n\n  return (\n    <div ref={wrapperRef} className=\"flex-container flex-column pos-rel\">\n      <input\n        id=\"auto\"\n        onClick={() => setDisplay(!display)}\n        placeholder=\"Type to search\"\n        value={search}\n        onChange={event => setSearch(event.target.value)}\n      />\n      {display && (\n        <div className=\"autoContainer\">\n          {options  \n            .map((value) => {\n              return (\n                <div\n                  onClick={() => updatePokeDex(value)}\n                  className=\"option\"\n                  tabIndex=\"0\"\n                >\n                  <span>{value}</span>\n                  \n                </div>\n              );\n            })}\n        </div>\n      )}\n    </div>\n  );\n};\n */\nconst Home = () => {\n  const [display, setDisplay] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const wrapperRef = useRef(null);\n  const [multipleFiles, setMultipleFiles] = useState([])\n\n  const getHousesIntheSameDistrict = async (houseDistrict) => {\n    try {\n      const { data } = await axios.get(`http://localhost:5000/api/getFilesByDistrict/${houseDistrict}`);\n      console.log(data)\n      setMultipleFiles(data);\n      console.log(multipleFiles);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const getMultipleFiles = async () => {\n    try {\n      const { data } = await axios.get('http://localhost:5000/api/getMultipleFiles');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  const getMultipleFilesList = async () => {\n    try {\n      const fileslist = await getMultipleFiles();\n      setMultipleFiles(fileslist);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const searchHouse = async (text) => {\n    try {\n      const pokemon = [];\n      const searchedHouse = await axios.get(`http://localhost:5000/api/autoCompleteSearch?term=${text}`)\n      searchedHouse.data.map(house => {\n        pokemon.push(house)\n      })\n      setOptions(pokemon);\n    } catch (error) {\n\n\n      console.log(error.message)\n    }\n  }\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n\n  const handleClickOutside = event => {\n    const { current: wrap } = wrapperRef;\n    if (wrap && !wrap.contains(event.target)) {\n      setDisplay(false);\n    }\n  };\n\n  const updatePokeDex = poke => {\n    setSearch(poke);\n    setDisplay(false);\n\n  };\n  useEffect(() => {\n\n    getMultipleFilesList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <div>\n      <Segment\n        textAlign='center'\n        style={{\n          minHeight: 640,\n          backgroundImage: \"url(/des2.jpg)\",\n          height: \"80vh\"\n        }}\n      >\n        <Header\n          as='h1'\n          content='Need a house near your workplace'\n          style={{\n            fontSize: '4em',\n            fontFamily: \"NunitoSans, Helvetica, sans-serif\",\n            fontWeight: 'bold',\n            marginBottom: 0,\n            marginTop: '3em',\n            color: \"white\"\n          }}\n        />\n        <Grid textAlign='center'>\n          <Grid.Column style={{ maxWidth: 600 }} >\n            <Ref ref={wrapperRef}>\n              <Segment style={{ borderColor: \"#20c1c9\", borderWidth: \"3px\", padding: \"0px\" }} >\n                <Form size='large'>\n                  <Input\n                    size='big' fluid type='search' placeholder='Search...'\n                    action={{\n                      content: 'Search',\n                      style: { backgroundColor: \"#20c1c9\", width: \"55px\", padding: \"7px\" }\n\n                    }}\n                    onChange={(e) => searchHouse(e.target.value)}\n                    onClick={() => setDisplay(!display)}\n\n                  />\n                </Form>\n                {display && (\n                  <div className=\"autoContainer\">\n                    {options\n                      .map((value) => {\n                        return (\n                          <div\n                            onClick={() => updatePokeDex(value)}\n                            className=\"option\"\n                            tabIndex=\"0\"\n                          >\n                            <span>{value}</span>\n\n                          </div>\n                        );\n                      })}\n                  </div>\n                )}\n              </Segment>\n            </Ref>\n\n\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Divider horizontal>\n        FOR RENTERS\n      </Divider>\n      <Segment style={{ padding: '8em 0em' }} vertical>\n        <Grid container stackable verticalAlign='middle'>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                Let our search guide you\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n                Search thousands of up-to-date property listings on our easy-to-use website. Narrow down your options by choosing what's most important to you, such as number of bedrooms and bathrooms, price range, location, pet policy and more.\n                Parents can also search for rentals that fall within a particular school district.\n              </p>\n              <Header as='h1' style={{ fontSize: '2em' }}>\n                Simple and streamlined rental management all under a single roof\n              </Header>\n              <Header as='h4'>\n                List your rental property\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n\n                Post your rental property in minutes to reach millions of potential renters.\n              </p>\n            </Grid.Column>\n            <Grid.Column floated='right' width={6}>\n              <Image bordered rounded size='large' src='/' />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column textAlign='center'>\n              <Button size='huge'>Check Them Out</Button>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n\n      <Segment style={{ padding: '0em' }} vertical>\n        <Grid celled='internally' columns='equal' stackable>\n          <Grid.Row textAlign='center'>\n            <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                \"What a Company\"\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>That is what they all say about us</p>\n            </Grid.Column>\n            <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                \"I shouldn't have gone with their competitor.\"\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n                <Image avatar src='' />\n                <b>Nan</b> Chief Fun Officer Acme Toys\n              </p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n\n      <Segment style={{ padding: '8em 0em' }} vertical>\n        <Container text>\n          <Header as='h3' style={{ fontSize: '2em' }}>\n            Breaking The Grid, Grabs Your Attention\n          </Header>\n          <p style={{ fontSize: '1.33em' }}>\n            Instead of focusing on content creation and hard work, we have learned how to master the\n            art of doing nothing by providing massive amounts of whitespace and generic content that\n            can seem massive, monolithic and worth your attention.\n          </p>\n          <Button as='a' size='large'>\n            Read More\n          </Button>\n\n          <Divider\n            as='h4'\n            className='header'\n            horizontal\n            style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n          >\n            <a href='#'>Case Studies</a>\n          </Divider>\n\n          <Header as='h3' style={{ fontSize: '2em' }}>\n            Search By District and Base(Sefer)\n          </Header>\n          <Grid columns={2}>\n            {multipleFiles.map((element, index) =>\n              <div key={element._id}>\n                <List>\n                  <List.Item\n                    content={<a href='mailto:jack@semantic-ui.com'>{element.sefer}</a>}\n                  />\n                </List>\n              </div>\n            )}\n\n          </Grid>\n\n        </Container>\n      </Segment>\n\n\n    </div>\n\n  )\n}\n\nexport default Home\n\n","/home/yohannis/Desktop/min/Final-Project OHR/client/src/firebase.js",[],"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/FileUp.js",["415","416","417","418","419"],"\nimport axios from 'axios';\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Container, Form, Input, Progress, Segment, TextArea } from \"semantic-ui-react\";\nimport storage from \"../../firebase\";\nimport useGeoLocation from \"../maps/useGeoLocation\";\n\nconst publicVapidKey = 'BMffGk0gRxLPOSi-eOlXoR1ahY9Ce7uBY3010C06TeMoRYS_6n1A4ItVeOeNYutDlhPK27WW5UMrdyjBEj_-Pxo';\n//register the service worker, register our push api, sedn the notifation\n\nasync function send(){\n  //register service worker\n  const register = await navigator.serviceWorker.register('/sw.js', {\n      scope: '/'\n  });\n\n  //register push\n  console.log('Registering push...')\n  const subscription = await register.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n  });\n \n  //Send push notification\n  await fetch(\"http://localhost:5000/api/subscribe\", {\n      method: \"POST\",\n      body: JSON.stringify(subscription),\n      headers: {\n          \"content-type\": \"application/json\"\n      }\n  });\n}\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = \"=\".repeat((4 - base64String.length % 4) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, \"+\")\n    .replace(/_/g, \"/\");\n\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n\nconst FileUp = () => {\n  let history = useHistory()\n  const [error, setError] = useState(\"\");\n\n  const location = useGeoLocation()\n\n  const [housename, setHousename] = useState('')\n  const [description, setDescription] = useState('')\n  const [numberofbeds, setNumberOfBeds] = useState(0)\n  const [district, setDistrict] = useState('')\n  const [sefer, setSefer] = useState('')\n  const [feepermonth, setFeeperMonth] = useState(0)\n  const [size, setSize] = useState(0)\n  const [available, setAvailable] = useState(false)\n  const [propertytype, setPropertytype] = useState('')\n  const [video, setVideo] = useState(null)\n  const [imageUrls, setImageUrls] = useState([]);\n  const [videoUrls, setVideoUrls] = useState([]);\n  const [files, setFiles] = useState([]);\n\n\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = (e) => {\n    console.log(e.target.name)\n    for (let i = 0; i < e.target.files.length; i++) {\n      const newImage = e.target.files[i];\n      newImage[\"id\"] = Math.random();\n      setFiles((prevState) => [...prevState, newImage]);\n    }\n  };\n  const handleVideoChange = (e) => {\n    setVideo(e.target.files[0])\n\n  }\n  const handleNameChange = (e) => {\n    setHousename(e.target.value)\n    console.log(housename)\n  }\n  const handleDescrptionChange = (e) => {\n    setDescription(e.target.value)\n  }\n  const handleDestrictChange = (e) => {\n    setDistrict(e.target.value)\n  }\n  const handleSeferChange = (e) => {\n    setSefer(e.target.value)\n  }\n  const handleTypeChange = (e) => {\n    setPropertytype(e.target.value)\n  }\n  const handleFeeChange = (e) => {\n    setFeeperMonth(e.target.value)\n  }\n  const handleSizeChange = (e) => {\n    setSize(e.target.value)\n  }\n  const handleAvailableChange = (e) => {\n    setAvailable(e.target.value)\n  }\n  const handleBedChange = (e) => {\n    setNumberOfBeds(e.target.value)\n  }\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"landlordToken\")\n    history.push(\"/landlordLogin\")\n  }\n\n  const createHouse = async (housedata) => {\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      }\n    };\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/multipleFiles\", housedata, config);\n      send()\n      console.log(res)\n    } catch (err) {\n      console.log(err)\n    }\n  };\n  const handleMultipleFileSubmit = async () => {\n    const formData = new FormData();\n    formData.append('housename', housename);\n    formData.append('description', description);\n    formData.append('district', district);\n    formData.append('sefer', sefer);\n    formData.append('numberofbeds', numberofbeds);\n    formData.append('size', size);\n    formData.append('feepermonth', feepermonth);\n    formData.append('available', available);\n    formData.append('propertytype', propertytype);\n    formData.append('video', videoUrls);\n    for (let i = 0; i < imageUrls.length; i++) {\n      formData.append('files', imageUrls[i]);\n    }\n\n    await createHouse(formData);\n    console.log(formData)\n\n  }\n\n\n  const handleUpload = () => {\n    const promises = [];\n    const uploadTaskTwo = storage.ref(`images/${video.name}`).put(video)\n    promises.push(uploadTaskTwo);\n    uploadTaskTwo.on(\n      \"state_changed\",\n      (snapshot) => {\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progress);\n      },\n      (error) => {\n        console.log(error);\n      },\n      async () => {\n        const urls = await storage.ref(\"images\").child(video.name).getDownloadURL()\n        setVideoUrls((prevState) => [...prevState, urls]);\n        console.log(\"this is a video part\", urls)\n\n      }\n\n    )\n\n    files.map((image) => {\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      promises.push(uploadTask);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n        },\n        (error) => {\n          console.log(error);\n        },\n        async () => {\n          const urls = await storage.ref(\"images\").child(image.name).getDownloadURL();\n          setImageUrls((prevState) => [...prevState, urls]);\n          console.log(\"this is a iamge part\", urls)\n\n        }\n      );\n\n    });\n    Promise.all(promises)\n      .then(\n        () => alert(\"All images uploaded\")\n      ).then()\n      .catch((err) => console.log(err));\n\n  };\n  useEffect(() => {\n    if (!localStorage.getItem(\"landlordToken\")) {\n      history.push(\"/landlordLogin\")\n    }\n    const fetchPrivateDate = async () => {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"landlordToken\")}`,\n        },\n      };\n\n      try {\n        const { data } = await axios.get(\"http://localhost:5000/api/private\", config);\n\n      } catch (error) {\n        /* localStorage.removeItem(\"landlordToken\"); */\n        setError(\"You are not authorized please login\");\n      }\n    };\n\n    /* fetchPrivateDate(); */\n  }, [history]);\n\n  /* handling notification ======================================================================*/\n  /* if ('serviceWorker' in navigator) {\n    send().catch(err => console.error(err));\n  }\n\n  async function send() {\n    //register service worker\n    const register = await navigator.serviceWorker.register('/sw.js');\n\n    //register push\n    console.log('Registering push...')\n    const subscription = await register.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n    });\n\n    //Send push notification\n    await fetch(\"/subscribe\", {\n      method: \"POST\",\n      body: JSON.stringify(subscription),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n  } */\n  /* handling notification ======================================================================*/\n  return (\n      <div>\n        <button onClick={logoutHandler}>logout</button>\n        <Container>\n\n          Build your listing to find the perfect renter — listings with a lot of detail and photos tend to attract the most leads, so don’t be shy! Not sure what to include? Check out our tips and tricks here.\n          <Form>\n            <Segment raised >\n              <Progress percent={progress} success progress />\n              <Form.Field\n                required\n                id='form-input-control-last-name'\n                control={Input}\n                name='housename'\n                type='text'\n                label='House Name'\n                placeholder='house name'\n                onChange={handleNameChange}\n              />\n              <Form.Field\n                required\n                id='property type'\n                control={Input}\n                label='Property Type'\n                name='propertytype'\n                placeholder='property type'\n                onChange={handleTypeChange}\n              />\n\n              <Form.Field\n                required\n                id='district'\n                control={Input}\n                label='District'\n                name='district'\n                placeholder='District or Sub City'\n                onChange={handleDestrictChange}\n              />\n              <Form.Field\n                required\n                id='form-input-control-last-name'\n                control={Input}\n                label='Sefer'\n                name='sefer'\n                placeholder='Sefer or Village'\n                onChange={handleSeferChange}\n              />\n              <Form.Field\n                required\n                id='form-input-control-last-name'\n                control={TextArea}\n                label='Description'\n                name='description'\n                placeholder='House description'\n                onChange={handleDescrptionChange}\n\n              />\n              <Form.Field\n                required\n                id='form-input-control-last-name'\n                control={Input}\n                type=\"number\"\n                name='size'\n                label='Square Footage'\n                placeholder='Size of a house'\n                onChange={handleSizeChange}\n                value={size}\n              />\n              <Form.Field\n                required\n                id='form-input-control-last-name'\n                control={Input}\n                type=\"number\"\n                name='feepermonth'\n                label='Lease Fee'\n                placeholder='Fee'\n                onChange={handleFeeChange}\n              />\n              <Form.Field\n                required\n                id='form-input-control-last-name'\n                control={Input}\n                type=\"number\"\n                name='numberofbeds'\n                label='Number of Beds'\n                placeholder='beds'\n                onChange={handleBedChange}\n              />\n              <Form.Field\n                required\n                control={Input}\n                type=\"file\"\n                name=\"files\"\n                multiple\n                label='Photos of the House'\n                icon='upload'\n                onChange={handleChange}\n              />\n              <Form.Field\n                required\n                id='form-input-control-last-name'\n                control={Input}\n                type=\"file\"\n                name=\"video\"\n                label='Videos about the house'\n                onChange={handleVideoChange}\n\n              />\n\n              <select name=\"available\" id=\"available\" onChange={handleAvailableChange}>\n                <option value=\"false\">No</option>\n                <option value=\"true\">Yes</option>\n              </select>\n              <button onClick={handleUpload}>create upload</button>\n              <button onClick={handleMultipleFileSubmit}>final Upload</button>\n\n            </Segment>\n          </Form>\n          {location.loaded ? JSON.stringify(location) : \"not loaded correctly\"}\n\n        </Container>\n      </div>\n    );\n}\n\nexport default FileUp\n\n/*\n\n\n*/\n\n\n","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/SwiperSlider.js",[],"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/StyledComponent.js",["420"],"import React from 'react'\nimport styled from 'styled-components';\nimport { Form } from 'semantic-ui-react';\nexport const StyledForm = styled(Form)({\n    borderColor: 'red!important'\n});\n\n","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/HousesInTheSameDistrict.js",["421"],"import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport SwiperCore, { Navigation, Pagination, Scrollbar } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper-bundle.css';\nimport { Breadcrumb, Image, Card, Segment, Container } from 'semantic-ui-react'\nimport { useParams,Link } from 'react-router-dom';\n\nSwiperCore.use([Navigation, Pagination, Scrollbar]);\nconst HousesInTheSameDistrict = ({ match }) => {\n  let params = useParams()\n  const [multipleFiles, setMultipleFiles] = useState([])\n  const housesDistrict = params.district\n  const apiUrl = `http://localhost:5000/api/getFilesByDistrict/${housesDistrict}`;\n\n\n  const getMultipleFilesList = async () => {\n    try {\n      const { data } = await axios.get(apiUrl);\n      console.log(data)\n      setMultipleFiles(data);\n      console.log(multipleFiles);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    getMultipleFilesList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [housesDistrict])\n  return (\n    <div >\n\n      {multipleFiles.map((element, index) =>\n        <Container style={{marginTop:\"100px\"}}>\n          <Segment>\n            <Breadcrumb >\n              <Breadcrumb.Section link>Home</Breadcrumb.Section>\n              <Breadcrumb.Divider icon='right chevron' />\n              <Breadcrumb.Section as={Link} to={`/houseDistrict/${element.district}`}>{element.district}</Breadcrumb.Section>\n              <Breadcrumb.Divider icon='right chevron' />\n              <Breadcrumb.Section active>{element.sefer}</Breadcrumb.Section>\n            </Breadcrumb>\n            <Swiper\n              slidesPerView={2}\n              navigation\n              pagination={{ clickable: true }}\n              scrollbar={{ draggable: true }}\n            >\n              {element.files.map((url, index) =>\n                <div className=\"col-6\">\n                  <SwiperSlide key={index}>\n                    <Image src={url} wrapped alt=\"img\" />\n                  </SwiperSlide>\n                </div>\n              )}\n            </Swiper>\n          </Segment>\n\n\n        </Container>\n\n\n      )}\n\n    </div>\n  )\n}\n\nexport default HousesInTheSameDistrict\n","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/RelatedHouses.js",[],"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/maps/HousesLocation.js",["422","423"],"import React, { useState, useRef,useEffect } from \"react\";\nimport useSwr from \"swr\";\nimport axios from \"axios\";\nimport ReactMapGL, { Marker, FlyToInterpolator } from \"react-map-gl\";\nimport useSupercluster from \"use-supercluster\";\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\n\nconst HousesLocation = () => {\n  const [houses,setHouses] = useState([])\n  const getMultipleFiles = async () => {\n    try {\n      const { data } = await axios.get('http://localhost:5000/api/getMultipleFiles');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  const getMultipleFilesList = async () => {\n    try {\n      const fileslist = await getMultipleFiles();\n      setHouses(fileslist);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    getMultipleFilesList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n\n  // const houses = data.data.map(house => {\n  //   return {\n  //     type: 'Feature',\n  //     geometry: {\n  //       type: 'Point',\n  //       coordinates: [\n  //         house.location.coordinates[0],\n  //         house.location.coordinates[1]\n  //       ]\n  //     },\n  //     properties: {\n  //       icon: 'house'\n  //     }\n  //   };\n  // });\n  // console.log(houses)\n  const [viewport, setViewport] = useState({\n    latitude: 9.034129,\n    longitude: 38.753259,\n    width: \"100vw\",\n    height: \"90vh\",\n    zoom: 12\n  });\n  const mapRef = useRef();\n/* \n  const url =\n    \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2019-10\";\n  const { data, error } = useSwr(url, { fetcher });\n  const crimes = data && !error ? data.slice(0, 2000) : []; */\n  const points = houses.map(house => ({\n\n    type: \"Feature\",\n    properties: {\n      icon: 'house'\n    },\n    geometry: {\n      type: \"Point\",\n      coordinates: [\n        9.0340534,38.7644412\n       ]\n    }\n  }));\n  console.log(points)\n\n  const bounds = mapRef.current\n    ? mapRef.current\n      .getMap()\n      .getBounds()\n      .toArray()\n      .flat()\n    : null;\n\n  const { clusters, supercluster } = useSupercluster({\n    points,\n    bounds,\n    zoom: viewport.zoom,\n    options: { radius: 75, maxZoom: 20 }\n  });\n\n  return (\n    <div>\n      <ReactMapGL\n        {...viewport}\n        maxZoom={20}\n        mapboxApiAccessToken={'pk.eyJ1IjoieW9oYW5uaXN3ZWRlIiwiYSI6ImNrc2x5dXNnYTA5cm4ybnAwdjM4MXI0MnAifQ.isUCw64XCoBGOAaEpDUPLw'}\n        onViewportChange={newViewport => {\n          setViewport({ ...newViewport });\n        }}\n        ref={mapRef}\n      >\n        {clusters.map(cluster => {\n          const [longitude, latitude] = cluster.geometry.coordinates;\n          const {\n            cluster: isCluster,\n            point_count: pointCount\n          } = cluster.properties;\n\n          if (isCluster) {\n            return (\n              <Marker\n                key={`cluster-${cluster.id}`}\n                latitude={latitude}\n                longitude={longitude}\n              >\n                <div\n                  className=\"cluster-marker\"\n                  style={{\n                    width: `${10 + (pointCount / points.length) * 20}px`,\n                    height: `${10 + (pointCount / points.length) * 20}px`\n                  }}\n                  onClick={() => {\n                    const expansionZoom = Math.min(\n                      supercluster.getClusterExpansionZoom(cluster.id),\n                      20\n                    );\n\n                    setViewport({\n                      ...viewport,\n                      latitude,\n                      longitude,\n                      zoom: expansionZoom,\n                      transitionInterpolator: new FlyToInterpolator({\n                        speed: 2\n                      }),\n                      transitionDuration: \"auto\"\n                    });\n                  }}\n                >\n                  {pointCount}\n                </div>\n              </Marker>\n            );\n          }\n\n          return (\n            <Marker\n              key={`crime-${cluster.properties.crimeId}`}\n              latitude={latitude}\n              longitude={longitude}\n            >\n              <button className=\"crime-marker\">\n                <img src=\"/house.svg\" alt=\"crime doesn't pay\" />\n              </button>\n            </Marker>\n          );\n        })}\n      </ReactMapGL>\n    </div>\n  )\n}\n\nexport default HousesLocation\n","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/maps/useGeoLocation.js",["424"],"import React, { useState, useEffect } from \"react\";\n\nconst useGeoLocation = () => {\n    const [location, setLocation] = useState({\n        loaded: false,\n        coordinates: { lat: \"\", lng: \"\" },\n    });\n\n    const onSuccess = (location) => {\n        setLocation({\n            loaded: true,\n            coordinates: {\n                lat: location.coords.latitude,\n                lng: location.coords.longitude,\n            },\n        });\n    };\n\n    const onError = (error) => {\n        setLocation({\n            loaded: true,\n            error: {\n                code: error.code,\n                message: error.message,\n            },\n        });\n    };\n\n    useEffect(() => {\n        if (!(\"geolocation\" in navigator)) {\n            onError({\n                code: 0,\n                message: \"Geolocation not supported\",\n            });\n        }\n\n        navigator.geolocation.getCurrentPosition(onSuccess, onError);\n    }, []);\n\n    return location;\n};\n\nexport default useGeoLocation;","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/LandlordProfile.js",["425","426","427","428","429"],"import axios from 'axios'\nimport React, { createRef, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Divider, Form, Grid, Header, Icon, Input, Label, Menu, Modal, Popup, Segment, Table, TextArea, Progress } from 'semantic-ui-react'\nimport storage from \"../../firebase\"\nconst LandlordProfile = () => {\n  const contextRef = createRef()\n  const [multipleFiles, setMultipleFiles] = useState([]);\n  const [opened, setisOpen] = useState(false)\n  const [open, setOpen] = useState(false)\n  const [openModal, setModalOpen] = useState(false)\n  /* this a state declaration for a file update */\n  const [housename, setHousename] = useState('')\n  const [description, setDescription] = useState('')\n  const [numberofbeds, setNumberOfBeds] = useState(0)\n  const [district, setDistrict] = useState('')\n  const [sefer, setSefer] = useState('')\n  const [feepermonth, setFeeperMonth] = useState(0)\n  const [size, setSize] = useState(0)\n  const [available, setAvailable] = useState(false)\n  const [propertytype, setPropertytype] = useState('')\n  const [video, setVideo] = useState(null)\n  const [imageUrls, setImageUrls] = useState([]);\n  const [videoUrls, setVideoUrls] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [progress, setProgress] = useState(0);\n\n\n  const handleChange = (e) => {\n    e.preventDefault()\n    console.log(e.target.name)\n    for (let i = 0; i < e.target.files.length; i++) {\n      const newImage = e.target.files[i];\n      newImage[\"id\"] = Math.random();\n      setFiles((prevState) => [...prevState, newImage]);\n    }\n  };\n  const handleVideoChange = (e) => {\n    e.preventDefault()\n    setVideo(e.target.files[0])\n\n  }\n  const handleNameChange = (e) => {\n    setHousename(e.target.value)\n    console.log(housename)\n  }\n  const handleDescrptionChange = (e) => {\n    setDescription(e.target.value)\n  }\n  const handleDestrictChange = (e) => {\n    setDistrict(e.target.value)\n  }\n  const handleSeferChange = (e) => {\n    setSefer(e.target.value)\n  }\n  const handleTypeChange = (e) => {\n    setPropertytype(e.target.value)\n  }\n  const handleFeeChange = (e) => {\n    setFeeperMonth(e.target.value)\n  }\n  const handleSizeChange = (e) => {\n    setSize(e.target.value)\n  }\n  const handleAvailableChange = (e) => {\n    setAvailable(e.target.value)\n  }\n  const handleBedChange = (e) => {\n    setNumberOfBeds(e.target.value)\n  }\n  const updateHouse = async (housedata, houseId) => {\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(`http://localhost:5000/api/updateHouse/${houseId}`, housedata, config);\n      console.log(res)\n    } catch (err) {\n      console.log(err)\n    }\n  };\n  const handleMultipleFileSubmit = async (id) => {\n    const formData = new FormData();\n    formData.append('housename', housename);\n    formData.append('description', description);\n    formData.append('district', district);\n    formData.append('sefer', sefer);\n    formData.append('numberofbeds', numberofbeds);\n    formData.append('size', size);\n    formData.append('feepermonth', feepermonth);\n    formData.append('available', available);\n    formData.append('propertytype', propertytype);\n    formData.append('video', videoUrls);\n    for (let i = 0; i < imageUrls.length; i++) {\n      formData.append('files', imageUrls[i]);\n    }\n\n    await updateHouse(formData, id);\n    console.log(formData)\n\n  }\n  const handleUpload = () => {\n    const promises = [];\n    const uploadTaskTwo = storage.ref(`images/${video.name}`).put(video)\n    promises.push(uploadTaskTwo);\n    uploadTaskTwo.on(\n      \"state_changed\",\n      (snapshot) => {\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progress);\n      },\n      (error) => {\n        console.log(error);\n      },\n      async () => {\n        const urls = await storage.ref(\"images\").child(video.name).getDownloadURL()\n        setVideoUrls((prevState) => [...prevState, urls]);\n        console.log(\"this is a video part\", urls)\n\n      }\n\n    )\n\n    files.map((image) => {\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      promises.push(uploadTask);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n        },\n        (error) => {\n          console.log(error);\n        },\n        async () => {\n          const urls = await storage.ref(\"images\").child(image.name).getDownloadURL();\n          setImageUrls((prevState) => [...prevState, urls]);\n          console.log(\"this is a iamge part\", urls)\n\n        }\n      );\n\n    });\n    Promise.all(promises)\n      .then(\n        () => alert(\"All images uploaded\")\n      ).then()\n      .catch((err) => console.log(err));\n\n  };\n  const showConfirm = () => {\n    setisOpen(true)\n\n  }\n  function hideConfirm(houseId) {\n    try {\n      axios.delete(`http://localhost:5000/api/deleteHouse/${houseId}`);\n      console.log(`house with ${houseId} is deleted`)\n    } catch (error) {\n      throw error;\n    }\n\n\n  }\n  const getMultipleFiles = async () => {\n    try {\n      const { data } = await axios.get('http://localhost:5000/api/getMultipleFiles');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  const getMultipleFilesList = async () => {\n    try {\n      const fileslist = await getMultipleFiles();\n      setMultipleFiles(fileslist);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    getMultipleFilesList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div ref={contextRef}>\n      <Grid>\n        <Grid.Column width={3}>\n          <Segment\n            textAlign='center'\n            style={{ height: \"100vh\", backgroundColor: \"#f0f2f2\" }}\n            raised\n          >\n            <Menu vertical secondary>\n              <Menu.Item\n                name='spam'  >\n                <Label>51</Label>\n                My Listing\n              </Menu.Item>\n              <Menu.Item\n                name='inbox'\n                as={Link}\n                to='/listpropterty'\n\n              >\n                <Icon name='plus' aria-label=\"add listing\" />\n                Add Listing\n              </Menu.Item>\n\n\n              <Menu.Item\n                name='updates'\n\n              >\n                <Label>1</Label>\n                My Account\n              </Menu.Item>\n              <Menu.Item\n                name='updates'\n\n              >\n                <Label>1</Label>\n                My Account\n              </Menu.Item>\n              <Menu.Item\n                name='updates'\n\n              >\n                <Label>1</Label>\n                My Account\n              </Menu.Item>\n\n            </Menu>\n\n          </Segment>\n        </Grid.Column>\n\n\n        <Grid.Column width='13'>\n\n          <Grid style={{ marginTop: \"20px\" }} verticalAlign='middle'>\n            <Grid.Column floated='left' width={13}>\n              My Listing\n            </Grid.Column>\n            <Grid.Column floated='right' width={3}>\n              <Button>\n                <Icon name='plus' />\n                Add Listing\n              </Button>\n            </Grid.Column>\n          </Grid>\n          <Divider />\n          <Table basic='very' celled collapsing>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Employee</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {\n                multipleFiles.map((house, index) =>\n\n                  <Table.Row>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.housename}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.description}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.sefer}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house._id}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n\n                    <Table.Cell>\n                      <Icon name='plus' onClick={()=>setOpen(true)}/>\n                      <Modal\n                        open={open}\n                        onClose={() => setOpen(false)}\n                        onOpen={() => setOpen(true)}\n                        content={house.housename}\n                        style={{ maxWidth: \"400px\", textAlign: \"center\" }}\n                      >\n                        \n                      </Modal>\n                      <Popup trigger={<Icon name='edit' />} flowing hoverable position='right center'>\n                        <Grid>\n                          <Grid.Column textAlign='center'>\n                            <Form>\n                              <Segment raised >\n                                <Progress percent={progress} success progress />\n                                <Form.Field\n                                  required\n                                  id='form-input-control-last-name'\n                                  control={Input}\n                                  name='housename'\n                                  type='text'\n                                  label='House Name'\n                                  placeholder='house name'\n                                  onChange={handleNameChange}\n                                />\n                                <Form.Field\n                                  required\n                                  id='property type'\n                                  control={Input}\n                                  label='Property Type'\n                                  name='propertytype'\n                                  placeholder='property type'\n                                  onChange={handleTypeChange}\n                                />\n\n                                <Form.Field\n                                  required\n                                  id='district'\n                                  control={Input}\n                                  label='District'\n                                  name='district'\n                                  placeholder='District or Sub City'\n                                  onChange={handleDestrictChange}\n                                />\n                                <Form.Field\n                                  required\n                                  id='form-input-control-last-name'\n                                  control={Input}\n                                  label='Sefer'\n                                  name='sefer'\n                                  placeholder='Sefer or Village'\n                                  onChange={handleSeferChange}\n                                />\n                                <Form.Field\n                                  required\n                                  id='form-input-control-last-name'\n                                  control={TextArea}\n                                  label='Description'\n                                  name='description'\n                                  placeholder='House description'\n                                  onChange={handleDescrptionChange}\n\n                                />\n                                <Form.Field\n                                  required\n                                  id='form-input-control-last-name'\n                                  control={Input}\n                                  type=\"number\"\n                                  name='size'\n                                  label='Square Footage'\n                                  placeholder='Size of a house'\n                                  onChange={handleSizeChange}\n                                  value={size}\n                                />\n                                <Form.Field\n                                  required\n                                  id='form-input-control-last-name'\n                                  control={Input}\n                                  type=\"number\"\n                                  name='feepermonth'\n                                  label='Lease Fee'\n                                  placeholder='Fee'\n                                  onChange={handleFeeChange}\n                                />\n                                <Form.Field\n                                  required\n                                  id='form-input-control-last-name'\n                                  control={Input}\n                                  type=\"number\"\n                                  name='numberofbeds'\n                                  label='Number of Beds'\n                                  placeholder='beds'\n                                  onChange={handleBedChange}\n                                />\n                                <Form.Field\n                                  required\n                                  control={Input}\n                                  type=\"file\"\n                                  name=\"files\"\n                                  multiple\n                                  label='Photos of the House'\n                                  icon='upload'\n                                  onChange={handleChange}\n                                />\n                                <Form.Field\n                                  required\n                                  id='form-input-control-last-name'\n                                  control={Input}\n                                  type=\"file\"\n                                  name=\"video\"\n                                  label='Videos about the house'\n                                  onChange={handleVideoChange}\n\n                                />\n\n                                <select name=\"available\" id=\"available\" onChange={handleAvailableChange}>\n                                  <option value=\"false\">No</option>\n                                  <option value=\"true\">Yes</option>\n                                </select>\n                                <button onClick={handleUpload}>confirm Update</button>\n                                <button onClick={() => handleMultipleFileSubmit(house._id)}>Update</button>\n\n                              </Segment>\n                            </Form>\n                          </Grid.Column>\n\n                        </Grid>\n                      </Popup>\n\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Button onClick={() => hideConfirm(house._id)}><Icon name='trash' /></Button>\n\n\n                    </Table.Cell>\n                  </Table.Row>\n\n\n\n                )}\n            </Table.Body>\n          </Table>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\n\nexport default LandlordProfile\n","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/Modal.js",[],"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/ContractForm.js",["430","431","432","433"],"import axios from 'axios'\nimport React,{useState} from 'react'\nimport { Form,Button,Input,Header,Checkbox,Divider } from 'semantic-ui-react'\nconst ContractForm = () => {\n    const [tenantEmail, setTenantEmail] = useState(\"\")\n\n    const sendEmail = async (e) => {\n        e.preventDefault();\n    \n        const config = {\n          header: {\n            \"Content-Type\": \"application/json\",\n          },\n        };\n    \n        try {\n          const { data } = await axios.post(\n            \"http://localhost:5000/api/sendContractForm\",\n            { tenantEmail },\n            config\n          );\n         console.log(data)\n    \n        } catch (error) {\n        console.log(error)\n        }\n      };\n    return (\n        <div>\n            <Form>\n        \n        <Form.Field>\n        <label>email</label>\n          <input\n            type=\"email\"\n            required\n            id=\"email\"\n            placeholder=\"Email address\"\n            value={tenantEmail}\n            onChange={(e) => setTenantEmail(e.target.value)}\n          />\n        </Form.Field>\n  \n        <Button onClick={sendEmail}>Submit</Button>\n    </Form>\n        </div>\n    )\n}\n\nexport default ContractForm\n","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/admin/AdminPanel.js",["434","435","436","437","438","439","440","441"],"import React from 'react'\nimport { Button, Divider, Grid, Icon, Label, Menu, Segment } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { Admin, Resource } from 'react-admin';\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport PostList from './PostList';\nconst AdminPanel = () => {\n    return (\n      <div>\n        <Admin dataProvider={simpleRestProvider('http://localhost:5000/api')}>\n          <Resource name=\"getMultipleFiles\" list={PostList}/>\n          <Resource name=\"Users\" list={PostList}/>\n          <Resource name=\"District\" list={PostList}/>\n          <Resource name=\"Account\" list={PostList}/>\n        </Admin>\n\n      </div>\n    )\n}\n\nexport default AdminPanel\n","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/Notification.js",["442","443"],"import React, { useEffect } from 'react'\n\nconst Notification = () => {\n    const publicVapidKey = 'BMffGk0gRxLPOSi-eOlXoR1ahY9Ce7uBY3010C06TeMoRYS_6n1A4ItVeOeNYutDlhPK27WW5UMrdyjBEj_-Pxo';\n\n    //register the service worker, register our push api, sedn the notifation\n    async function send(){\n        //register service worker\n        const register = await navigator.serviceWorker.register('/sw.js', {\n            scope: '/'\n        });\n    \n        //register push\n        console.log('Registering push...')\n        const subscription = await register.pushManager.subscribe({\n            userVisibleOnly: true,\n            applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n        });\n       \n        //Send push notification\n        await fetch(\"http://localhost:5000/api/subscribe\", {\n            method: \"POST\",\n            body: JSON.stringify(subscription),\n            headers: {\n                \"content-type\": \"application/json\"\n            }\n        });\n    }\n    \n    function urlBase64ToUint8Array(base64String) {\n        const padding = \"=\".repeat((4 - base64String.length % 4) % 4);\n        const base64 = (base64String + padding)\n          .replace(/\\-/g, \"+\")\n          .replace(/_/g, \"/\");\n      \n        const rawData = window.atob(base64);\n        const outputArray = new Uint8Array(rawData.length);\n      \n        for (let i = 0; i < rawData.length; ++i) {\n          outputArray[i] = rawData.charCodeAt(i);\n        }\n        return outputArray;\n    }\n    useEffect(() => {\n        send()\n        \n    }, [])\n    return (\n        <div>\n            <h2>notification</h2>\n        </div>\n    )\n}\n\nexport default Notification\n\n\n//check if the serveice worker can work in the current browser\n","/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/admin/PostList.js",["444","445","446"],"import React from 'react'\nimport { List, Datagrid, TextField, EmailField,DeleteButton,EditButton} from 'react-admin';\n\nconst PostList = (props) => {\n    return (\n        <List {...props}>\n        <Datagrid rowClick=\"edit\">\n\n            <TextField source=\"id\" />\n            <TextField source=\"housename\" />\n            <TextField source=\"district\" />\n            <TextField source=\"sefer\" />\n            <TextField source=\"propertytype\" />\n            <TextField source=\"location\" />\n            <TextField source=\"feepermonth\" />\n            <TextField source=\"description\" />\n            <TextField source=\"numberofbeds\" />\n            <TextField source=\"available\" />\n            <TextField source=\"files\" />\n            <TextField source=\"video\" />\n             \n        </Datagrid>\n    </List>\n        \n            \n       \n    )\n}\n\nexport default PostList\n","/home/yohannis/Desktop/Final-Project OHR/client/src/index.js",[],["447","448"],"/home/yohannis/Desktop/Final-Project OHR/client/src/reportWebVitals.js",[],"/home/yohannis/Desktop/Final-Project OHR/client/src/App.js",["449","450","451","452","453","454","455"],"import { createMedia } from '@artsy/fresnel';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Link, useHistory, BrowserRouter as Router, Route } from 'react-router-dom'\nimport {\n  Button,\n  Container, Grid, Header, Icon, List, Menu,\n  Segment,\n  Sidebar,\n  Sticky\n} from 'semantic-ui-react';\nimport Navigator from \"./components/Navigator\";\nimport Home from \"./components/pages/Home\";\nimport SwiperSlider from './components/screen/SwiperSlider';\nimport FileUp from './components/screen/FileUp';\nimport LandlordProfile from './components/screen/LandlordProfile';\n\nconst { MediaContextProvider, Media } = createMedia({\n  breakpoints: {\n    mobile: 0,\n    tablet: 768,\n    computer: 1024,\n  },\n})\n\nconst DesktopContainer = ({ children }) => {\n  const history = useHistory()\n  const [fixed, toggleFixedBar] = useState(false)\n  const showNav = () => {\n    toggleFixedBar(true)\n  }\n  const hideNav = () => {\n    toggleFixedBar(false)\n  }\n\n  const [activeItem, setActiveItem] = useState({\n    name: 'home'\n  })\n\n  const handleItemClick = (e, { name }) => {\n    setActiveItem(name)\n  }\n\n\n  return (\n    <Media greaterThan='mobile'>\n\n      <Navigator />\n      {children}\n    </Media>\n  )\n}\n\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nconst MobileContainer = ({ children }) => {\n  const [sidebarOpened, setOpenedSideBar] = useState(false)\n\n  /* thsi is a handler for sidebar toggler */\n  const handleSidebarHide = () => {\n    setOpenedSideBar(false)\n  }\n\n  const handleToggle = () => {\n    setOpenedSideBar(true)\n  }\n  const history = useHistory()\n  const [activeItem, setActiveItem] = useState({\n    name: 'home'\n  })\n\n  const handleItemClick = (e, { name }) => {\n    setActiveItem(name)\n  }\n\n\n  return (\n    <Media as={Sidebar.Pushable} at='mobile'>\n      <Router>\n      <Sidebar.Pushable>\n        <Sidebar\n          as={Menu}\n          animation='overlay'\n          inverted\n          onHide={handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        >\n          \n            <Menu.Item\n              active={activeItem === 'home'}\n              onClick={handleItemClick}\n              as={Link}\n              to={'/'}\n            >\n              KirayBet.com\n            </Menu.Item>\n            <Menu.Item\n              color='red'\n              active={activeItem === 'tenantscreen'}\n              onClick={handleItemClick}\n              as={Link}\n              to={'/tenantscreen'}\n            >\n              Tenant Screen\n            </Menu.Item>\n            <Menu.Item\n\n              active={activeItem === 'landlordscreen'}\n              onClick={handleItemClick}\n              as={Link}\n              to={'/admin'}\n            >\n              * Fake Admin\n            </Menu.Item>\n            <Menu.Item\n              active={activeItem === 'listproperty'}\n              onClick={handleItemClick}\n              as={Link}\n              to={'/listproperty'}\n            >\n              List Property\n            </Menu.Item>\n            <Menu.Item\n\n              active={activeItem === 'managelisting'}\n              onClick={handleItemClick}\n\n              to={'/managelisting'}\n            >\n              Landlord Screen\n            </Menu.Item>\n           \n          \n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            textAlign='center'\n            style={{ minHeight: 350, padding: '1em 0em' }}\n            vertical\n          >\n            <Container>\n              <Menu pointing secondary size='large'>\n                <Menu.Item onClick={handleToggle}>\n                  <Icon name='sidebar' />\n                </Menu.Item>\n                <Menu.Item position='right'>\n                  <Button as='a' >\n                    Log in\n                  </Button>\n                  <Button as='a' style={{ marginLeft: '0.5em' }}>\n                    Sign Up\n                  </Button>\n                </Menu.Item>\n              </Menu>\n            </Container>\n            <Route exact path=\"/\"><Home /></Route>\n            <Route path=\"/tenantscreen\"><SwiperSlider /></Route>\n            <Route path=\"/listproperty\"><FileUp /></Route>\n            <Route path=\"/managelisting\"><LandlordProfile /></Route>\n          </Segment>\n\n          {children}\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n      </Router>\n      \n    </Media>\n  )\n}\n\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n}\nconst ResponsiveContainer = ({ children }) => (\n  /* Heads up!\n   * For large applications it may not be best option to put all page into these containers at\n   * they will be rendered twice for SSR.\n   */\n  <MediaContextProvider>\n    <DesktopContainer>{children}</DesktopContainer>\n    <MobileContainer>{children}</MobileContainer>\n  </MediaContextProvider>\n)\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nfunction App() {\n\n  return (\n    <div >\n<Router>\n<ResponsiveContainer />\n      <Sticky bottomOffset={0} >\n\n        <Segment inverted vertical style={{ padding: '5em 0em' }}>\n          <Container>\n            <Grid divided inverted stackable>\n              <Grid.Row>\n                <Grid.Column width={3}>\n                  <Header inverted as='h4' content='About' />\n                  <List link inverted>\n                    <List.Item as='a'>Sitemap</List.Item>\n                    <List.Item as='a'>Contact Us</List.Item>\n                    <List.Item as='a'>Our Rental System</List.Item>\n                    <List.Item as='a'>Rental Plans</List.Item>\n                  </List>\n                </Grid.Column>\n                <Grid.Column width={3}>\n                  <Header inverted as='h4' content='Services' />\n                  <List link inverted>\n                    <List.Item as='a'>House Pre-Order</List.Item>\n                    <List.Item as='a'>Kiray.com FAQ</List.Item>\n                    <List.Item as='a'>How To Access</List.Item>\n                    <List.Item as='a'>Favorite Houses</List.Item>\n                  </List>\n                </Grid.Column>\n                <Grid.Column width={7}>\n                  <Header as='h4' inverted>\n                    Terms of Service\n                  </Header>\n                  <p>\n                    Extra space for a call to action inside the footer that could help re-engage users.\n                  </p>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Container>\n        </Segment>\n      </Sticky>\n</Router>\n      \n    </div>\n\n\n\n  );\n}\n\nexport default App;\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/pages/Home.js",["456","457","458","459","460"],"\nimport axios from 'axios'\nimport React, { useEffect, useState, useRef } from 'react'\nimport { Link, useHistory, BrowserRouter as Router } from 'react-router-dom'\nimport {\n  Button,\n  Container, Divider, Form, Grid,\n  Header, Image, Input, List, Segment, Ref\n} from 'semantic-ui-react'\n/* const Auto = () => {\n  const [display, setDisplay] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const wrapperRef = useRef(null);\n  const searchPokemon= async (text)=>{\n    try {\n      const pokemon = [];\n      const searchedHouse = await axios.get(`http://localhost:5000/api/autoCompleteSearch?term=bo`)\n        searchedHouse.data.map(house=>{\n          pokemon.push(house)\n          console.log(house)\n        })\n        setOptions(pokemon);\n    } catch (error) {\n      \n      \n      console.log(error.message)\n    }\n  }\n\n  useEffect(() => {\n    searchPokemon()\n    console.log('options',options)\n    \n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n\n  const handleClickOutside = event => {\n    const { current: wrap } = wrapperRef;\n    if (wrap && !wrap.contains(event.target)) {\n      setDisplay(false);\n    }\n  };\n\n  const updatePokeDex = poke => {\n    setSearch(poke);\n    setDisplay(false);\n    \n  };\n\n  return (\n    <div ref={wrapperRef} className=\"flex-container flex-column pos-rel\">\n      <input\n        id=\"auto\"\n        onClick={() => setDisplay(!display)}\n        placeholder=\"Type to search\"\n        value={search}\n        onChange={event => setSearch(event.target.value)}\n      />\n      {display && (\n        <div className=\"autoContainer\">\n          {options  \n            .map((value) => {\n              return (\n                <div\n                  onClick={() => updatePokeDex(value)}\n                  className=\"option\"\n                  tabIndex=\"0\"\n                >\n                  <span>{value}</span>\n                  \n                </div>\n              );\n            })}\n        </div>\n      )}\n    </div>\n  );\n};\n */\nconst Home = () => {\n  const [display, setDisplay] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  const [clicked, setClicked] = useState(\"\")\n  const wrapperRef = useRef(null);\n  const [multipleFiles, setMultipleFiles] = useState([])\n  const history = useHistory()\n  const handleSearch = (term) => {\n    history.push(`/houseDistrict/${term}`)\n  }\n  const getHousesIntheSameDistrict = async (houseDistrict) => {\n    try {\n      const { data } = await axios.get(`http://localhost:5000/api/getFilesByDistrict/${houseDistrict}`);\n      console.log(data)\n      setMultipleFiles(data);\n      console.log(multipleFiles);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const getMultipleFiles = async () => {\n    try {\n      const { data } = await axios.get('http://localhost:5000/api/getMultipleFiles');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  const getMultipleFilesList = async () => {\n    try {\n      const fileslist = await getMultipleFiles();\n      setMultipleFiles(fileslist);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const searchHouse = async (text) => {\n    try {\n      const pokemon = [];\n      const searchedHouse = await axios.get(`http://localhost:5000/api/autoCompleteSearch?term=${text}`)\n      searchedHouse.data.map(house => {\n        pokemon.push(house)\n\n      })\n\n      setOptions(pokemon);\n    } catch (error) {\n\n\n      console.log(error.message)\n    }\n  }\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n\n  const handleClickOutside = event => {\n    const { current: wrap } = wrapperRef;\n    if (wrap && !wrap.contains(event.target)) {\n      setDisplay(false);\n    }\n  };\n\n  const updatePokeDex = poke => {\n    setSearch(poke);\n    setClicked(poke)\n    setDisplay(false);\n\n  };\n  useEffect(() => {\n\n    getMultipleFilesList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <div>\n      <Segment\n        textAlign='center'\n        style={{\n          minHeight: 640,\n          backgroundImage: \"url(/des2.jpg)\",\n          height: \"80vh\"\n        }}\n      >\n        <Header\n          as='h1'\n          content='Need a house near your workplace'\n          style={{\n            fontSize: '4em',\n            fontFamily: \"NunitoSans, Helvetica, sans-serif\",\n            fontWeight: 'bold',\n            marginBottom: 0,\n            marginTop: '3em',\n            color: \"white\"\n          }}\n        />\n        <Grid textAlign='center'>\n          <Grid.Column style={{ maxWidth: 600 }} >\n            <Ref ref={wrapperRef}>\n              <Segment style={{ borderColor: \"#20c1c9\", borderWidth: \"3px\", padding: \"0px\" }} >\n                <Form size='large'>\n                  <Input\n                    size='big' fluid type='search' placeholder='Search by district...'\n                    action={{\n                      content: 'Search',\n                      style: { backgroundColor: \"#20c1c9\", width: \"55px\", padding: \"7px\" },\n                      onClick: () => handleSearch(clicked)\n                    }}\n                    onChange={(e) => searchHouse(e.target.value)}\n                    onClick={() => setDisplay(!display)}\n                    value={clicked}\n\n                  />\n                </Form>\n                {display && (\n                  <div className=\"autoContainer\">\n                    {options\n                      .map((value) => {\n                        return (\n                          <div\n                            onClick={() => updatePokeDex(value)}\n                            className=\"option\"\n                            tabIndex=\"0\"\n                          >\n                            <span>{value}</span>\n\n                          </div>\n                        );\n                      })}\n                  </div>\n                )}\n              </Segment>\n            </Ref>\n\n\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Divider horizontal>\n        FOR RENTERS\n      </Divider>\n      <Segment style={{ padding: '8em 0em', borderWidth: \"0px\" }} vertical>\n        <Grid container stackable verticalAlign='middle'>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                Let our search guide you\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n                Search thousands of up-to-date property listings on our easy-to-use website. Narrow down your options by choosing what's most important to you, such as number of bedrooms and bathrooms, price range, location, pet policy and more.\n                Parents can also search for rentals that fall within a particular school district.import {useHistory} from 'react-router-dom';\n\n              </p>\n\n              <Button>Start My Search</Button>\n            </Grid.Column>\n            <Grid.Column floated='right' width={6}>\n              <Image bordered rounded size='large' src='/log2.jpeg' />\n            </Grid.Column>\n          </Grid.Row>\n\n        </Grid>\n      </Segment>\n      <Divider horizontal>\n        FOR LANDLORDS\n      </Divider>\n      <Segment style={{ padding: '8em 0em', borderWidth: \"0px\" }} vertical>\n        <Grid container stackable verticalAlign='middle'>\n          <Grid.Row>\n            <Grid.Column width={8}>\n\n              <Header as='h1' style={{ fontSize: '2em' }}>\n                Simple and streamlined rental management all under a single roof\n              </Header>\n              <Header as='h4'>\n                List your rental property\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n\n                Post your rental property in minutes to reach millions of potential renters.\n              </p>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column textAlign='center'>\n              <Button>\n                <Link to='/listproperty'>Check Them Out</Link></Button>\n\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n      {/* <Segment style={{ padding: '0em',borderWidth:\"0px\"}} vertical>\n        <Grid celled='internally' columns='equal' stackable>\n          <Grid.Row textAlign='center'>\n            <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                \"What a Company\"\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>That is what they all say about us</p>\n            </Grid.Column>\n            <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\n              <Header as='h3' style={{ fontSize: '2em' }}>\n                \"I shouldn't have gone with their competitor.\"\n              </Header>\n              <p style={{ fontSize: '1.33em' }}>\n                <Image avatar src='/log.jpeg' />\n                <b>Nan</b> Chief Fun Officer Acme Toys\n              </p>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n */}\n      <Segment style={{ padding: '8em 0em' }} vertical>\n        <Container text>\n          <Header as='h3' style={{ fontSize: '2em' }}>\n            Breaking The Grid, Grabs Your Attention\n          </Header>\n          <p style={{ fontSize: '1.33em' }}>\n            Instead of focusing on content creation and hard work, we have learned how to master the\n            art of doing nothing by providing massive amounts of whitespace and generic content that\n            can seem massive, monolithic and worth your attention.\n          </p>\n          <Button as='a' size='large'>\n            Read More\n          </Button>\n\n          <Divider\n            as='h4'\n            className='header'\n            horizontal\n            style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n          >\n            <a href='#'>Houses</a>\n          </Divider>\n\n          <Header as='h3' style={{ fontSize: '2em' }}>\n            Search By District and Base(Sefer)\n          </Header>\n          <Grid columns=\"3\" style={{ padding: \"0px\", margin: \"0px\"}}>\n            \n            {multipleFiles.map((element, index) =>\n                  <Grid.Column>\n                    <List>\n                      <List.Item\n                        as={Link} to={`/houseDistrict/${element.district}`}\n                      >\n                        {element.district}\n                      </List.Item>\n                    </List>\n                  </Grid.Column>\n\n\n\n\n            )}\n           \n\n          </Grid>\n\n        </Container>\n      </Segment>\n\n\n    </div>\n\n  )\n}\n\nexport default Home\n\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/Navigator.js",["461","462"],"import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport NavBar from './NavBar'\nimport About from './pages/About'\nimport Help from './pages/Help'\nimport Home from './pages/Home'\nimport PrivateRoute from './routing/PrivateRoute'\nimport FileUp from './screen/FileUp'\nimport HouseDetails from './screen/HouseDetails'\nimport HousesInTheSameDistrict from './screen/HousesInTheSameDistrict'\nimport LandlordLogin from './screen/LandlordLogin'\nimport LandlordProfile from './screen/LandlordProfile'\nimport LandlordRegister from './screen/LandlordRegister'\nimport Login from './screen/Login'\nimport Register from './screen/Register'\nimport SwiperSlider from './screen/SwiperSlider'\nimport ContractForm from './screen/ContractForm'\nimport AdminPanel from './admin/AdminPanel';\nimport LandlordAccountReview from './screen/LandlordAccountReview';\nimport ReportIssue from './screen/ReportIssue';\nimport EditHouse from './screen/EditHouse';\nimport FeedBack from './screen/FeedBack';\nimport TenantDashboard from './screen/TenantDashboard';\nimport AdminRoute from './routing/AdminRoute';\nimport AdminLogin from './admin/AdminLogin';\nimport ForgotPassword from './screen/ForgotPassword';\nimport LandlordForgotPassword from './screen/LandlordForgotPassword';\n\n\nconst Navigator = () => {\n    return (\n        <div>\n            <Router>\n                <NavBar/>\n                \n                <Route exact path=\"/\"><Home/></Route>\n                <Route path=\"/forgotpassword\"><ForgotPassword/></Route>\n                <Route path=\"/landlordforgotpassword\"><LandlordForgotPassword/></Route>\n                <Route path=\"/login\"><Login/></Route>\n                <Route path=\"/register\"><Register/></Route>\n                <Route path=\"/landlordLogin\"><LandlordLogin/></Route>\n                <Route path=\"/adminLogin\"><AdminLogin/></Route>\n                <Route path=\"/landlordRegister\"><LandlordRegister/></Route>\n                <Route path=\"/profile\"><LandlordAccountReview/></Route>\n                <Route path=\"/tenantdashboard\"><TenantDashboard/></Route>\n                <PrivateRoute path=\"/managelisting\"><LandlordProfile/></PrivateRoute>\n                <AdminRoute path=\"/admin\"><AdminPanel/></AdminRoute>\n                <Route path=\"/edithouse/:houseId\"><EditHouse/></Route>\n                <Route path=\"/reportissue\"><ReportIssue/></Route>\n                <Route path=\"/feedback\"><FeedBack/></Route>\n                <PrivateRoute path=\"/listproperty\"><FileUp/></PrivateRoute>\n                <Route path=\"/tenantscreen\"><SwiperSlider/></Route>\n                <Route path=\"/contract/:id\"><ContractForm/></Route>\n                <Route path=\"/houseDetails/:productId\"><HouseDetails/></Route>\n                <Route path=\"/houseDistrict/:district\"><HousesInTheSameDistrict/></Route>\n\n            </Router>\n        </div>\n    )\n}\n\nexport default Navigator\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/pages/Help.js",[],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/NavBar.js",["463"],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/routing/PrivateRoute.js",[],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/FileUp.js",["464","465","466","467","468","469","470"],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/HousesInTheSameDistrict.js",["471","472"],"import React, { useEffect, useState,createRef,useRef} from 'react'\nimport axios from 'axios'\n\nimport SwiperCore, { Navigation, Pagination, Scrollbar } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper-bundle.css';\nimport HousesLocation from '../maps/HousesLocation';\nimport { GridColumn,Grid,Image, Card, Form, Container,CardContent,Sticky,Button,Ref, Divider} from 'semantic-ui-react'\nimport { useParams,Link,useHistory} from 'react-router-dom';\n\nSwiperCore.use([Navigation, Pagination, Scrollbar]);\nconst HousesInTheSameDistrict = ({ match }) => {\n  const contextRef = createRef()\n  let params = useParams()\n  const [multipleFiles, setMultipleFiles] = useState([])\n  const housesDistrict = params.district\n  const apiUrl = `http://localhost:5000/api/getFilesByDistrict/${housesDistrict}`;\n  const [display, setDisplay] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  \n  const [clicked,setClicked]= useState(\"\")\n  const wrapperRef = useRef(null);\n  const history = useHistory()\n const handleSearch =(term)=>{\n  history.push(`/houseDistrict/${term}`)\n }\n\n  const getMultipleFilesList = async () => {\n    try {\n      const { data } = await axios.get(apiUrl);\n      console.log(data)\n      setMultipleFiles(data);\n      console.log(multipleFiles);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const searchHouse = async (text) => {\n    try {\n      const pokemon = [];\n      const searchedHouse = await axios.get(`http://localhost:5000/api/autoCompleteSearch?term=${text}`)\n      searchedHouse.data.map(house => {\n        pokemon.push(house)\n        \n      })\n      \n      setOptions(pokemon);\n    } catch (error) {\n\n\n      console.log(error.message)\n    }\n  }\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n\n  const handleClickOutside = event => {\n    const { current: wrap } = wrapperRef;\n    if (wrap && !wrap.contains(event.target)) {\n      setDisplay(false);\n    }\n  };\n\n  const updatePokeDex = poke => {\n    setSearch(poke);\n    setClicked(poke)\n    setDisplay(false);\n\n  };\n  useEffect(() => {\n    getMultipleFilesList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [housesDistrict])\n  return (\n    <div >\n<Ref innerRef={contextRef}>\n<Container fluid >\n          <Grid columns='2' style={{ padding: \"0px\", margin: \"0px\" }}>\n            <GridColumn style={{ padding: \"0px\", margin: \"0px\" }}>\n            <Form>\n              <Form.Group widths='equal'>\n                \n                  <Form.Input\n                    type='search' placeholder='Search...'\n                    action={{\n                      content: 'Search',\n                      style: { backgroundColor: \"#20c1c9\", width: \"55px\", padding: \"7px\" },\n                      onClick:()=>handleSearch(clicked) \n                    }}\n                    onChange={(e) => searchHouse(e.target.value)}\n                    onClick={() => setDisplay(!display)}\n                    value={clicked}\n                  />\n                \n              </Form.Group>\n            </Form>\n            {display && (\n                  <div className=\"autoContainer\">\n                    {options\n                      .map((value) => {\n                        return (\n                          <div\n                            onClick={() => updatePokeDex(value)}\n                            className=\"option\"\n                            tabIndex=\"0\"\n                          >\n                            <span>{value}</span>\n\n                          </div>\n                        );\n                      })}\n                  </div>\n                )}\n              <Grid columns={2} style={{ padding: \"0px\", margin: \"0px\", width: \"70vw\" }}>\n                {multipleFiles.map((element, index) =>\n\n                  <div key={element._id} >\n                    <Card\n                      style={{\n                        height: \"305px\",\n                        width: \"308px\",\n                        margin: \"5px 0px\",\n                      }}\n                    >\n                      <Grid.Column style={{ padding: \"0px\", margin: \"0px\" }}>\n                        <Swiper\n                          slidesPerView={1}\n                          navigation\n                          pagination={{ clickable: true }}\n                          scrollbar={{ draggable: true }}\n                        >\n                          {element.files.map((url, index) =>\n\n                            <SwiperSlide key={index}\n                              style={{ height: \"200px\" }}\n                            >\n                              <Link to={`/houseDetails/${element._id}`}>\n                                <Image src={url} alt=\"img\"\n                                  style={{\n                                    height:\"200px\",\n                                    objectFit: \"cover\"\n                                  }}\n                                />\n                              </Link>\n                            </SwiperSlide>\n\n                          )}\n                        </Swiper>\n                      </Grid.Column>\n                      <CardContent>\n                        \n                        <Card.Description>\n                          {element.feepermonth} Br\n                        </Card.Description>\n                        <Card.Description>\n\n                          {\n                            element.numberofbeds\n                          }bd,\n                          {element.size}sq.ft\n                        </Card.Description>\n                        <Card.Description>\n\n                          {\n                            element.sefer\n                          },{element.district}\n                        </Card.Description>\n                        <Card.Description>\n\n                        <Button size='mini' color=\"teal\">Request Property</Button>\n                        <Button size='mini' floated='right'>0941454140</Button>\n                        </Card.Description>\n\n                      </CardContent>\n\n                    </Card>\n                  </div>\n\n                )}\n\n              </Grid>\n            </GridColumn>\n            <GridColumn style={{ padding: \"0px\" }}>\n            <Sticky context={contextRef} offset={60}>\n                <HousesLocation />\n              </Sticky>\n\n            </GridColumn>\n          </Grid>\n        </Container>\n        </Ref>\n        <Divider hidden/>\n    </div>\n  )\n}\n\nexport default HousesInTheSameDistrict\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/LandlordRegister.js",["473"],"import React,{useState} from 'react'\nimport { Link,Redirect,useHistory} from \"react-router-dom\";\nimport { Button,Form,Grid,Segment,Header, Container} from 'semantic-ui-react'\nimport axios from 'axios';\nconst LandlordRegister = () => {\n    let history = useHistory()\n  const [firstname, setFirstname] = useState(\"\")\n  const [lastname, setLastname] = useState(\"\")\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const registerHandler = async (e) => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (password !== confirmpassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const { data } = await axios.post(\n        \"http://localhost:5000/api/auth/landlordRegister\",\n        {\n          firstname,\n          lastname,\n          username,\n          phone,\n          email,\n          password\n        },\n        config\n      );\n     localStorage.setItem(\"landlordToken\",data.token)\n      history.push(\"/listproperty\")\n      \n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n    return (\n        <div style={{backgroundColor:\"#edeff2\"}}>\n          <Container>\n          <Grid>\n    <Grid.Column width={7}>\n    <Segment\n        textAlign='center'\n        style={{\n          minHeight: 640,\n          backgroundImage: \"url(/des2.jpg)\",\n          height: \"80vh\"\n        }}\n      >\n        <Header\n          as='h1'\n          content='List A house Easily'\n          style={{\n            fontSize: '4em',\n            fontFamily: \"NunitoSans, Helvetica, sans-serif\",\n            fontWeight: 'bold',\n            marginBottom: 0,\n            marginTop: '3em',\n            color: \"white\"\n          }}\n        />\n      </Segment>\n    </Grid.Column>\n    <Grid.Column width={9}>\n      <Header content='Register Landlord'/>\n    {error && <span className=\"error-message\">{error}</span>}\n    <span>\n    Ooops <Link to=\"/register\">I'm Tenant</Link>\n    </span>\n      <Form>\n      <Form.Group widths={2}>\n      <Form.Field>\n          <label>First Name</label>\n          <input\n            type=\"text\"\n            required\n            id=\"name\"\n            placeholder=\"Enter FirstName\"\n            value={firstname}\n            onChange={(e) => setFirstname(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Last Name</label>\n          <input\n            type=\"text\"\n            required\n            id=\"name\"\n            placeholder=\"Enter LastName\"\n            value={lastname}\n            onChange={(e) => setLastname(e.target.value)}\n          />\n        </Form.Field>\n    </Form.Group>\n        <Form.Field>\n          <label>User name</label>\n          <input\n            type=\"text\"\n            required\n            id=\"name\"\n            placeholder=\"Enter username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Phone</label>\n          <input\n            type=\"text\"\n            required\n            id=\"phone\"\n            placeholder=\"Enter phone\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>email</label>\n          <input\n            type=\"email\"\n            required\n            id=\"email\"\n            placeholder=\"Email address\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>password</label>\n        <input\n            type=\"password\"\n            required\n            id=\"password\"\n            autoComplete=\"true\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>confirm password</label>\n        <input\n            type=\"password\"\n            required  \n            autoComplete=\"true\"\n            placeholder=\"Confirm password\"\n            value={confirmpassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Field>\n        <Button onClick={registerHandler} color='linkedin'>SignUp</Button>\n    </Form>\n    <span className=\"register-screen__subtext\">\n          Already have an account? <Link to=\"/landlordLogin\">Login</Link>\n    </span>\n    </Grid.Column>\n   \n       \n  </Grid>\n           </Container>  \n        </div>\n    )\n}\n\nexport default LandlordRegister\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/Login.js",["474","475"],"import axios from \"axios\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, Divider, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\n\nconst Login = () => {\n  let history = useHistory()\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState({})\n  /*  useEffect(() => {\n      if (localStorage.getItem(\"authToken\")) {\n        history.push(\"/tenantscreen\");\n      }\n    }, [history]); */\n\n  const loginHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const { data } = await axios.post(\n        \"http://localhost:5000/api/auth/login\",\n        { email, password },\n        config\n      );\n      setUser(data)\n\n      localStorage.setItem(\"authToken\", data.token);\n      localStorage.setItem(\"tenantId\", data.id);\n      localStorage.setItem(\"tenantEmail\", data.email);\n      history.goBack();\n    } catch (error) {\n\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return (\n    <div style={{ minHeight: \"98vh\", backgroundColor: \"lightgray\" }}>\n      <Grid textAlign=\"center\" verticalAlign='middle' style={{ paddingTop: \"70px\" }}>\n        <Grid.Column width={4} style={{ padding: \"0px\" }}>\n          <Segment\n            textAlign='center'\n            style={{\n              height: \"65vh\",\n              backgroundImage: \"url(/lff.jpeg)\"\n            }}\n          >\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column width={4} style={{ padding: \"0px\" }}>\n          <Segment\n            stacked style={{ backgroundColor: \"lightGray\", height: \"65vh\" }}\n            \n          >\n\n            <Header as='h2' color='teal' textAlign='center'>\n              Tenant Log-in\n            </Header>\n            {error && <span className=\"error-message\">{error}</span>}\n            <Form size='large' style={{verticalAlign:\"center\"}}>\n\n              <Form.Input fluid icon='user' iconPosition='left' type=\"email\"\n                required\n                id=\"email\"\n                placeholder=\"Email address\"\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n                tabIndex={1}\n              />\n\n              <Form.Input\n                fluid\n                icon='lock'\n                iconPosition='left'\n                type=\"password\"\n                required\n                id=\"password\"\n                autoComplete=\"true\"\n                placeholder=\"Enter password\"\n                onChange={(e) => setPassword(e.target.value)}\n                value={password}\n                tabIndex={2}\n              />\n              <label htmlFor=\"password\">\n                Password:{\" \"}\n                <Link to=\"/forgotpassword\">\n                  Forgot Password?\n                </Link>\n              </label>\n              <Divider hidden/>\n              <Button onClick={loginHandler}>Login</Button>\n\n            </Form>\n            <Message>\n              Don't have an account? <Link to=\"/register\">Register</Link>\n            </Message>\n          </Segment>\n        </Grid.Column>\n\n      </Grid>\n\n\n\n    </div>\n  );\n}\n\nexport default Login\n\n\n\n\n\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/ContractForm.js",["476","477"],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/LandlordLogin.js",["478","479"],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/pages/About.js",[],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/HouseDetails.js",["480","481","482","483"],"import React, { useEffect, useState, createRef } from 'react'\nimport axios from 'axios'\n\nimport SwiperCore, { Navigation, Pagination, Scrollbar } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper-bundle.css';\nimport { Breadcrumb, Image, Item, Ref, Segment, Container, Input, Checkbox, Divider, Header, Form, Button, Message, Grid, Modal, Icon, Sticky } from 'semantic-ui-react'\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport ReactPlayer from 'react-player'\nimport RelatedHouses from './RelatedHouses';\n\nSwiperCore.use([Navigation, Pagination, Scrollbar]);\nconst HouseDetails = ({ match }) => {\n  const history = useHistory()\n  const [open, setOpen] = useState(false)\n  let params = useParams()\n  const phoneRegex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/\n\n  const handleInput = (tenantPhone) => {\n    return (\n      tenantPhone.replace(phoneRegex, `($1) $2-$3`)\n    )\n  }\n\n  const contextRef = createRef()\n  const [multipleFiles, setMultipleFiles] = useState([])\n  const [tenantId, setTenantId] = useState(\"\")\n  const [houseId, setHouseId] = useState(\"\")\n  const [tenantPhone, setTenantPhone] = useState(\"\")\n  const [tenantEmail, setTenantEmail] = useState(\"\")\n  const [landlordemail, setLandlordemail] = useState(\"\")\n  const [landlordusername, setLandlordusername] = useState(\"\")\n  const [termsandcondition, settermsandcondition] = useState(\"\")\n  const productId = params.productId\n  const apiUrl = `http://localhost:5000/api/getFilesById/${productId}`;\n\n  const requestHouse = async (e) => {\n\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      if (!localStorage.getItem(\"authToken\")) {\n        history.push('/login')\n      }\n\n      const res = await axios.post(\"http://localhost:5000/api/requestHouses\", { tenantId, houseId, tenantPhone, tenantEmail,landlordemail,landlordusername,termsandcondition}, config);\n   \n      console.log(houseId)\n      console.log(landlordusername)\n      console.log(landlordemail)\n      console.log(tenantPhone)\n      setTenantId(\"\")\n      setTenantPhone(\"\")\n      setTenantEmail(\"\")\n    } catch (err) {\n      console.log(err)\n    }\n  };\n  const getMultipleFilesList = async () => {\n    try {\n      const { data } = await axios.get(apiUrl);\n      setMultipleFiles(data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    getMultipleFilesList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productId])\n  return (\n    <div >\n      {multipleFiles.map((element, index) =>\n        <Ref innerRef={contextRef} key={index}>\n          {/*  */}\n          <Container key={index}>\n\n            <Grid textAlign='justified' style={{ marginBottom: \"1px\" }} key={index}>\n              <Grid.Column width={11} verticalAlign='middle'>\n                <Breadcrumb style={{ color: \"teal\" }}>\n                  <Breadcrumb.Section as={Link} to={'/'}>Home</Breadcrumb.Section>\n                  <Breadcrumb.Divider icon='right chevron' />\n                  <Breadcrumb.Section as={Link} to={`/houseDistrict/${element.district}`}>{element.district}</Breadcrumb.Section>\n                  <Breadcrumb.Divider icon='right chevron' />\n                  <Breadcrumb.Section as={Link}>{element.sefer}</Breadcrumb.Section>\n                  <Breadcrumb.Divider icon='right chevron' />\n                  <Breadcrumb.Section active>{element.housename}</Breadcrumb.Section>\n                </Breadcrumb>\n              </Grid.Column>\n              <Grid.Column width={5} textAlign='right'>\n                <Modal\n                  closeIcon\n                  centered\n                  open={open}\n                  onClose={() => setOpen(false)}\n                  onOpen={() => setOpen(true)}\n                  trigger={<Button color=\"twitter\">\n                    <Icon name='video'/>\n\n                  </Button>}\n                  style={{ maxWidth: \"680px\", textAlign: \"center\" }}\n                  key={index}\n                >\n                  <Modal.Content>\n                  <ReactPlayer url={element.video} controls/>\n                  </Modal.Content>\n\n                </Modal> \n\n                <Button >\n                  <Icon name='phone' />0941454140\n                </Button>\n              </Grid.Column>\n            </Grid>\n\n            <Swiper\n              slidesPerView={2}\n              navigation\n              pagination={{ clickable: true }}\n              scrollbar={{ draggable: true }}\n            >\n              {element.files.map((url, index) =>\n                <div className=\"col-6\">\n                  <SwiperSlide key={index} style={{ maxHeight: \"70vh\" }}>\n                    <Image src={url} wrapped alt=\"img\" style={{ objectFit: \"contain\" }} />\n                  </SwiperSlide>\n                </div>\n              )}\n            </Swiper>\n            <Divider hidden />\n            <Grid>\n              <Grid.Column width={5}>\n                {/* <Sticky active pushing context={contextRef}> */}\n\n                <Segment stacked style={{ backgroundColor: \"lightGray\" }} textAlign='center' key={index}>\n                  <Form size='large' key={index} >\n                    <Header as='h2' color='teal' textAlign='center'>\n                      Request this house\n                    </Header>\n                    <Divider hidden />\n                    <select required name=\"houseId\" onChange={e => setLandlordemail(e.target.value)}>\n                      <option>---Select Email</option>\n                      \n                      <option value={element.owneremail}>Email</option>\n                  \n                    </select>\n                    <select required name=\"houseId\" onChange={e => setLandlordusername(e.target.value)}>\n                    <option>---Select User Name</option>\n                      <option value={element.ownerusername}>username</option>\n                      \n                    </select>\n                    <select required name=\"houseId\" onChange={e => setHouseId(e.target.value)}>\n                    <option>---Select Id</option>\n                      <option value={element._id}>id</option>\n                    </select>\n                    <select required name=\"termsandcondition\" onChange={e => settermsandcondition(e.target.value)}>\n                    <option>---Terms</option>\n                      <option value={element.termsandcondition}>id</option>\n                    </select>\n                    <select required name=\"houseId\" onChange={(e) => setTenantId(e.target.value)}>\n                    <option>---Your Id</option>\n                      <option value={localStorage.getItem(\"tenantId\")}>id</option>\n                    </select>\n                   \n                    <Form.Field\n                      required\n                      id='form-input-control-last-name'\n                      control={Input}\n                      name='tenantPhone'\n                      type='text'\n                      label='Phone Number'\n                      value={tenantPhone}\n                      onChange={(e) => setTenantPhone(e.target.value)}\n                    />\n                    <Form.Field\n                      required\n                      id='form-input-control-last-name'\n                      control={Input}\n                      name='tenantEmail'\n                      type='text'\n                      label='Tenant Email'\n                      placeholder='email'\n                      value={tenantEmail}\n                      onChange={(e) => setTenantEmail(e.target.value)}\n                    />\n                    <Divider hidden />\n                    <Button color=\"twitter\" onClick={requestHouse}>Request House</Button>\n                    <Divider hidden />\n                    <Checkbox label={<label>In sending this message, you agree to KirayBet.com's Privacy Policy and Terms</label>} />\n\n\n                  </Form>\n                </Segment>\n                {/* </Sticky> */}\n              </Grid.Column>\n              <Grid.Column width={11}>\n                <Item.Group>\n                  <Item>\n                    <Item.Content>\n                      <Item.Header as='a'>Description</Item.Header>\n\n                      <Item.Description>\n                        {element.description}\n                      </Item.Description>\n                      \n                    </Item.Content>\n                  </Item>\n\n                  <Item>\n                    <Item.Content>\n                      <Item.Header as='a'>Quick Facts</Item.Header>\n\n                      <Item.Description>\n                        {element.propertytype},{element.numberofbeds}\n                      </Item.Description>\n                      <Item.Extra>{element.size}</Item.Extra>\n                    </Item.Content>\n                  </Item>\n                  <Item>\n                    <Item.Content>\n                      <Item.Header as='a'>Terms</Item.Header>\n                      <Item.Meta>{element.termsandcondition}</Item.Meta>\n                      <Item.Description>\n                        {element.leaseperiod}\n                      </Item.Description>\n                      <Item.Extra>Additional Details</Item.Extra>\n                    </Item.Content>\n                  </Item>\n                  <Item>\n                    <Item.Content>\n                      <Item.Header as='a'>Landlord Info</Item.Header>\n                      <Item.Meta>{element.owneremail}</Item.Meta>\n                      \n                      <Item.Description>\n                      \n                      </Item.Description>\n                      <Item.Extra>{element.ownerusername}</Item.Extra>\n                    </Item.Content>\n                  </Item>\n                  <Item>\n                    <Item.Content>\n                      <Item.Header as='a'>Features</Item.Header>\n                      <Item.Description>\n                        {element.sefer}\n                      </Item.Description>\n                      <Item.Description>\n                        {element.district}\n                      </Item.Description>\n                      \n                    </Item.Content>\n                  </Item>\n                  <Item>\n                    <Item.Content>\n                      <Item.Header as='a'>Status</Item.Header>\n                      <Item.Meta>House Status</Item.Meta>\n                      <Item.Description>\n                        {element.available}\n                      </Item.Description>\n                      \n                    </Item.Content>\n                  </Item>\n                </Item.Group>\n                <Divider hidden />\n                We take fraud seriously. If something looks fishy, let us know.\n                <Link to='/reportissue'>Report This Listing</Link>\n\n              </Grid.Column>\n\n            </Grid>\n\n\n\n            <Divider hidden />\n\n            <Header>People who viewed this House also viewed</Header>\n            <RelatedHouses sefer={element.sefer} />\n\n          </Container>\n        </Ref>\n      )}\n\n    </div>\n  )\n}\n\nexport default HouseDetails\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/Register.js",["484"],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/AdminPanel.js",["485","486","487","488","489","490","491","492","493","494","495"],"import SideNav, { NavIcon, NavItem, NavText } from '@trendmicro/react-sidenav';\n// Be sure to include styles at some point, probably during your bootstraping\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport axios from 'axios';\nimport React, { createRef, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, useHistory } from 'react-router-dom';\nimport { Icon } from 'semantic-ui-react';\nimport FeedBacks from './FeedBacks';\nimport HouseList from './HouseList';\nimport HouseRequests from './HouseRequests';\nimport LandlordList from './LandlordList';\nimport RentedHouse from './RentedHouse';\nimport Reports from './Reports';\nimport SendAppointment from './SendAppointment';\nimport SendContract from './SendContract';\nimport TenantList from './TenantList';\n\n\n\nconst AdminPanel = () => {\n    const history = useHistory()\n    const contextRef = createRef()\n    const [multipleFiles, setMultipleFiles] = useState([]);\n    const [opened, setisOpen] = useState(false)\n    const [open, setOpen] = useState(false)\n    const [openModal, setModalOpen] = useState(false)\n    /* this a state declaration for a file update */\n\n    const showConfirm = () => {\n        setisOpen(true)\n\n    }\n    function hideConfirm(houseId) {\n        try {\n            axios.delete(`http://localhost:5000/api/deleteHouse/${houseId}`);\n            console.log(`house with ${houseId} is deleted`)\n        } catch (error) {\n            throw error;\n        }\n\n\n    }\n\n    const [activeItem, setActiveItem] = useState({\n        name: 'listing'\n    })\n\n    const handleItemClick = (e, { name }) => {\n        setActiveItem(name)\n    }\n    const getMultipleFiles = async () => {\n        try {\n            const { data } = await axios.get('http://localhost:5000/api/getMultipleFiles');\n            return data;\n        } catch (error) {\n            throw error;\n        }\n    }\n    const getMultipleFilesList = async () => {\n        try {\n            const fileslist = await getMultipleFiles();\n            setMultipleFiles(fileslist);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n  \n\n      \n    useEffect(() => {\n        if (!localStorage.getItem(\"adminToken\")) {\n            history.push(\"/adminLogin\")\n          }\n        getMultipleFilesList()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div >\n            <Router>\n                <Route render={({ location, history }) => (\n                    <React.Fragment>\n                        <SideNav\n                           expanded\n                            onSelect={(selected) => {\n                                const to = '/' + selected;\n                                if (location.pathname !== to) {\n                                    history.push(to);\n                                }\n                            }}\n                            style={{ marginTop: \"70px\", backgroundColor: \"#20c1c9\" }}\n                        >\n                            <SideNav.Toggle />\n                            <SideNav.Nav defaultSelected=\"admin\">\n                                <NavItem eventKey=\"admin\">\n                                    <NavIcon>\n                                        <Icon name='home' />\n                                    </NavIcon>\n                                    <NavText>\n                                        DashBoard\n                                    </NavText>\n                                </NavItem>\n                                \n                                <NavItem eventKey=\"rent\">\n                                    <NavIcon>\n                                        <Icon name='home' />\n                                    </NavIcon>\n                                    <NavText>\n                                        Rented Houses\n                                    </NavText>\n                                </NavItem>\n                                <NavItem eventKey=\"report\">\n                                    <NavIcon>\n                                        <Icon name='alert' />\n                                    </NavIcon>\n                                    <NavText>\n                                        Report\n                                    </NavText>\n                                </NavItem>\n                                <NavItem eventKey=\"feedback\">\n                                    <NavIcon>\n                                        <Icon name='home' />\n                                    </NavIcon>\n                                    <NavText>\n                                        Feedback\n                                    </NavText>\n\n                                </NavItem>\n                                <NavItem eventKey=\"houses\">\n                                    <NavIcon>\n                                        <Icon name='home' />\n                                    </NavIcon>\n                                    <NavText>\n                                        Houses\n                                    </NavText>\n\n                                </NavItem>\n                                <NavItem eventKey=\"landlords\">\n                                    <NavIcon>\n                                        <Icon name='home' />\n                                    </NavIcon>\n                                    <NavText>\n                                        Landlords\n                                    </NavText>\n\n                                </NavItem>\n                                <NavItem eventKey=\"tenants\">\n                                    <NavIcon>\n                                        <Icon name='home' />\n                                    </NavIcon>\n                                    <NavText>\n                                        Tenants\n                                    </NavText>\n\n                                </NavItem>\n                              \n                            </SideNav.Nav>\n                        </SideNav>\n                        <main>\n\n                            <Route path=\"/admin\" component={props => <HouseRequests />} />\n                            <Route path=\"/houses\" component={props => <HouseList />} />\n                            <Route path=\"/feedback\" component={props => <FeedBacks />} />\n                            <Route path=\"/report\" component={props => <Reports />} />\n                            <Route path=\"/appointment/:id\" component={props => <SendAppointment />} />\n                            <Route path=\"/tenants\" component={props => <TenantList />} />\n                            <Route path=\"/landlords\" component={props => <LandlordList />} />\n                            <Route path=\"/sendcontract/:id\" component={props => <SendContract />} />\n                            <Route path=\"/rent\" component={props => <RentedHouse />} />\n                            \n\n                        </main>\n                    </React.Fragment>\n                )}\n                />\n            </Router>\n        </div>\n    )\n}\n\nexport default AdminPanel\n\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/Notification.js",["496","497"],["498","499"],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/LandlordProfile.js",["500","501","502","503","504","505","506","507","508","509"],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/SwiperSlider.js",["510","511"],"import axios from 'axios';\nimport React, { createRef, useEffect, useState,useRef} from 'react';\nimport { Link,useHistory} from 'react-router-dom';\nimport { Card, CardContent, Container, Form, Grid, Button, Image, Ref, Divider, Sticky } from 'semantic-ui-react';\nimport SwiperCore, { Navigation, Pagination, Scrollbar } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper-bundle.css';\nimport HousesLocation from '../maps/HousesLocation';\n\nSwiperCore.use([Navigation, Pagination, Scrollbar]);\nconst SwiperSlider = () => {\n  const contextRef = createRef()\n\n  const [multipleFiles, setMultipleFiles] = useState([]);\n  const [display, setDisplay] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  \n  const [clicked,setClicked]= useState(\"\")\n  const wrapperRef = useRef(null);\n  const history = useHistory()\n const handleSearch =(term)=>{\n  history.push(`/houseDistrict/${term}`)\n }\n  const getMultipleFiles = async () => {\n    try {\n      const { data } = await axios.get('http://localhost:5000/api/getMultipleFiles');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  const getMultipleFilesList = async () => {\n    try {\n      const fileslist = await getMultipleFiles();\n      setMultipleFiles(fileslist);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const searchHouse = async (text) => {\n    try {\n      const pokemon = [];\n      const searchedHouse = await axios.get(`http://localhost:5000/api/autoCompleteSearch?term=${text}`)\n      searchedHouse.data.map(house => {\n        pokemon.push(house)\n        \n      })\n      setOptions(pokemon);\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n  useEffect(() => {\n    window.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      window.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  });\n\n  const handleClickOutside = event => {\n    const { current: wrap } = wrapperRef;\n    if (wrap && !wrap.contains(event.target)) {\n      setDisplay(false);\n    }\n  };\n\n  const updatePokeDex = poke => {\n    setSearch(poke);\n    setClicked(poke)\n    setDisplay(false);\n\n  };\n  useEffect(() => {\n    getMultipleFilesList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <div >\n      <Ref innerRef={contextRef}>\n\n        <Container fluid >\n          <Grid columns='2' style={{ padding: \"0px\", margin: \"0px\" }}>\n            <Grid.Column style={{ padding: \"0px\", margin: \"0px\" }}>\n            <Form>\n              \n                \n              <Form.Input\n                    type='search' placeholder='Search...'\n                    action={{\n                      content: 'Search',\n                      style: { backgroundColor: \"#20c1c9\", width: \"55px\", padding: \"7px\" },\n                      onClick:()=>handleSearch(clicked) \n                    }}\n                    onChange={(e) => searchHouse(e.target.value)}\n                    onClick={() => setDisplay(!display)}\n                    value={clicked}\n                  />\n                \n            \n            </Form>\n            {display && (\n                  <div className=\"autoContainer\">\n                    {options\n                      .map((value) => {\n                        return (\n                          <div\n                            onClick={() => updatePokeDex(value)}\n                            className=\"option\"\n                            tabIndex=\"0\"\n                          >\n                            <span>{value}</span>\n\n                          </div>\n                        );\n                      })}\n                  </div>\n                )}\n              <Grid  columns={2} style={{ padding: \"0px\", margin: \"0px\", width: \"70vw\" }}>\n                {multipleFiles.map((element, index) =>\n\n                  <div key={element._id} style={{padding:\"10px\"}}>\n                    <Card\n                      style={{\n                        height: \"305px\",\n                        width: \"315px\",\n                        \n                        padding:\"0px\"\n                      }}\n                      key={index}\n                    >\n                      <Grid.Column style={{ padding: \"0px\", margin: \"0px\" }}>\n                        <Swiper\n                          slidesPerView={1}\n                          navigation\n                         \n                        >\n                          {element.files.map((url, index) =>\n\n                            <SwiperSlide key={index}\n                              style={{ height: \"200px\"}}\n                            >\n                              <Link to={`/houseDetails/${element._id}`}>\n                                <Image src={url} alt=\"img\"\n                                  style={{\n                                    height:\"200px\",\n                                    objectFit: \"cover\"\n                                  }}\n                                />\n                              </Link>\n                            </SwiperSlide>\n\n                          )}\n                        </Swiper>\n                      </Grid.Column>\n                      <CardContent>\n                        \n                        <Card.Description>\n                          {element.feepermonth} Br\n                        </Card.Description>\n                        <Card.Description>\n\n                          {\n                            element.numberofbeds\n                          }bd,\n                          {element.size}sq.ft\n                        </Card.Description>\n                        <Card.Description>\n\n                          {\n                            element.sefer\n                          },{element.district}\n                        </Card.Description>\n                        <Card.Description>\n\n                        <Button size='mini' color=\"teal\">Request Property</Button>\n                        <Button size='mini' floated='right'>(094)-145-4140</Button>\n                        </Card.Description>\n\n                      </CardContent>\n\n                    </Card>\n                  </div>\n\n                )}\n\n              </Grid>\n            </Grid.Column>\n            <Grid.Column style={{ padding: \"0px\" }}>\n              <Sticky context={contextRef} offset={60}>\n                <HousesLocation />\n              </Sticky>\n\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </Ref>\n      <Divider hidden/>\n\n    </div>\n  )\n}\n\nexport default SwiperSlider\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/RelatedHouses.js",[],"/home/yohannis/Desktop/Final-Project OHR/client/src/firebase.js",[],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/maps/useGeoLocation.js",["512"],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/maps/HousesLocation.js",["513","514","515","516"],"import React, { useState, useRef,useEffect } from \"react\";\nimport useSwr from \"swr\";\nimport axios from \"axios\";\nimport ReactMapGL, { Marker, FlyToInterpolator,Popup} from \"react-map-gl\";\nimport useSupercluster from \"use-supercluster\";\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\n\nconst HousesLocation = () => {\n  const [houses,setHouses] = useState([])\n  const [selectedHouse, setSelectedHouse] = useState(null) \n  const getMultipleFiles = async () => {\n    try {\n      const { data } = await axios.get('http://localhost:5000/api/getMultipleFiles');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  const getMultipleFilesList = async () => {\n    try {\n      const fileslist = await getMultipleFiles();\n      setHouses(fileslist);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    getMultipleFilesList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n\n  // const houses = data.data.map(house => {\n  //   return {\n  //     type: 'Feature',\n  //     geometry: {\n  //       type: 'Point',\n  //       coordinates: [\n  //         house.location.coordinates[0],\n  //         house.location.coordinates[1]\n  //       ]\n  //     },\n  //     properties: {\n  //       icon: 'house'\n  //     }\n  //   };\n  // });\n  // console.log(houses)\n  const [viewport, setViewport] = useState({\n    latitude: 9.034129,\n    longitude: 38.753259,\n    width: \"100vw\",\n    height: \"90vh\",\n    zoom: 12\n  });\n  const mapRef = useRef();\n/* \n  const url =\n    \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2019-10\";\n  const { data, error } = useSwr(url, { fetcher });\n  const crimes = data && !error ? data.slice(0, 2000) : []; */\n  const points = houses.map(house => ({\n\n    type: \"Feature\",\n    properties: {\n      icon: 'house'\n    },\n    geometry: {\n      type: \"Point\",\n      coordinates: [\n        house.location.coordinates[0],\n        house.location.coordinates[1]\n       ]\n    }\n  }));\n  console.log(points)\n\n  const bounds = mapRef.current\n    ? mapRef.current\n      .getMap()\n      .getBounds()\n      .toArray()\n      .flat()\n    : null;\n\n  const { clusters, supercluster } = useSupercluster({\n    points,\n    bounds,\n    zoom: viewport.zoom,\n    options: { radius: 75, maxZoom: 20 }\n  });\n\n  return (\n    <div>\n      <ReactMapGL\n        {...viewport}\n        maxZoom={20}\n        mapboxApiAccessToken={'pk.eyJ1IjoieW9oYW5uaXN3ZWRlIiwiYSI6ImNrc2x5dXNnYTA5cm4ybnAwdjM4MXI0MnAifQ.isUCw64XCoBGOAaEpDUPLw'}\n        onViewportChange={newViewport => {\n          setViewport({ ...newViewport });\n        }}\n        ref={mapRef}\n      >\n        {clusters.map(cluster => {\n          const [longitude, latitude] = cluster.geometry.coordinates;\n          const {\n            cluster: isCluster,\n            point_count: pointCount\n          } = cluster.properties;\n\n          if (isCluster) {\n            return (\n              <Marker\n                key={`cluster-${cluster.id}`}\n                latitude={latitude}\n                longitude={longitude}\n              >\n                <div\n                  className=\"cluster-marker\"\n                  style={{\n                    width: `${10 + (pointCount / points.length) * 20}px`,\n                    height: `${10 + (pointCount / points.length) * 20}px`\n                  }}\n                  onClick={() => {\n                    const expansionZoom = Math.min(\n                      supercluster.getClusterExpansionZoom(cluster.id),\n                      20\n                    );\n\n                    setViewport({\n                      ...viewport,\n                      latitude,\n                      longitude,\n                      zoom: expansionZoom,\n                      transitionInterpolator: new FlyToInterpolator({\n                        speed: 2\n                      }),\n                      transitionDuration: \"auto\"\n                    });\n                  }}\n                >\n                  {pointCount}\n                </div>\n              </Marker>\n            );\n          }\n\n          return (\n            <Marker\n              key={`crime-${cluster.properties.crimeId}`}\n              latitude={latitude}\n              longitude={longitude}\n            >\n              <button className=\"crime-marker\" onClick={(e)=>\n               <Popup latitude={latitude} longitude={longitude}>\n               <div>\n                 house\n               </div>\n             </Popup>\n                \n                 \n              }>\n                <img src=\"/house.svg\" alt=\"house doesn't render\" />\n              </button>\n            </Marker>\n          );\n        })}\n        {/* {\n          selectedHouse?\n          (\n            <Popup>\n              <div>\n                house\n              </div>\n            </Popup>\n          ):null\n        } */}\n      </ReactMapGL>\n    </div>\n  )\n}\n\nexport default HousesLocation\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/LandlordAccountReview.js",["517","518","519","520"],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/ReportIssue.js",["521","522","523","524","525","526"],"import { useState } from 'react'\nimport { Grid, Input, Segment, Divider, Header, Form, TextArea, Image, Button, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nconst ReportIssue = () => {\n  const [description, setDescription] = useState('')\n  const [reportedBy, setReportedBy] = useState('')\n  const reportIssue = async (e) => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(\"http://localhost:5000/report/reportissue\", { description, reportedBy }, config);\n      console.log(res)\n\n    } catch (err) {\n      console.log(err)\n    }\n  };\n  return (\n\n    <div style={{ minHeight: \"100vh\" }}>\n\n      <Grid style={{ marginTop: \"5px\" }} >\n        \n        <Grid.Column width={16}>\n        \n          <Divider hidden />\n          \n          <Grid textAlign=\"center\" width=\"8\">\n\n\n          <Segment style={{ backgroundColor: \"lightGray\" }} textAlign='center' >\n                  <Form size='large' >\n                    <Header as='h2' color='teal' textAlign='center'>\n                      Report an Issue\n                    </Header>\n                    <Divider hidden />\n                   \n                    <Form.Field\n                      required\n                      id='form-input-control-last-name'\n                      control={Input}\n                      name='reportedby'\n                      type='text'\n                      label='Reported By'\n                      placeholder=\"enter your name\"\n                      \n                    />\n                    <Form.Field\n                      required\n                      id='form-input-control-last-name'\n                      control={TextArea}\n                      name='description'\n                      type='text'\n                      label='Report Descirption'\n                      placeholder=\"enter what you want to report\"\n                      \n                    />\n                  \n                    <Divider hidden />\n                    <Button color=\"twitter\" >Report Issue</Button>\n                    \n                    \n                  </Form>\n                </Segment>\n          </Grid>\n\n        </Grid.Column>\n\n      </Grid>\n\n    </div>\n\n\n  )\n}\n\nexport default ReportIssue\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/FeedBack.js",["527","528","529"],"import React from 'react'\nimport {Grid,Input, Segment,Divider, Header,Form,Item,Image,Button,TextArea } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst FeedBack = () => {\n    return (\n        <div style={{height:\"100vh\"}}>\n            <Grid textAlign='center'>\n              <Grid.Column width={5}>\n                {/* <Sticky active pushing context={contextRef}> */}\n\n                <Segment stacked style={{ backgroundColor: \"lightGray\" }} textAlign='center'>\n                <Form size='large' >\n                      <Header as='h2' color='teal' textAlign='center'>\n                        Write a FeedBack\n                      </Header>\n                      <Form.Field\n                                required\n                                id='form-input-control-last-name'\n                                control={TextArea}\n                                label='FeedBack'\n                                name='feedback'\n                                placeholder='feedback'\n                                \n\n                            />\n                      <Form.Field\n                        required\n                        control={Input}\n                        name='usertype'\n                        type='text'\n                        label='type of user'\n                        placeholder='identify who you are'\n                       \n                      />\n                      <Form.Field\n                        required\n                        id='form-input-control-last-name'\n                        control={Input}\n                        name='username'\n                        type='text'\n                        label='username'\n                        \n                      />\n                     \n                      <Divider hidden />\n                      <Button color=\"twitter\" >Send FeedBack</Button>\n                      <Divider hidden />\n                      \n                    </Form>\n                </Segment>\n                {/* </Sticky> */}\n              </Grid.Column>\n              \n\n            </Grid>\n        </div>\n    )\n}\n\nexport default FeedBack\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/EditHouse.js",["530","531","532","533","534","535","536","537","538"],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/FeedBacks.js",["539","540","541"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Feed, Grid } from 'semantic-ui-react'\n\n\nconst date = '3 days ago'\nconst summary = 'Laura Faucet created a post'\nconst extraText = \"Have you seen what's going on in Israel? Can you believe it.\"\nconst FeedBacks = () => {\n    const [multipleFiles, setMultipleFiles] = useState([]);\n    const getMultipleFiles = async () => {\n        try {\n            const { data } = await axios.get('http://localhost:5000/report/getfeedback');\n            return data;\n        } catch (error) {\n            throw error;\n        }\n    }\n    const getMultipleFilesList = async () => {\n        try {\n            const fileslist = await getMultipleFiles();\n            setMultipleFiles(fileslist);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    useEffect(() => {\n        getMultipleFilesList()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return (\n        <div style={{ height: \"100vh\"}}>\n            {\n                multipleFiles.map((house, index) =>\n\n                    <Grid>\n                        <Grid.Column width=\"5\"></Grid.Column>\n                        <Grid.Column width=\"11\" textAlign=\"right\" verticalAlign=\"middle\">\n                            <Feed>\n                                <Feed.Event\n                                    date={house.createdAt}\n                                    summary={house.feedback}\n                                    extraText={house.username}\n                                />\n\n                            </Feed>\n                        </Grid.Column>\n\n                    </Grid>\n\n                )}\n        </div>\n    )\n}\n\nexport default FeedBacks\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/HouseList.js",["542"],"import axios from 'axios'\nimport React, { createRef, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Divider, Grid, Header, Icon, Table } from 'semantic-ui-react'\n\n\nconst HouseList = () => {\n    const contextRef = createRef()\n    const [multipleFiles, setMultipleFiles] = useState([]);\n    \n    /* this a state declaration for a file update */\n  \n    function hideConfirm(houseId) {\n      try {\n        axios.delete(`http://localhost:5000/api/deleteHouse/${houseId}`);\n        console.log(`house with ${houseId} is deleted`)\n      } catch (error) {\n        throw error;\n      }\n  \n  \n    }\n  \n    const getMultipleFiles = async () => {\n      try {\n          const { data } = await axios.get('http://localhost:5000/api/getMultipleFiles');\n          return data;\n      } catch (error) {\n          throw error;\n      }\n  }\n  const getMultipleFilesList = async () => {\n      try {\n          const fileslist = await getMultipleFiles();\n          setMultipleFiles(fileslist);\n      } catch (error) {\n          console.log(error);\n      }\n  }\n  useEffect(() => {\n      getMultipleFilesList()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n    return (\n        <div style={{minHeight:\"100vh\"}}>\n            <Grid textAlign='right'>\n<Grid.Column width='3'>\n\n</Grid.Column>\n            <Grid.Column width='13' textAlign='right'>\n          \n          <Grid style={{ marginTop: \"20px\" }} verticalAlign='middle'>\n            <Grid.Column floated='left' width={13}>\n            \n            </Grid.Column>\n            <Grid.Column floated='right' width={3}>\n              <Button>\n                <Icon name='plus' />\n                Add Listing\n              </Button>\n            </Grid.Column>\n          </Grid>\n          <Divider />\n          <Table striped collapsing padded>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Employee</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {\n                multipleFiles.map((house, index) =>\n\n                  <Table.Row>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.housename}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.description}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.sefer}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house._id}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n\n                    <Table.Cell textAlign='center'>\n                      <Link to={`/edithouse/${house._id}`}>\n                        <Icon name='edit' />\n                      </Link>\n\n                    </Table.Cell>\n                    <Table.Cell textAlign='center'>\n                      <Button onClick={() => hideConfirm(house._id)}><Icon name='trash' /></Button>\n\n\n                    </Table.Cell>\n                  </Table.Row>\n\n\n\n                )}\n            </Table.Body>\n          </Table>\n        </Grid.Column>\n            </Grid>\n        </div>\n    )\n}\n\nexport default HouseList\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/Reports.js",["543","544"],"import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Feed, Grid } from 'semantic-ui-react'\nconst date = '3 days ago'\nconst summary = 'Laura Faucet created a post'\nconst extraText = \"Have you seen what's going on in Israel? Can you believe it.\"\nconst Reports = () => {\n    const [multipleFiles, setMultipleFiles] = useState([]);\n    const getMultipleFiles = async () => {\n        try {\n            const { data } = await axios.get('http://localhost:5000/report/getreport');\n            return data;\n        } catch (error) {\n            throw error;\n        }\n    }\n    const getMultipleFilesList = async () => {\n        try {\n            const fileslist = await getMultipleFiles();\n            setMultipleFiles(fileslist);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    useEffect(() => {\n        getMultipleFilesList()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return (\n        <div style={{ height: \"100vh\"}}>\n            {\n                multipleFiles.map((house, index) =>\n                    <Grid>\n                        <Grid.Column width=\"5\"></Grid.Column>\n                        <Grid.Column width=\"11\" textAlign=\"right\" verticalAlign=\"middle\">\n                        <Feed>\n                            <Feed.Event\n                                date={house.createdAt}\n                                summary={house.description}\n                                extraText={extraText}\n                            />\n\n                        </Feed>\n                        </Grid.Column>\n                        \n                    </Grid>\n\n\n\n                )}\n        </div>\n    )\n}\n\nexport default Reports\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SendAppointment.js",["545"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Datetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\nimport { useParams } from 'react-router-dom';\nimport { Button, Form, Grid, Input, Segment } from 'semantic-ui-react';\nconst SendAppointment = () => {\n  let params = useParams()\n  const houseid = params.id\n  const [tenantEmail, setTenantEmail] = useState(\"\")\n  const [landlordEmail, setLandlordEmail] = useState(\"\")\n  const [appointmentletter, setLetter] = useState(\"\")\n\n  const [date, setDate] = useState(new Date())\n  const [house, setHouse] = useState([])\n\n  const getSpecificRequestedHouse = async (e) => {\n    try {\n      const { data } = await axios.get(`http://localhost:5000/admin/gethouserequestbyid/${houseid}`)\n      setHouse(data)\n      \n    } catch (error) {\n      console.log(error)\n    }\n  }\n  const sendEmail = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const { data } = await axios.post(\n        \"http://localhost:5000/admin/sendappointment\",\n        { tenantEmail,landlordEmail,appointmentletter, date },\n        config\n      );\n      console.log(data)\n      alert(\"sent successfuly\")\n\n    } catch (error) {\n      console.log(error)\n    }\n  };\n  useEffect(() => {\n    getSpecificRequestedHouse()\n\n  }, [])\n  return (\n    <div style={{ alignContent: \"center\", margin: \"100px\",height:\"100vh\"}}>\n\n      <Grid textAlign='center'>\n        <Grid.Column width={7}>\n\n          <Segment stacked style={{ backgroundColor: \"lightGray\" }} textAlign='center'>\n            {\n              house.map((element, index) =>\n\n              <Form>\n\n              <Form.Field>\n                <label>tenant email</label>\n                <select required name=\"tenantEmail\" onChange={e => setTenantEmail(e.target.value)}>\n                  <option>---Select Email</option>\n                  <option value={element.tenantEmail}>Email</option>\n\n                </select>\n              </Form.Field>\n              <Form.Field>\n              <label>landlord email</label>\n                <select required name=\"landlordemail\" onChange={e => setLandlordEmail(e.target.value)}>\n                  <option>---Select Email</option>\n                  <option value={element.landlordemail}>Email</option>\n\n                </select>\n              </Form.Field>\n              <Form.Field\n                      required\n                      id='form-input-control-last-name'\n                      control={Input}\n                      name='appointmentletter'\n                      type='text'\n                      label='appointmentletter'\n                      onChange={(e) => setLetter(e.target.value)}\n                    />\n              <Form.Field>\n                <label>Date</label>\n                <Datetime\n                  value={date}\n                  onChange={e => setDate(e, date)}\n                />\n              </Form.Field>\n              <Button onClick={sendEmail}>Submit</Button>\n            </Form>\n                        \n            )}\n            \n          </Segment>\n        </Grid.Column>\n\n\n      </Grid>\n    </div>\n  )\n}\n\nexport default SendAppointment\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/TenantList.js",["546"],"import axios from 'axios'\nimport React, { createRef, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Divider, Grid, Header, Icon, Table } from 'semantic-ui-react'\n\n\nconst TenantList = () => {\n  const contextRef = createRef()\n  const [multipleFiles, setMultipleFiles] = useState([]);\n  \n  /* this a state declaration for a file update */\n\n  function hideConfirm(houseId) {\n    try {\n      axios.delete(`http://localhost:5000/api/deleteHouse/${houseId}`);\n      console.log(`house with ${houseId} is deleted`)\n    } catch (error) {\n      throw error;\n    }\n\n\n  }\n\n  const getMultipleFiles = async () => {\n    try {\n        const { data } = await axios.get('http://localhost:5000/admin/gettenants');\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\nconst getMultipleFilesList = async () => {\n    try {\n        const fileslist = await getMultipleFiles();\n        setMultipleFiles(fileslist);\n    } catch (error) {\n        console.log(error);\n    }\n}\nuseEffect(() => {\n    getMultipleFilesList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n}, []);\n    return (\n      <div style={{minHeight:\"100vh\"}}>\n            <Grid textAlign='right'>\n<Grid.Column width='3'>\n\n</Grid.Column>\n            <Grid.Column width='13' textAlign='right'>\n          \n          <Grid style={{ marginTop: \"20px\" }} verticalAlign='middle'>\n            <Grid.Column floated='left' width={13}>\n              My Listing\n            </Grid.Column>\n            <Grid.Column floated='right' width={3}>\n              <Button>\n                <Icon name='plus' />\n                Add Listing\n              </Button>\n            </Grid.Column>\n          </Grid>\n          <Divider />\n          <Table basic='very' celled collapsing>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Employee</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {\n                multipleFiles.map((house, index) =>\n\n                  <Table.Row>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.username}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.email}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                  \n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house._id}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n\n                    <Table.Cell>\n                      <Link to={`/edithouse/${house._id}`}>\n                        <Icon name='edit' />\n                      </Link>\n\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Button onClick={() => hideConfirm(house._id)}><Icon name='trash' /></Button>\n\n\n                    </Table.Cell>\n                  </Table.Row>\n\n\n\n                )}\n            </Table.Body>\n          </Table>\n        </Grid.Column>\n            </Grid>\n        </div>\n    )\n}\n\nexport default TenantList\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/LandlordList.js",["547"],"import axios from 'axios'\nimport React, { createRef, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Divider, Grid, Header, Icon, Table } from 'semantic-ui-react'\n\n\nconst LandlordList = () => {\n  const contextRef = createRef()\n  const [multipleFiles, setMultipleFiles] = useState([]);\n  \n  /* this a state declaration for a file update */\n\n  function hideConfirm(houseId) {\n    try {\n      axios.delete(`http://localhost:5000/api/deleteHouse/${houseId}`);\n      console.log(`house with ${houseId} is deleted`)\n    } catch (error) {\n      throw error;\n    }\n\n  }\n  const getMultipleFiles = async () => {\n    try {\n        const { data } = await axios.get('http://localhost:5000/admin/getlandlords');\n        return data;\n    } catch (error) {\n        throw error;\n    }\n}\nconst getMultipleFilesList = async () => {\n    try {\n        const fileslist = await getMultipleFiles();\n        setMultipleFiles(fileslist);\n    } catch (error) {\n        console.log(error);\n    }\n}\nuseEffect(() => {\n    getMultipleFilesList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n}, []);\n    return (\n      <div style={{minHeight:\"100vh\"}}>\n            <Grid textAlign='right'>\n<Grid.Column width='3'>\n\n</Grid.Column>\n            <Grid.Column width='13' textAlign='right'>\n          \n          <Grid style={{ marginTop: \"20px\" }} verticalAlign='middle'>\n            <Grid.Column floated='left' width={13}>\n              My Listing\n            </Grid.Column>\n            <Grid.Column floated='right' width={3}>\n              <Button>\n                <Icon name='plus' />\n                Add Listing\n              </Button>\n            </Grid.Column>\n          </Grid>\n          <Divider />\n          <Table basic='very' celled collapsing>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Employee</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {\n                multipleFiles.map((house, index) =>\n\n                  <Table.Row>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.username}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.phone}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.email}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house._id}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n\n                    <Table.Cell>\n                      <Link to={`/edithouse/${house._id}`}>\n                        <Icon name='edit' />\n                      </Link>\n\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Button onClick={() => hideConfirm(house._id)}><Icon name='trash' /></Button>\n\n\n                    </Table.Cell>\n                  </Table.Row>\n\n\n\n                )}\n            </Table.Body>\n          </Table>\n        </Grid.Column>\n            </Grid>\n        </div>\n    )\n}\n\nexport default LandlordList\n\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/DashBoard.js",[],["548","549"],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/TenantDashboard.js",["550","551","552","553","554"],"import SideNav, { NavItem, NavText } from '@trendmicro/react-sidenav';\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, useHistory } from 'react-router-dom';\nimport HouseList from '../admin/HouseList';\nimport ContractForm from './ContractForm';\nimport FeedBack from './FeedBack';\nimport LandlordAccountReview from './LandlordAccountReview';\nimport ReportIssue from './ReportIssue';\nimport RequestedHouse from './RequestedHouse';\nimport TenantProfile from './TenantProfile';\nconst TenantDashboard = () => {\n    const [error, setError] = useState(\"\")\n    const history = useHistory()\n    useEffect(() => {\n      if (!localStorage.getItem(\"authToken\")) {\n        history.push(\"/login\")\n      }\n     /*  const fetchPrivateDate = async () => {\n        const config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${localStorage.getItem(\"landlordToken\")}`,\n          },\n        };\n  \n        try {\n          const { data } = await axios.get(\"http://localhost:5000/api/private\", config);\n  \n        } catch (error) {\n          \n          setError(\"You are not authorized please login\");\n        }\n      };\n  \n      fetchPrivateDate();  */\n    }, []);\n    return (\n        <div style={{minHeight:\"100vh\"}}>\n            <Router>\n        <Route render={({ location, history }) => (\n          <React.Fragment>\n            <SideNav\n            expanded\n            closeIcon={false}\n              onSelect={(selected) => {\n                const to = '/' + selected;\n                if (location.pathname !== to) {\n                  history.push(to);\n                }\n              }}\n              style={{ marginTop: \"70px\", backgroundColor: \"gray\" }}\n            >\n              <SideNav.Toggle />\n              <SideNav.Nav defaultSelected=\"managelisting\">\n                <NavItem eventKey=\"managelisting\">\n                 \n                  <NavText>\n                    Rented House\n                  </NavText>\n                </NavItem>\n                <NavItem eventKey=\"requestedhouse\">\n                 \n                  <NavText>\n                    Requested House\n                  </NavText>\n                </NavItem>\n                <NavItem eventKey=\"tenantprofile\">\n                 \n                  <NavText>\n                    Account Profile\n                  </NavText>\n                </NavItem>\n                <NavItem eventKey=\"reviewcontract\">\n                \n                  <NavText>\n                    Contract\n                  </NavText>\n                </NavItem>\n                <NavItem eventKey=\"feedback\">\n                \n                  <NavText>\n                    FeedBack\n                  </NavText>\n                </NavItem>\n                <NavItem eventKey=\"report\">\n               \n                  <NavText>\n                    Report\n                  </NavText>\n\n                </NavItem>\n\n              </SideNav.Nav>\n            </SideNav>\n            <main>\n              \n              <Route path=\"/requestedhouse\" component={props => <RequestedHouse />} />\n              <Route path=\"/tenantprofile\" component={props => <TenantProfile />} />\n              <Route path=\"/reviewcontract\" component={props => <ContractForm />} />\n              <Route path=\"/feedback\" component={props => <FeedBack />} />\n              <Route path=\"/report\" component={props => <ReportIssue />} />\n\n            </main>\n          </React.Fragment>\n        )}\n        />\n      </Router>\n        </div>\n    )\n}\n\nexport default TenantDashboard\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/RequestedHouse.js",["555"],"\nimport axios from 'axios'\nimport React, { createRef, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Divider, Grid, Header, Icon, Table } from 'semantic-ui-react'\n\nconst RequestedHouse = () => {\n    const contextRef = createRef()\n    const [multipleFiles, setMultipleFiles] = useState([]);\n    \n    /* this a state declaration for a file update */\n  \n    function hideConfirm(houseId) {\n      try {\n        axios.delete(`http://localhost:5000/api/deleteHouse/${houseId}`);\n        console.log(`house with ${houseId} is deleted`)\n      } catch (error) {\n        throw error;\n      }\n  \n  \n    }\n  \n    const getMultipleFiles = async () => {\n      try {\n          const { data } = await axios.get('http://localhost:5000/api/getrequestedHouse/1234');\n          return data;\n      } catch (error) {\n          throw error;\n      }\n  }\n  const getMultipleFilesList = async () => {\n      try {\n          const fileslist = await getMultipleFiles();\n          setMultipleFiles(fileslist);\n      } catch (error) {\n          console.log(error);\n      }\n  }\n  useEffect(() => {\n      getMultipleFilesList()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n    return (\n        <div>\n            <Grid textAlign='right'>\n<Grid.Column width='3'>\n\n</Grid.Column>\n            <Grid.Column width='13' textAlign='right'>\n          \n          <Grid style={{ marginTop: \"20px\" }} verticalAlign='middle'>\n            <Grid.Column floated='left' width={13}>\n              My Listing\n            </Grid.Column>\n            <Grid.Column floated='right' width={3}>\n              <Button>\n                <Icon name='plus' />\n                Add Listing\n              </Button>\n            </Grid.Column>\n          </Grid>\n          <Divider />\n          <Table basic='very' celled collapsing>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Employee</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {\n                multipleFiles.map((house, index) =>\n\n                  <Table.Row>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.username}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.email}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                  \n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house._id}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n\n                    <Table.Cell>\n                      <Link to={`/edithouse/${house._id}`}>\n                        <Icon name='edit' />\n                      </Link>\n\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Button onClick={() => hideConfirm(house._id)}><Icon name='trash' /></Button>\n\n\n                    </Table.Cell>\n                  </Table.Row>\n\n\n\n                )}\n            </Table.Body>\n          </Table>\n        </Grid.Column>\n            </Grid>\n        </div>\n    )\n}\n\nexport default RequestedHouse\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SignHere.js",[],["556","557"],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SignaturePanel.js",[],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/HouseRequests.js",["558","559"],"import axios from 'axios'\nimport React, { createRef, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Divider, Grid, Header, Icon, Table } from 'semantic-ui-react'\n\n\n\nconst HouseRequests = () => {\n    const contextRef = createRef()\n    const [multipleFiles, setMultipleFiles] = useState([]);\n    \n    /* this a state declaration for a file update */\n  \n    function hideConfirm(houseId) {\n      try {\n        axios.delete(`http://localhost:5000/api/deleteHouse/${houseId}`);\n        console.log(`house with ${houseId} is deleted`)\n      } catch (error) {\n        throw error;\n      }\n  \n  \n    }\n   \n    const getMultipleFiles = async () => {\n      try {\n          const { data } = await axios.get('http://localhost:5000/admin/gethouserequest');\n          return data;\n      } catch (error) {\n          throw error;\n      }\n  }\n  const getMultipleFilesList = async () => {\n      try {\n          const fileslist = await getMultipleFiles();\n          setMultipleFiles(fileslist);\n      } catch (error) {\n          console.log(error);\n      }\n  }\n  useEffect(() => {\n      getMultipleFilesList()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n    return (\n        <div style={{minHeight:\"100vh\"}}>\n            <Grid textAlign='right'>\n<Grid.Column width='3'>\n\n</Grid.Column>\n            <Grid.Column width='13' textAlign='right'>\n          \n          <Grid style={{ marginTop: \"20px\" }} verticalAlign='middle'>\n            <Grid.Column floated='left' width={13}>\n              My Listing\n            </Grid.Column>\n            <Grid.Column floated='right' width={3}>\n              <Button>\n                <Icon name='plus' />\n                Add Listing\n              </Button>\n            </Grid.Column>\n          </Grid>\n          <Divider />\n          <Table basic='very' celled collapsing>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Employee</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Correct Guesses</Table.HeaderCell>\n                <Table.HeaderCell>Send Appointment</Table.HeaderCell>\n                <Table.HeaderCell>Send Contract Form</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {\n                multipleFiles.map((house, index) =>\n\n                  <Table.Row>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.tenantId}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.houseId}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.tenantPhone}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Header as='h4' image>\n                        <Header.Content>\n                          {house.tenantEmail}\n                        </Header.Content>\n                      </Header>\n                    </Table.Cell>\n\n                    <Table.Cell>\n                      <Link to={`/appointment/${house._id}`}>\n                        <Icon name='calendar alternate outline' />\n                      </Link>\n\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Link to={`/sendcontract/${house._id}`}>\n                        <Icon name='wpforms' />\n                      </Link>\n\n                    </Table.Cell>\n                    \n                  </Table.Row>\n\n\n\n                )}\n            </Table.Body>\n          </Table>\n        </Grid.Column>\n            </Grid>\n        </div>\n    )\n}\n\nexport default HouseRequests\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/Terms.js",["560"],"import { Container, Header, Segment } from 'semantic-ui-react'\nimport TextPlaceHolder from './SignHere.js'\nimport { Divider, Grid, Image,Form,Button} from 'semantic-ui-react'\nconst TermsAndConditions = () => {\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n\n      <Grid style={{ marginTop: \"5px\" }} >\n        <Grid.Column width=\"3\"></Grid.Column>\n        <Grid.Column width={13}>\n          <Segment\n            textAlign='bottom'\n            style={{\n              backgroundImage: \"url(/des2.jpg)\",\n              height: \"20vh\"\n            }}\n          >\n            <Image src='https://react.semantic-ui.com/images/wireframe/square-image.png' size='small' circular />\n          </Segment>\n          <Divider hidden />\n          <Divider hidden />\n\n          <Divider />\n          <Grid textAlign='left'>\n            <Grid.Column width=\"8\"><Form size='large' style={{ verticalAlign: \"center\" }}>\n              <Header> Tenant Contract Fill Form</Header>\n              <Form.Input fluid icon='user' iconPosition='left' type=\"text\"\n                required\n                placeholder=\"Email address\"\n                tabIndex={1}\n              />\n              <Form.Input fluid icon='user' iconPosition='left' type=\"email\"\n                required\n                id=\"email\"\n                placeholder=\"Email address\"\n                tabIndex={1}\n              />\n              <Form.Input fluid icon='user' iconPosition='left' type=\"email\"\n                required\n                id=\"email\"\n                placeholder=\"Email address\"\n                tabIndex={1}\n              />\n\n             \n              <Divider hidden />\n              \n\n            </Form></Grid.Column>\n\n            <Grid.Column width=\"8\"><Form size='large' style={{ verticalAlign: \"center\" }}>\n\n              <Form.Input fluid icon='user' iconPosition='left' type=\"email\"\n                required\n                id=\"email\"\n                placeholder=\"Email address\"\n                tabIndex={1}\n              />\n\n              <Form.Input\n                fluid\n                icon='lock'\n                iconPosition='left'\n                type=\"password\"\n                required\n                id=\"password\"\n                autoComplete=\"true\"\n                placeholder=\"Enter password\"\n\n                tabIndex={2}\n              />\n             \n              <Divider hidden />\n              <Button >Login</Button>\n\n            </Form></Grid.Column>\n\n            <Header as='h2' >Terms And Conditions</Header>\n            <p>This is an agreement between Yohannes and Hezekiel Tamire that lasts for the next ten months!\n              A violation will result in the bla bla bla bla bla bla bla.\n              This is an agreement between Yohannes and Hezekiel Tamire that lasts for the next ten months!\n              A violation will result in the bla bla bla bla bla bla bla.\n              This is an agreement between Yohannes and Hezekiel Tamire that lasts for the next ten months!\n              A violation will result in the bla bla bla bla bla bla bla.\n              This is an agreement between Yohannes and Hezekiel Tamire that lasts for the next ten months!\n              A violation will result in the bla bla bla bla bla bla bla.\n            </p>\n            <Segment.Group>\n              <Segment>\n                <TextPlaceHolder />\n                Tenant\n              </Segment>\n              <Segment>\n                <TextPlaceHolder />\n                Landlord\n              </Segment>\n            </Segment.Group>\n          </Grid>\n        </Grid.Column>\n      </Grid>\n\n    </div>\n\n\n\n\n  )\n}\n// function TermsAndConditions () {\n//     return(\n//         <Container>\n//             <Header as='h2' >Terms And Conditions</Header>\n//             <p>This is an agreement between Yohannes and Hezekiel Tamire that lasts for the next ten months!\n//                 A violation will result in the bla bla bla bla bla bla bla.\n//                 This is an agreement between Yohannes and Hezekiel Tamire that lasts for the next ten months!\n//                 A violation will result in the bla bla bla bla bla bla bla.\n//                 This is an agreement between Yohannes and Hezekiel Tamire that lasts for the next ten months!\n//                 A violation will result in the bla bla bla bla bla bla bla.\n//                 This is an agreement between Yohannes and Hezekiel Tamire that lasts for the next ten months!\n//                 A violation will result in the bla bla bla bla bla bla bla.\n//             </p>\n//             <Segment.Group vertical>\n//                 <Segment>\n//                     Tenant\n//                 </Segment>\n//                 <Segment>\n//                     Landlord\n//                 </Segment>\n//                 </Segment.Group>\n//         </Container>\n//     )\n// }\nexport default TermsAndConditions;","/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SendContract.js",["561"],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/RentedHouse.js",["562"],"import axios from 'axios'\nimport React, { createRef, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Divider, Grid, Header, Icon, Table } from 'semantic-ui-react'\n\n\nconst RentedHouse = () => {\n    const contextRef = createRef()\n    const [multipleFiles, setMultipleFiles] = useState([]);\n    \n    /* this a state declaration for a file update */\n  \n   \n    const getMultipleFiles = async () => {\n      try {\n          const { data } = await axios.get('http://localhost:5000/admin/rentedhouse');\n          return data;\n      } catch (error) {\n          throw error;\n      }\n  }\n  const getMultipleFilesList = async () => {\n      try {\n          const fileslist = await getMultipleFiles();\n          setMultipleFiles(fileslist);\n      } catch (error) {\n          console.log(error);\n      }\n  }\n  useEffect(() => {\n      getMultipleFilesList()\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n    return (\n        <div style={{minHeight:\"100vh\"}}>\n        <Grid textAlign='right'>\n<Grid.Column width='3'>\n\n</Grid.Column>\n        <Grid.Column width='13' textAlign='right'>\n      \n      <Grid style={{ marginTop: \"20px\" }} verticalAlign='middle'>\n        <Grid.Column floated='left' width={13}>\n          My Listing\n        </Grid.Column>\n        <Grid.Column floated='right' width={3}>\n          <Button>\n            <Icon name='plus' />\n            Add Listing\n          </Button>\n        </Grid.Column>\n      </Grid>\n      <Divider />\n      <Table basic='very' celled collapsing>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>House</Table.HeaderCell>\n            <Table.HeaderCell>Tenant Name</Table.HeaderCell>\n            <Table.HeaderCell>Landlord Name</Table.HeaderCell>\n            <Table.HeaderCell>Terms</Table.HeaderCell>\n            <Table.HeaderCell>Lease Period</Table.HeaderCell>\n            <Table.HeaderCell>Action</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {\n            multipleFiles.map((house, index) =>\n\n              <Table.Row>\n                <Table.Cell>\n                  <Header as='h4' image>\n                    <Header.Content>\n                      {house.houseid}\n                    </Header.Content>\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header as='h4' image>\n                    <Header.Content>\n                      {house.tenantname}\n                    </Header.Content>\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header as='h4' image>\n                    <Header.Content>\n                      {house.landlordname}\n                    </Header.Content>\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header as='h4' image>\n                    <Header.Content>\n                      {house.termsandcondition}\n                    </Header.Content>\n                  </Header>\n                </Table.Cell>\n                <Table.Cell>\n                  <Header as='h4' image>\n                    <Header.Content>\n                      {house.contractduration}\n                    </Header.Content>\n                  </Header>\n                </Table.Cell>\n\n                <Table.Cell>\n                  <Link >\n                    <Icon name='trash' />\n                  </Link>\n\n                </Table.Cell>\n                \n              </Table.Row>\n\n\n\n            )}\n        </Table.Body>\n      </Table>\n    </Grid.Column>\n        </Grid>\n    </div>\n    )\n}\n\nexport default RentedHouse\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/routing/AdminRoute.js",[],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/AdminLogin.js",["563","564","565","566","567"],"import axios from \"axios\";\nimport React, { useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, Divider, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nconst AdminLogin = () => {\n    let history = useHistory()\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [user, setUser] = useState({})\n  \n    const loginHandler = async (e) => {\n      e.preventDefault();\n  \n      const config = {\n        header: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n  \n      try {\n        const { data } = await axios.post(\n          \"http://localhost:5000/admin/login\",\n          { email, password },\n          config\n        );\n        \n  \n        localStorage.setItem(\"adminToken\", data.token);\n        history.push('/admin');\n      } catch (error) {\n         console.log(error)\n        \n      }\n    };\n    return (\n        <div style={{ minHeight: \"99vh\", backgroundImage:\"url(/admin.jpeg)\",backgroundSize: \"cover\",backgroundRepeat:\"no-repeat\"}}>\n      <Grid textAlign=\"center\" verticalAlign='middle' style={{ paddingTop: \"70px\" }}>\n        <Grid.Column width={4} style={{ padding: \"0px\" }}>\n          <Segment\n            textAlign='center'\n            style={{\n              height: \"65vh\",\n              backgroundImage: \"url(/lff.jpeg)\"\n            }}\n          >\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column width={4} style={{ padding: \"0px\" }}>\n          <Segment\n            stacked style={{ backgroundColor: \"lightGray\", height: \"65vh\" }}\n            \n          >\n\n            <Header as='h2' color='teal' textAlign='center'>\n             Admin Login\n            </Header>\n            {error && <span className=\"error-message\">{error}</span>}\n            <Form size='large' style={{verticalAlign:\"center\"}}>\n\n              <Form.Input fluid icon='user' iconPosition='left' type=\"email\"\n                required\n                id=\"email\"\n                placeholder=\"Email address\"\n                onChange={(e) => setEmail(e.target.value)}\n                name=\"email\"\n                tabIndex={1}\n              />\n\n              <Form.Input\n                fluid\n                icon='lock'\n                iconPosition='left'\n                type=\"password\"\n                required\n                id=\"password\"\n                name=\"password\"\n                autoComplete=\"true\"\n                placeholder=\"Enter password\"\n                onChange={(e) => setPassword(e.target.value)}\n              \n                tabIndex={2}\n              />\n              \n              <Divider hidden/>\n              <Button onClick={loginHandler}>Login</Button>\n\n            </Form>\n            \n          </Segment>\n        </Grid.Column>\n\n      </Grid>\n\n\n\n    </div>\n    )\n}\n\nexport default AdminLogin\n","/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/ForgotPassword.js",[],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/LandlordForgotPassword.js",[],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/HousesByLandlord.js",["568","569"],"/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/TenantProfile.js",["570","571","572"],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { Button, Divider, Form, Grid, Icon, Image, Input, Segment } from 'semantic-ui-react';\nconst TenantProfile = () => {\n  const [firstname, setFirstname] = useState(\"\")\n  const [lastname, setLastname] = useState('')\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [phone, setPhone] = useState('')\n\n  const tenantid = localStorage.getItem('tenantId')\n  const updateAccount = async ()=>{\n    try {\n      const account = await axios.put(`http://localhost:5000/api/auth/updatetenantaccount/${tenantid}`,{\n        firstname,lastname,username,email\n      })\n      alert(\"updated successfuly\")\n\n    } catch (error) {\n      console.log(error)\n      alert(\"error while updating a data\")\n    }\n  }\n  return (\n    <div style={{ minHeight: \"100vh\"}}>\n      \n    <Grid style={{ marginTop: \"5px\"}} >\n      <Grid.Column width=\"3\"></Grid.Column>\n      <Grid.Column  width={13}>\n        <Segment\n          textAlign='bottom'\n          style={{\n            backgroundImage: \"url(/des2.jpg)\",\n            height: \"20vh\"\n          }}\n        >\n          <Image src='https://react.semantic-ui.com/images/avatar/small/matthew.png' circular size='small' />\n        </Segment>\n        <Divider hidden />\n        <Divider hidden />\n        <Grid textAlign='center'>\n         \n          <Grid.Column floated='right' width={3}>\n            <Button onClick={updateAccount} color='twitter'>\n              <Icon  name='save' />\n              Update Account\n            </Button>\n          </Grid.Column>\n        </Grid>\n        <Divider />\n        <Grid textAlign='left'>\n\n<Segment style={{backgroundColor:\"lightGray\"}}>\n          <Form>\n            <Form.Group >\n\n          <Form.Field\n                          required\n                          id='form-input-control-last-name'\n                          control={Input}\n                          name='firstname'\n                          type='text'\n                          label='First Name'\n                          placeholder='first name'\n\n                          onChange={e=>setFirstname(e.target.value)}\n                      />\n          <Form.Field\n                          required\n                          id='form-input-control-last-name'\n                          control={Input}\n                          name='lastname'\n                          type='text'\n                          label='Last Name'\n                          placeholder='last name'\n\n                          onChange={e=>setLastname(e.target.value)}\n                      />\n            </Form.Group>\n          <Form.Field\n                          required\n                          id='form-input-control-last-name'\n                          control={Input}\n                          name='username'\n                          type='text'\n                          label='User Name'\n                          placeholder='user name'\n\n                          onChange={e=>setUsername(e.target.value)}\n                      />\n             <Form.Field\n                          required\n                          id='form-input-control-last-name'\n                          control={Input}\n                          name='email'\n                          type='email'\n                          label='Email Address'\n                          placeholder='email address'\n\n                          onChange={e=>setEmail(e.target.value)}\n                      />\n           \n            \n            \n          </Form>\n</Segment>\n        </Grid>\n\n      </Grid.Column>\n\n    </Grid>\n    \n  </div>\n\n  )\n}\n\nexport default TenantProfile\n",{"ruleId":"573","severity":1,"message":"574","line":23,"column":9,"nodeType":"575","messageId":"576","endLine":23,"endColumn":16},{"ruleId":"573","severity":1,"message":"577","line":24,"column":10,"nodeType":"575","messageId":"576","endLine":24,"endColumn":15},{"ruleId":"573","severity":1,"message":"578","line":25,"column":9,"nodeType":"575","messageId":"576","endLine":25,"endColumn":16},{"ruleId":"573","severity":1,"message":"579","line":28,"column":9,"nodeType":"575","messageId":"576","endLine":28,"endColumn":16},{"ruleId":"573","severity":1,"message":"580","line":32,"column":10,"nodeType":"575","messageId":"576","endLine":32,"endColumn":20},{"ruleId":"573","severity":1,"message":"581","line":36,"column":9,"nodeType":"575","messageId":"576","endLine":36,"endColumn":24},{"ruleId":"573","severity":1,"message":"582","line":19,"column":8,"nodeType":"575","messageId":"576","endLine":19,"endColumn":20},{"ruleId":"573","severity":1,"message":"583","line":11,"column":10,"nodeType":"575","messageId":"576","endLine":11,"endColumn":14},{"ruleId":"573","severity":1,"message":"584","line":3,"column":15,"nodeType":"575","messageId":"576","endLine":3,"endColumn":23},{"ruleId":"585","replacedBy":"586"},{"ruleId":"587","replacedBy":"588"},{"ruleId":"585","replacedBy":"589"},{"ruleId":"587","replacedBy":"590"},{"ruleId":"573","severity":1,"message":"591","line":3,"column":3,"nodeType":"575","messageId":"576","endLine":3,"endColumn":12},{"ruleId":"573","severity":1,"message":"592","line":4,"column":3,"nodeType":"575","messageId":"576","endLine":4,"endColumn":7},{"ruleId":"573","severity":1,"message":"593","line":5,"column":3,"nodeType":"575","messageId":"576","endLine":5,"endColumn":9},{"ruleId":"573","severity":1,"message":"594","line":6,"column":3,"nodeType":"575","messageId":"576","endLine":6,"endColumn":8},{"ruleId":"573","severity":1,"message":"595","line":7,"column":3,"nodeType":"575","messageId":"576","endLine":7,"endColumn":7},{"ruleId":"573","severity":1,"message":"596","line":8,"column":3,"nodeType":"575","messageId":"576","endLine":8,"endColumn":8},{"ruleId":"573","severity":1,"message":"597","line":9,"column":3,"nodeType":"575","messageId":"576","endLine":9,"endColumn":10},{"ruleId":"573","severity":1,"message":"598","line":10,"column":3,"nodeType":"575","messageId":"576","endLine":10,"endColumn":13},{"ruleId":"585","replacedBy":"599"},{"ruleId":"587","replacedBy":"600"},{"ruleId":"573","severity":1,"message":"601","line":2,"column":10,"nodeType":"575","messageId":"576","endLine":2,"endColumn":16},{"ruleId":"573","severity":1,"message":"595","line":2,"column":18,"nodeType":"575","messageId":"576","endLine":2,"endColumn":22},{"ruleId":"573","severity":1,"message":"592","line":2,"column":24,"nodeType":"575","messageId":"576","endLine":2,"endColumn":28},{"ruleId":"573","severity":1,"message":"593","line":2,"column":30,"nodeType":"575","messageId":"576","endLine":2,"endColumn":36},{"ruleId":"573","severity":1,"message":"594","line":2,"column":38,"nodeType":"575","messageId":"576","endLine":2,"endColumn":43},{"ruleId":"573","severity":1,"message":"602","line":2,"column":45,"nodeType":"575","messageId":"576","endLine":2,"endColumn":52},{"ruleId":"573","severity":1,"message":"597","line":2,"column":54,"nodeType":"575","messageId":"576","endLine":2,"endColumn":61},{"ruleId":"573","severity":1,"message":"603","line":4,"column":8,"nodeType":"575","messageId":"576","endLine":4,"endColumn":13},{"ruleId":"573","severity":1,"message":"604","line":6,"column":9,"nodeType":"575","messageId":"576","endLine":6,"endColumn":15},{"ruleId":"573","severity":1,"message":"605","line":7,"column":10,"nodeType":"575","messageId":"576","endLine":7,"endColumn":19},{"ruleId":"573","severity":1,"message":"606","line":7,"column":20,"nodeType":"575","messageId":"576","endLine":7,"endColumn":32},{"ruleId":"573","severity":1,"message":"607","line":77,"column":15,"nodeType":"575","messageId":"576","endLine":77,"endColumn":23},{"ruleId":"608","severity":1,"message":"609","line":94,"column":23,"nodeType":"610","messageId":"611","endLine":94,"endColumn":25},{"ruleId":"573","severity":1,"message":"607","line":100,"column":17,"nodeType":"575","messageId":"576","endLine":100,"endColumn":25},{"ruleId":"573","severity":1,"message":"612","line":89,"column":10,"nodeType":"575","messageId":"576","endLine":89,"endColumn":16},{"ruleId":"573","severity":1,"message":"613","line":93,"column":9,"nodeType":"575","messageId":"576","endLine":93,"endColumn":35},{"ruleId":"608","severity":1,"message":"609","line":123,"column":36,"nodeType":"610","messageId":"611","endLine":123,"endColumn":38},{"ruleId":"614","severity":1,"message":"615","line":299,"column":13,"nodeType":"616","endLine":299,"endColumn":25},{"ruleId":"617","severity":1,"message":"618","line":38,"column":15,"nodeType":"619","messageId":"620","endLine":38,"endColumn":16,"suggestions":"621"},{"ruleId":"573","severity":1,"message":"622","line":52,"column":10,"nodeType":"575","messageId":"576","endLine":52,"endColumn":15},{"ruleId":"608","severity":1,"message":"609","line":179,"column":23,"nodeType":"610","messageId":"611","endLine":179,"endColumn":25},{"ruleId":"573","severity":1,"message":"623","line":213,"column":11,"nodeType":"575","messageId":"576","endLine":213,"endColumn":27},{"ruleId":"573","severity":1,"message":"624","line":222,"column":17,"nodeType":"575","messageId":"576","endLine":222,"endColumn":21},{"ruleId":"573","severity":1,"message":"625","line":1,"column":8,"nodeType":"575","messageId":"576","endLine":1,"endColumn":13},{"ruleId":"573","severity":1,"message":"626","line":7,"column":29,"nodeType":"575","messageId":"576","endLine":7,"endColumn":33},{"ruleId":"573","severity":1,"message":"627","line":2,"column":8,"nodeType":"575","messageId":"576","endLine":2,"endColumn":14},{"ruleId":"573","severity":1,"message":"628","line":6,"column":7,"nodeType":"575","messageId":"576","endLine":6,"endColumn":14},{"ruleId":"573","severity":1,"message":"625","line":1,"column":8,"nodeType":"575","messageId":"576","endLine":1,"endColumn":13},{"ruleId":"573","severity":1,"message":"629","line":9,"column":10,"nodeType":"575","messageId":"576","endLine":9,"endColumn":16},{"ruleId":"573","severity":1,"message":"630","line":11,"column":10,"nodeType":"575","messageId":"576","endLine":11,"endColumn":19},{"ruleId":"573","severity":1,"message":"631","line":11,"column":21,"nodeType":"575","messageId":"576","endLine":11,"endColumn":33},{"ruleId":"608","severity":1,"message":"609","line":128,"column":23,"nodeType":"610","messageId":"611","endLine":128,"endColumn":25},{"ruleId":"573","severity":1,"message":"632","line":158,"column":9,"nodeType":"575","messageId":"576","endLine":158,"endColumn":20},{"ruleId":"573","severity":1,"message":"596","line":3,"column":22,"nodeType":"575","messageId":"576","endLine":3,"endColumn":27},{"ruleId":"573","severity":1,"message":"593","line":3,"column":28,"nodeType":"575","messageId":"576","endLine":3,"endColumn":34},{"ruleId":"573","severity":1,"message":"633","line":3,"column":35,"nodeType":"575","messageId":"576","endLine":3,"endColumn":43},{"ruleId":"573","severity":1,"message":"634","line":3,"column":44,"nodeType":"575","messageId":"576","endLine":3,"endColumn":51},{"ruleId":"573","severity":1,"message":"601","line":2,"column":10,"nodeType":"575","messageId":"576","endLine":2,"endColumn":16},{"ruleId":"573","severity":1,"message":"634","line":2,"column":18,"nodeType":"575","messageId":"576","endLine":2,"endColumn":25},{"ruleId":"573","severity":1,"message":"592","line":2,"column":27,"nodeType":"575","messageId":"576","endLine":2,"endColumn":31},{"ruleId":"573","severity":1,"message":"635","line":2,"column":33,"nodeType":"575","messageId":"576","endLine":2,"endColumn":37},{"ruleId":"573","severity":1,"message":"636","line":2,"column":39,"nodeType":"575","messageId":"576","endLine":2,"endColumn":44},{"ruleId":"573","severity":1,"message":"637","line":2,"column":46,"nodeType":"575","messageId":"576","endLine":2,"endColumn":50},{"ruleId":"573","severity":1,"message":"597","line":2,"column":52,"nodeType":"575","messageId":"576","endLine":2,"endColumn":59},{"ruleId":"573","severity":1,"message":"638","line":3,"column":10,"nodeType":"575","messageId":"576","endLine":3,"endColumn":14},{"ruleId":"617","severity":1,"message":"618","line":33,"column":21,"nodeType":"619","messageId":"620","endLine":33,"endColumn":22,"suggestions":"639"},{"ruleId":"640","severity":1,"message":"641","line":47,"column":8,"nodeType":"642","endLine":47,"endColumn":10,"suggestions":"643"},{"ruleId":"573","severity":1,"message":"644","line":2,"column":37,"nodeType":"575","messageId":"576","endLine":2,"endColumn":47},{"ruleId":"573","severity":1,"message":"645","line":2,"column":48,"nodeType":"575","messageId":"576","endLine":2,"endColumn":60},{"ruleId":"573","severity":1,"message":"646","line":2,"column":61,"nodeType":"575","messageId":"576","endLine":2,"endColumn":71},{"ruleId":"585","replacedBy":"647"},{"ruleId":"587","replacedBy":"648"},{"ruleId":"573","severity":1,"message":"574","line":27,"column":9,"nodeType":"575","messageId":"576","endLine":27,"endColumn":16},{"ruleId":"573","severity":1,"message":"577","line":28,"column":10,"nodeType":"575","messageId":"576","endLine":28,"endColumn":15},{"ruleId":"573","severity":1,"message":"578","line":29,"column":9,"nodeType":"575","messageId":"576","endLine":29,"endColumn":16},{"ruleId":"573","severity":1,"message":"579","line":32,"column":9,"nodeType":"575","messageId":"576","endLine":32,"endColumn":16},{"ruleId":"573","severity":1,"message":"580","line":36,"column":10,"nodeType":"575","messageId":"576","endLine":36,"endColumn":20},{"ruleId":"573","severity":1,"message":"581","line":40,"column":9,"nodeType":"575","messageId":"576","endLine":40,"endColumn":24},{"ruleId":"573","severity":1,"message":"574","line":70,"column":9,"nodeType":"575","messageId":"576","endLine":70,"endColumn":16},{"ruleId":"573","severity":1,"message":"649","line":4,"column":45,"nodeType":"575","messageId":"576","endLine":4,"endColumn":51},{"ruleId":"573","severity":1,"message":"612","line":90,"column":10,"nodeType":"575","messageId":"576","endLine":90,"endColumn":16},{"ruleId":"573","severity":1,"message":"613","line":99,"column":9,"nodeType":"575","messageId":"576","endLine":99,"endColumn":35},{"ruleId":"608","severity":1,"message":"609","line":129,"column":36,"nodeType":"610","messageId":"611","endLine":129,"endColumn":38},{"ruleId":"614","severity":1,"message":"615","line":326,"column":13,"nodeType":"616","endLine":326,"endColumn":25},{"ruleId":"573","severity":1,"message":"650","line":4,"column":8,"nodeType":"575","messageId":"576","endLine":4,"endColumn":13},{"ruleId":"573","severity":1,"message":"651","line":5,"column":8,"nodeType":"575","messageId":"576","endLine":5,"endColumn":12},{"ruleId":"573","severity":1,"message":"652","line":1,"column":26,"nodeType":"575","messageId":"576","endLine":1,"endColumn":35},{"ruleId":"573","severity":1,"message":"594","line":5,"column":74,"nodeType":"575","messageId":"576","endLine":5,"endColumn":79},{"ruleId":"617","severity":1,"message":"618","line":38,"column":15,"nodeType":"619","messageId":"620","endLine":38,"endColumn":16,"suggestions":"653"},{"ruleId":"573","severity":1,"message":"622","line":53,"column":10,"nodeType":"575","messageId":"576","endLine":53,"endColumn":15},{"ruleId":"573","severity":1,"message":"654","line":55,"column":9,"nodeType":"575","messageId":"576","endLine":55,"endColumn":17},{"ruleId":"608","severity":1,"message":"609","line":189,"column":23,"nodeType":"610","messageId":"611","endLine":189,"endColumn":25},{"ruleId":"573","severity":1,"message":"623","line":227,"column":11,"nodeType":"575","messageId":"576","endLine":227,"endColumn":27},{"ruleId":"573","severity":1,"message":"624","line":236,"column":17,"nodeType":"575","messageId":"576","endLine":236,"endColumn":21},{"ruleId":"573","severity":1,"message":"612","line":20,"column":10,"nodeType":"575","messageId":"576","endLine":20,"endColumn":16},{"ruleId":"608","severity":1,"message":"609","line":43,"column":36,"nodeType":"610","messageId":"611","endLine":43,"endColumn":38},{"ruleId":"573","severity":1,"message":"584","line":2,"column":15,"nodeType":"575","messageId":"576","endLine":2,"endColumn":23},{"ruleId":"573","severity":1,"message":"652","line":2,"column":17,"nodeType":"575","messageId":"576","endLine":2,"endColumn":26},{"ruleId":"573","severity":1,"message":"583","line":11,"column":10,"nodeType":"575","messageId":"576","endLine":11,"endColumn":14},{"ruleId":"573","severity":1,"message":"655","line":119,"column":9,"nodeType":"575","messageId":"576","endLine":119,"endColumn":21},{"ruleId":"640","severity":1,"message":"656","line":140,"column":6,"nodeType":"642","endLine":140,"endColumn":8,"suggestions":"657"},{"ruleId":"573","severity":1,"message":"594","line":3,"column":50,"nodeType":"575","messageId":"576","endLine":3,"endColumn":55},{"ruleId":"573","severity":1,"message":"583","line":10,"column":12,"nodeType":"575","messageId":"576","endLine":10,"endColumn":16},{"ruleId":"573","severity":1,"message":"602","line":7,"column":108,"nodeType":"575","messageId":"576","endLine":7,"endColumn":115},{"ruleId":"573","severity":1,"message":"658","line":7,"column":136,"nodeType":"575","messageId":"576","endLine":7,"endColumn":142},{"ruleId":"573","severity":1,"message":"659","line":19,"column":9,"nodeType":"575","messageId":"576","endLine":19,"endColumn":20},{"ruleId":"573","severity":1,"message":"660","line":49,"column":13,"nodeType":"575","messageId":"576","endLine":49,"endColumn":16},{"ruleId":"573","severity":1,"message":"584","line":3,"column":15,"nodeType":"575","messageId":"576","endLine":3,"endColumn":23},{"ruleId":"573","severity":1,"message":"661","line":22,"column":11,"nodeType":"575","messageId":"576","endLine":22,"endColumn":21},{"ruleId":"573","severity":1,"message":"662","line":23,"column":12,"nodeType":"575","messageId":"576","endLine":23,"endColumn":25},{"ruleId":"573","severity":1,"message":"629","line":24,"column":12,"nodeType":"575","messageId":"576","endLine":24,"endColumn":18},{"ruleId":"573","severity":1,"message":"663","line":25,"column":12,"nodeType":"575","messageId":"576","endLine":25,"endColumn":16},{"ruleId":"573","severity":1,"message":"664","line":25,"column":18,"nodeType":"575","messageId":"576","endLine":25,"endColumn":25},{"ruleId":"573","severity":1,"message":"630","line":26,"column":12,"nodeType":"575","messageId":"576","endLine":26,"endColumn":21},{"ruleId":"573","severity":1,"message":"631","line":26,"column":23,"nodeType":"575","messageId":"576","endLine":26,"endColumn":35},{"ruleId":"573","severity":1,"message":"632","line":29,"column":11,"nodeType":"575","messageId":"576","endLine":29,"endColumn":22},{"ruleId":"573","severity":1,"message":"665","line":33,"column":14,"nodeType":"575","messageId":"576","endLine":33,"endColumn":25},{"ruleId":"573","severity":1,"message":"580","line":44,"column":12,"nodeType":"575","messageId":"576","endLine":44,"endColumn":22},{"ruleId":"573","severity":1,"message":"581","line":48,"column":11,"nodeType":"575","messageId":"576","endLine":48,"endColumn":26},{"ruleId":"617","severity":1,"message":"618","line":33,"column":21,"nodeType":"619","messageId":"620","endLine":33,"endColumn":22,"suggestions":"666"},{"ruleId":"640","severity":1,"message":"641","line":47,"column":8,"nodeType":"642","endLine":47,"endColumn":10,"suggestions":"667"},{"ruleId":"585","replacedBy":"668"},{"ruleId":"587","replacedBy":"669"},{"ruleId":"573","severity":1,"message":"635","line":2,"column":10,"nodeType":"575","messageId":"576","endLine":2,"endColumn":14},{"ruleId":"573","severity":1,"message":"670","line":4,"column":19,"nodeType":"575","messageId":"576","endLine":4,"endColumn":25},{"ruleId":"573","severity":1,"message":"671","line":4,"column":27,"nodeType":"575","messageId":"576","endLine":4,"endColumn":30},{"ruleId":"573","severity":1,"message":"672","line":4,"column":41,"nodeType":"575","messageId":"576","endLine":4,"endColumn":48},{"ruleId":"573","severity":1,"message":"673","line":5,"column":8,"nodeType":"575","messageId":"576","endLine":5,"endColumn":17},{"ruleId":"573","severity":1,"message":"622","line":13,"column":10,"nodeType":"575","messageId":"576","endLine":13,"endColumn":15},{"ruleId":"573","severity":1,"message":"674","line":13,"column":17,"nodeType":"575","messageId":"576","endLine":13,"endColumn":25},{"ruleId":"573","severity":1,"message":"675","line":14,"column":10,"nodeType":"575","messageId":"576","endLine":14,"endColumn":16},{"ruleId":"573","severity":1,"message":"676","line":14,"column":18,"nodeType":"575","messageId":"576","endLine":14,"endColumn":27},{"ruleId":"640","severity":1,"message":"677","line":22,"column":16,"nodeType":"678","endLine":22,"endColumn":53},{"ruleId":"573","severity":1,"message":"612","line":17,"column":10,"nodeType":"575","messageId":"576","endLine":17,"endColumn":16},{"ruleId":"608","severity":1,"message":"609","line":45,"column":36,"nodeType":"610","messageId":"611","endLine":45,"endColumn":38},{"ruleId":"573","severity":1,"message":"625","line":1,"column":8,"nodeType":"575","messageId":"576","endLine":1,"endColumn":13},{"ruleId":"573","severity":1,"message":"627","line":2,"column":8,"nodeType":"575","messageId":"576","endLine":2,"endColumn":14},{"ruleId":"573","severity":1,"message":"628","line":6,"column":7,"nodeType":"575","messageId":"576","endLine":6,"endColumn":14},{"ruleId":"573","severity":1,"message":"679","line":10,"column":10,"nodeType":"575","messageId":"576","endLine":10,"endColumn":23},{"ruleId":"573","severity":1,"message":"680","line":10,"column":25,"nodeType":"575","messageId":"576","endLine":10,"endColumn":41},{"ruleId":"573","severity":1,"message":"636","line":2,"column":60,"nodeType":"575","messageId":"576","endLine":2,"endColumn":65},{"ruleId":"573","severity":1,"message":"591","line":2,"column":75,"nodeType":"575","messageId":"576","endLine":2,"endColumn":84},{"ruleId":"573","severity":1,"message":"681","line":4,"column":10,"nodeType":"575","messageId":"576","endLine":4,"endColumn":19},{"ruleId":"573","severity":1,"message":"682","line":25,"column":13,"nodeType":"575","messageId":"576","endLine":25,"endColumn":20},{"ruleId":"573","severity":1,"message":"594","line":2,"column":65,"nodeType":"575","messageId":"576","endLine":2,"endColumn":70},{"ruleId":"573","severity":1,"message":"635","line":2,"column":80,"nodeType":"575","messageId":"576","endLine":2,"endColumn":84},{"ruleId":"573","severity":1,"message":"638","line":3,"column":10,"nodeType":"575","messageId":"576","endLine":3,"endColumn":14},{"ruleId":"573","severity":1,"message":"683","line":6,"column":23,"nodeType":"575","messageId":"576","endLine":6,"endColumn":37},{"ruleId":"573","severity":1,"message":"684","line":7,"column":22,"nodeType":"575","messageId":"576","endLine":7,"endColumn":35},{"ruleId":"573","severity":1,"message":"685","line":8,"column":9,"nodeType":"575","messageId":"576","endLine":8,"endColumn":20},{"ruleId":"573","severity":1,"message":"686","line":2,"column":50,"nodeType":"575","messageId":"576","endLine":2,"endColumn":54},{"ruleId":"573","severity":1,"message":"594","line":2,"column":55,"nodeType":"575","messageId":"576","endLine":2,"endColumn":60},{"ruleId":"573","severity":1,"message":"638","line":3,"column":10,"nodeType":"575","messageId":"576","endLine":3,"endColumn":14},{"ruleId":"573","severity":1,"message":"652","line":1,"column":27,"nodeType":"575","messageId":"576","endLine":1,"endColumn":36},{"ruleId":"573","severity":1,"message":"687","line":5,"column":21,"nodeType":"575","messageId":"576","endLine":5,"endColumn":31},{"ruleId":"573","severity":1,"message":"688","line":22,"column":12,"nodeType":"575","messageId":"576","endLine":22,"endColumn":21},{"ruleId":"573","severity":1,"message":"689","line":25,"column":12,"nodeType":"575","messageId":"576","endLine":25,"endColumn":17},{"ruleId":"573","severity":1,"message":"690","line":25,"column":18,"nodeType":"575","messageId":"576","endLine":25,"endColumn":25},{"ruleId":"573","severity":1,"message":"691","line":26,"column":18,"nodeType":"575","messageId":"576","endLine":26,"endColumn":26},{"ruleId":"573","severity":1,"message":"662","line":28,"column":12,"nodeType":"575","messageId":"576","endLine":28,"endColumn":25},{"ruleId":"573","severity":1,"message":"692","line":28,"column":27,"nodeType":"575","messageId":"576","endLine":28,"endColumn":43},{"ruleId":"608","severity":1,"message":"609","line":114,"column":26,"nodeType":"610","messageId":"611","endLine":114,"endColumn":28},{"ruleId":"573","severity":1,"message":"693","line":6,"column":7,"nodeType":"575","messageId":"576","endLine":6,"endColumn":11},{"ruleId":"573","severity":1,"message":"694","line":7,"column":7,"nodeType":"575","messageId":"576","endLine":7,"endColumn":14},{"ruleId":"573","severity":1,"message":"695","line":8,"column":7,"nodeType":"575","messageId":"576","endLine":8,"endColumn":16},{"ruleId":"573","severity":1,"message":"661","line":8,"column":11,"nodeType":"575","messageId":"576","endLine":8,"endColumn":21},{"ruleId":"573","severity":1,"message":"693","line":4,"column":7,"nodeType":"575","messageId":"576","endLine":4,"endColumn":11},{"ruleId":"573","severity":1,"message":"694","line":5,"column":7,"nodeType":"575","messageId":"576","endLine":5,"endColumn":14},{"ruleId":"640","severity":1,"message":"696","line":51,"column":6,"nodeType":"642","endLine":51,"endColumn":8,"suggestions":"697"},{"ruleId":"573","severity":1,"message":"661","line":8,"column":9,"nodeType":"575","messageId":"576","endLine":8,"endColumn":19},{"ruleId":"573","severity":1,"message":"661","line":8,"column":9,"nodeType":"575","messageId":"576","endLine":8,"endColumn":19},{"ruleId":"585","replacedBy":"698"},{"ruleId":"587","replacedBy":"699"},{"ruleId":"573","severity":1,"message":"673","line":4,"column":8,"nodeType":"575","messageId":"576","endLine":4,"endColumn":17},{"ruleId":"573","severity":1,"message":"700","line":7,"column":8,"nodeType":"575","messageId":"576","endLine":7,"endColumn":29},{"ruleId":"573","severity":1,"message":"622","line":12,"column":12,"nodeType":"575","messageId":"576","endLine":12,"endColumn":17},{"ruleId":"573","severity":1,"message":"674","line":12,"column":19,"nodeType":"575","messageId":"576","endLine":12,"endColumn":27},{"ruleId":"640","severity":1,"message":"701","line":36,"column":8,"nodeType":"642","endLine":36,"endColumn":10,"suggestions":"702"},{"ruleId":"573","severity":1,"message":"661","line":8,"column":11,"nodeType":"575","messageId":"576","endLine":8,"endColumn":21},{"ruleId":"585","replacedBy":"703"},{"ruleId":"587","replacedBy":"704"},{"ruleId":"573","severity":1,"message":"661","line":9,"column":11,"nodeType":"575","messageId":"576","endLine":9,"endColumn":21},{"ruleId":"573","severity":1,"message":"665","line":14,"column":14,"nodeType":"575","messageId":"576","endLine":14,"endColumn":25},{"ruleId":"573","severity":1,"message":"591","line":1,"column":10,"nodeType":"575","messageId":"576","endLine":1,"endColumn":19},{"ruleId":"640","severity":1,"message":"656","line":44,"column":10,"nodeType":"642","endLine":44,"endColumn":12,"suggestions":"705"},{"ruleId":"573","severity":1,"message":"661","line":8,"column":11,"nodeType":"575","messageId":"576","endLine":8,"endColumn":21},{"ruleId":"573","severity":1,"message":"638","line":3,"column":10,"nodeType":"575","messageId":"576","endLine":3,"endColumn":14},{"ruleId":"573","severity":1,"message":"602","line":4,"column":47,"nodeType":"575","messageId":"576","endLine":4,"endColumn":54},{"ruleId":"573","severity":1,"message":"674","line":9,"column":19,"nodeType":"575","messageId":"576","endLine":9,"endColumn":27},{"ruleId":"573","severity":1,"message":"583","line":10,"column":12,"nodeType":"575","messageId":"576","endLine":10,"endColumn":16},{"ruleId":"573","severity":1,"message":"706","line":10,"column":18,"nodeType":"575","messageId":"576","endLine":10,"endColumn":25},{"ruleId":"573","severity":1,"message":"681","line":5,"column":10,"nodeType":"575","messageId":"576","endLine":5,"endColumn":19},{"ruleId":"573","severity":1,"message":"661","line":8,"column":11,"nodeType":"575","messageId":"576","endLine":8,"endColumn":21},{"ruleId":"573","severity":1,"message":"707","line":9,"column":10,"nodeType":"575","messageId":"576","endLine":9,"endColumn":15},{"ruleId":"573","severity":1,"message":"708","line":9,"column":17,"nodeType":"575","messageId":"576","endLine":9,"endColumn":25},{"ruleId":"573","severity":1,"message":"682","line":14,"column":13,"nodeType":"575","messageId":"576","endLine":14,"endColumn":20},"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'fixed' is assigned a value but never used.","'showNav' is assigned a value but never used.","'hideNav' is assigned a value but never used.","'activeItem' is assigned a value but never used.","'handleItemClick' is assigned a value but never used.","'Notification' is defined but never used.","'user' is assigned a value but never used.","'Redirect' is defined but never used.","no-native-reassign",["709"],"no-negated-in-lhs",["710"],["709"],["710"],"'Container' is defined but never used.","'Grid' is defined but never used.","'Header' is defined but never used.","'Image' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Segment' is defined but never used.","'GridColumn' is defined but never used.",["709"],["710"],"'Button' is defined but never used.","'Message' is defined but never used.","'axios' is defined but never used.","'apiurl' is assigned a value but never used.","'housedata' is assigned a value but never used.","'setHouseData' is assigned a value but never used.","'progress' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'search' is assigned a value but never used.","'getHousesIntheSameDistrict' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["711","712"],"'error' is assigned a value but never used.","'fetchPrivateDate' is assigned a value but never used.","'data' is assigned a value but never used.","'React' is defined but never used.","'Card' is defined but never used.","'useSwr' is defined but never used.","'fetcher' is assigned a value but never used.","'opened' is assigned a value but never used.","'openModal' is assigned a value but never used.","'setModalOpen' is assigned a value but never used.","'showConfirm' is assigned a value but never used.","'Checkbox' is defined but never used.","'Divider' is defined but never used.","'Icon' is defined but never used.","'Label' is defined but never used.","'Menu' is defined but never used.","'Link' is defined but never used.",["713","714"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'send'. Either include it or remove the dependency array.","ArrayExpression",["715"],"'EmailField' is defined but never used.","'DeleteButton' is defined but never used.","'EditButton' is defined but never used.",["709"],["710"],"'Router' is defined but never used.","'About' is defined but never used.","'Help' is defined but never used.","'useEffect' is defined but never used.",["716","717"],"'location' is assigned a value but never used.","'saveContract' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getThatHouse'. Either include it or remove the dependency array.",["718"],"'Sticky' is defined but never used.","'handleInput' is assigned a value but never used.","'res' is assigned a value but never used.","'contextRef' is assigned a value but never used.","'multipleFiles' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'hideConfirm' is defined but never used.",["719","720"],["721"],["709"],["710"],"'Toggle' is defined but never used.","'Nav' is defined but never used.","'NavIcon' is defined but never used.","'HouseList' is defined but never used.","'setError' is assigned a value but never used.","'logged' is assigned a value but never used.","'setlogged' is assigned a value but never used.","Assignments to the 'token' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'selectedHouse' is assigned a value but never used.","'setSelectedHouse' is assigned a value but never used.","'useParams' is defined but never used.","'account' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'setReportedBy' is assigned a value but never used.","'reportIssue' is assigned a value but never used.","'Item' is defined but never used.","'useHistory' is defined but never used.","'imageUrls' is assigned a value but never used.","'files' is assigned a value but never used.","'setFile' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'setMultipleFiles' is assigned a value but never used.","'date' is assigned a value but never used.","'summary' is assigned a value but never used.","'extraText' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSpecificRequestedHouse'. Either include it or remove the dependency array.",["722"],["709"],["710"],"'LandlordAccountReview' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["723"],["709"],["710"],["724"],"'setUser' is assigned a value but never used.","'phone' is assigned a value but never used.","'setPhone' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"725","fix":"726","desc":"727"},{"messageId":"728","fix":"729","desc":"730"},{"messageId":"725","fix":"731","desc":"727"},{"messageId":"728","fix":"732","desc":"730"},{"desc":"733","fix":"734"},{"messageId":"725","fix":"735","desc":"727"},{"messageId":"728","fix":"736","desc":"730"},{"desc":"737","fix":"738"},{"messageId":"725","fix":"739","desc":"727"},{"messageId":"728","fix":"740","desc":"730"},{"desc":"733","fix":"741"},{"desc":"742","fix":"743"},{"desc":"744","fix":"745"},{"desc":"737","fix":"746"},"removeEscape",{"range":"747","text":"748"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"749","text":"750"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"751","text":"748"},{"range":"752","text":"750"},"Update the dependencies array to be: [send]",{"range":"753","text":"754"},{"range":"755","text":"748"},{"range":"756","text":"750"},"Update the dependencies array to be: [getThatHouse]",{"range":"757","text":"758"},{"range":"759","text":"748"},{"range":"760","text":"750"},{"range":"761","text":"754"},"Update the dependencies array to be: [getSpecificRequestedHouse]",{"range":"762","text":"763"},"Update the dependencies array to be: [history]",{"range":"764","text":"765"},{"range":"766","text":"758"},[1255,1256],"",[1255,1255],"\\",[1178,1179],[1178,1178],[1537,1539],"[send]",[1264,1265],[1264,1264],[4399,4401],"[getThatHouse]",[1178,1179],[1178,1178],[1537,1539],[1396,1398],"[getSpecificRequestedHouse]",[1243,1245],"[history]",[1259,1261]]