{"ast":null,"code":"var _jsxFileName = \"/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { Button, Form, Grid, Segment } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  let history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const registerHandler = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (password !== confirmpassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const {\n        data\n      } = await axios.post(\"http://localhost:5000/api/auth/register\", {\n        username,\n        email,\n        password\n      }, config);\n      localStorage.setItem(\"authToken\", data.token);\n      history.push(\"/\");\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      style: {\n        paddingTop: \"70px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 4,\n        style: {\n          padding: \"0px\"\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              required: true,\n              id: \"name\",\n              placeholder: \"Enter username\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              required: true,\n              id: \"email\",\n              placeholder: \"Email address\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              required: true,\n              id: \"password\",\n              autoComplete: \"true\",\n              placeholder: \"Enter password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"confirm password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              required: true,\n              autoComplete: \"true\",\n              placeholder: \"Confirm password\",\n              value: confirmpassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: registerHandler,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"register-screen__subtext\",\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 4,\n        style: {\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          textAlign: \"center\",\n          style: {\n            height: \"65vh\",\n            backgroundImage: \"url(/log.jpeg)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"qgHc1VoVCho/T/Uc1x+J88Buhlo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/Register.js"],"names":["React","useState","axios","Link","Redirect","useHistory","Button","Form","Grid","Segment","Register","history","username","setUsername","email","setEmail","password","setPassword","confirmpassword","setConfirmPassword","error","setError","registerHandler","e","preventDefault","config","header","setTimeout","data","post","localStorage","setItem","token","push","response","paddingTop","padding","target","value","height","backgroundImage"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport axios from \"axios\";\nimport { Link,Redirect,useHistory} from \"react-router-dom\";\nimport { Button,Form,Grid,Segment} from 'semantic-ui-react'\n\nconst Register = () => {\n  let history = useHistory()\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const registerHandler = async (e) => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (password !== confirmpassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const { data } = await axios.post(\n        \"http://localhost:5000/api/auth/register\", { username, email, password,},\n        config\n      );\n      localStorage.setItem(\"authToken\",data.token)\n      history.push(\"/\")\n      \n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return (\n    <div >\n      <Grid textAlign=\"center\" verticalAlign='middle' style={{ paddingTop: \"70px\" }}>\n          <Grid.Column width={4} style={{ padding: \"0px\" }}>\n          {error && <span className=\"error-message\">{error}</span>}\n      <Form>\n        <Form.Field>\n          <label>First Name</label>\n          <input\n            type=\"text\"\n            required\n            id=\"name\"\n            placeholder=\"Enter username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>email</label>\n          <input\n            type=\"email\"\n            required\n            id=\"email\"\n            placeholder=\"Email address\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>password</label>\n        <input\n            type=\"password\"\n            required\n            id=\"password\"\n            autoComplete=\"true\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>confirm password</label>\n        <input\n            type=\"password\"\n            required  \n            autoComplete=\"true\"\n            placeholder=\"Confirm password\"\n            value={confirmpassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Field>\n        <Button onClick={registerHandler}>Submit</Button>\n    </Form>\n    <span className=\"register-screen__subtext\">\n          Already have an account? <Link to=\"/login\">Login</Link>\n    </span>\n      \n          </Grid.Column>\n  \n          <Grid.Column width={4} style={{ padding: \"0px\" }}>\n          <Segment\n              textAlign='center'\n              style={{\n                height: \"65vh\",\n                backgroundImage: \"url(/log.jpeg)\"\n              }}\n            >\n            </Segment>\n                </Grid.Column>\n                \n  \n        </Grid>\n  \n      \n    </div>\n  );\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}