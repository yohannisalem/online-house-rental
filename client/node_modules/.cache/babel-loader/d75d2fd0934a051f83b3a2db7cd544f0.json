{"ast":null,"code":"import WebMercatorViewport from './web-mercator-viewport';\nimport { mod, log2 } from './math-utils';\nconst MAX_LATITUDE = 85.05113;\nconst MIN_LATITUDE = -85.05113;\nexport default function normalizeViewportProps({\n  width,\n  height,\n  longitude,\n  latitude,\n  zoom,\n  pitch = 0,\n  bearing = 0\n}) {\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  let flatViewport = new WebMercatorViewport({\n    width,\n    height,\n    longitude,\n    latitude,\n    zoom\n  });\n  let topY = flatViewport.project([longitude, MAX_LATITUDE])[1];\n  let bottomY = flatViewport.project([longitude, MIN_LATITUDE])[1];\n  let shiftY = 0;\n\n  if (bottomY - topY < height) {\n    zoom += log2(height / (bottomY - topY));\n    flatViewport = new WebMercatorViewport({\n      width,\n      height,\n      longitude,\n      latitude,\n      zoom\n    });\n    topY = flatViewport.project([longitude, MAX_LATITUDE])[1];\n    bottomY = flatViewport.project([longitude, MIN_LATITUDE])[1];\n  }\n\n  if (topY > 0) {\n    shiftY = topY;\n  } else if (bottomY < height) {\n    shiftY = bottomY - height;\n  }\n\n  if (shiftY) {\n    latitude = flatViewport.unproject([width / 2, height / 2 + shiftY])[1];\n  }\n\n  return {\n    width,\n    height,\n    longitude,\n    latitude,\n    zoom,\n    pitch,\n    bearing\n  };\n}","map":{"version":3,"sources":["../../src/normalize-viewport-props.js"],"names":["MAX_LATITUDE","MIN_LATITUDE","pitch","bearing","longitude","mod","flatViewport","zoom","topY","bottomY","shiftY","log2","height","latitude","width"],"mappings":"AAAA,OAAA,mBAAA,MAAA,yBAAA;AACA,SAAA,GAAA,EAAA,IAAA,QAAA,cAAA;AAGA,MAAMA,YAAY,GAAlB,QAAA;AACA,MAAMC,YAAY,GAAG,CAArB,QAAA;AAIA,eAAe,SAAA,sBAAA,CAAgC;AAAA,EAAA,KAAA;AAAA,EAAA,MAAA;AAAA,EAAA,SAAA;AAAA,EAAA,QAAA;AAAA,EAAA,IAAA;AAM7CC,EAAAA,KAAK,GANwC,CAAA;AAO7CC,EAAAA,OAAO,GAAG;AAPmC,CAAhC,EAQZ;AAED,MAAIC,SAAS,GAAG,CAAZA,GAAAA,IAAoBA,SAAS,GAAjC,GAAA,EAAyC;AACvCA,IAAAA,SAAS,GAAGC,GAAG,CAACD,SAAS,GAAV,GAAA,EAAHC,GAAG,CAAHA,GAAZD,GAAAA;AACD;;AACD,MAAID,OAAO,GAAG,CAAVA,GAAAA,IAAkBA,OAAO,GAA7B,GAAA,EAAqC;AACnCA,IAAAA,OAAO,GAAGE,GAAG,CAACF,OAAO,GAAR,GAAA,EAAHE,GAAG,CAAHA,GAAVF,GAAAA;AACD;;AAGD,MAAIG,YAAY,GAAG,IAAA,mBAAA,CAAwB;AAAA,IAAA,KAAA;AAAA,IAAA,MAAA;AAAA,IAAA,SAAA;AAAA,IAAA,QAAA;AAAqCC,IAAAA;AAArC,GAAxB,CAAnB;AACA,MAAIC,IAAI,GAAGF,YAAY,CAAZA,OAAAA,CAAqB,CAAA,SAAA,EAArBA,YAAqB,CAArBA,EAAX,CAAWA,CAAX;AACA,MAAIG,OAAO,GAAGH,YAAY,CAAZA,OAAAA,CAAqB,CAAA,SAAA,EAArBA,YAAqB,CAArBA,EAAd,CAAcA,CAAd;AACA,MAAII,MAAM,GAAV,CAAA;;AAEA,MAAID,OAAO,GAAPA,IAAAA,GAAJ,MAAA,EAA6B;AAG3BF,IAAAA,IAAI,IAAII,IAAI,CAACC,MAAM,IAAIH,OAAO,GAA9BF,IAAmB,CAAP,CAAZA;AAGAD,IAAAA,YAAY,GAAG,IAAA,mBAAA,CAAwB;AAAA,MAAA,KAAA;AAAA,MAAA,MAAA;AAAA,MAAA,SAAA;AAAA,MAAA,QAAA;AAAqCC,MAAAA;AAArC,KAAxB,CAAfD;AACAE,IAAAA,IAAI,GAAGF,YAAY,CAAZA,OAAAA,CAAqB,CAAA,SAAA,EAArBA,YAAqB,CAArBA,EAAPE,CAAOF,CAAPE;AACAC,IAAAA,OAAO,GAAGH,YAAY,CAAZA,OAAAA,CAAqB,CAAA,SAAA,EAArBA,YAAqB,CAArBA,EAAVG,CAAUH,CAAVG;AACD;;AACD,MAAID,IAAI,GAAR,CAAA,EAAc;AAEZE,IAAAA,MAAM,GAANA,IAAAA;AAFF,GAAA,MAGO,IAAID,OAAO,GAAX,MAAA,EAAsB;AAE3BC,IAAAA,MAAM,GAAGD,OAAO,GAAhBC,MAAAA;AACD;;AACD,MAAA,MAAA,EAAY;AACVG,IAAAA,QAAQ,GAAGP,YAAY,CAAZA,SAAAA,CAAuB,CAACQ,KAAK,GAAN,CAAA,EAAYF,MAAM,GAANA,CAAAA,GAAnCN,MAAuB,CAAvBA,EAAXO,CAAWP,CAAXO;AACD;;AAED,SAAO;AAAA,IAAA,KAAA;AAAA,IAAA,MAAA;AAAA,IAAA,SAAA;AAAA,IAAA,QAAA;AAAA,IAAA,IAAA;AAAA,IAAA,KAAA;AAAkDV,IAAAA;AAAlD,GAAP;AACD","sourcesContent":["import WebMercatorViewport from './web-mercator-viewport';\nimport {mod, log2} from './math-utils';\n\n// defined by mapbox-gl\nconst MAX_LATITUDE = 85.05113;\nconst MIN_LATITUDE = -85.05113;\n\n// Apply mathematical constraints to viewport props\n// eslint-disable-next-line complexity\nexport default function normalizeViewportProps({\n  width,\n  height,\n  longitude,\n  latitude,\n  zoom,\n  pitch = 0,\n  bearing = 0\n}) {\n  // Normalize degrees\n  if (longitude < -180 || longitude > 180) {\n    longitude = mod(longitude + 180, 360) - 180;\n  }\n  if (bearing < -180 || bearing > 180) {\n    bearing = mod(bearing + 180, 360) - 180;\n  }\n\n  // Constrain zoom and shift center at low zoom levels\n  let flatViewport = new WebMercatorViewport({width, height, longitude, latitude, zoom});\n  let topY = flatViewport.project([longitude, MAX_LATITUDE])[1];\n  let bottomY = flatViewport.project([longitude, MIN_LATITUDE])[1];\n  let shiftY = 0;\n\n  if (bottomY - topY < height) {\n    // Map height must not be smaller than viewport height\n    // Zoom out map to fit map height into viewport\n    zoom += log2(height / (bottomY - topY));\n\n    // Calculate top and bottom using new zoom\n    flatViewport = new WebMercatorViewport({width, height, longitude, latitude, zoom});\n    topY = flatViewport.project([longitude, MAX_LATITUDE])[1];\n    bottomY = flatViewport.project([longitude, MIN_LATITUDE])[1];\n  }\n  if (topY > 0) {\n    // Compensate for white gap on top\n    shiftY = topY;\n  } else if (bottomY < height) {\n    // Compensate for white gap on bottom\n    shiftY = bottomY - height;\n  }\n  if (shiftY) {\n    latitude = flatViewport.unproject([width / 2, height / 2 + shiftY])[1];\n  }\n\n  return {width, height, longitude, latitude, zoom, pitch, bearing};\n}\n"]},"metadata":{},"sourceType":"module"}