{"ast":null,"code":"var _jsxFileName = \"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/LandlordRegister.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { Button, Form, Grid, Segment, Header } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LandlordRegister = () => {\n  _s();\n\n  let history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const registerHandler = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (password !== confirmpassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const {\n        data\n      } = await axios.post(\"http://localhost:5000/api/auth/landlordRegister\", {\n        username,\n        phone,\n        email,\n        password\n      }, config);\n      localStorage.setItem(\"authToken\", data.token);\n      history.push(\"/listproperty\");\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 7,\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          textAlign: \"center\",\n          style: {\n            minHeight: 640,\n            backgroundImage: \"url(/des2.jpg)\",\n            height: \"80vh\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Header, {\n            as: \"h1\",\n            content: \"Need a house near your workplace\",\n            style: {\n              fontSize: '4em',\n              fontFamily: \"NunitoSans, Helvetica, sans-serif\",\n              fontWeight: 'bold',\n              marginBottom: 0,\n              marginTop: '3em',\n              color: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 9,\n        children: [error && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"User name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              required: true,\n              id: \"name\",\n              placeholder: \"Enter username\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              required: true,\n              id: \"phone\",\n              placeholder: \"Enter phone\",\n              value: username,\n              onChange: e => setPhone(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              required: true,\n              id: \"email\",\n              placeholder: \"Email address\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              required: true,\n              id: \"password\",\n              autoComplete: \"true\",\n              placeholder: \"Enter password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"confirm password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              required: true,\n              autoComplete: \"true\",\n              placeholder: \"Confirm password\",\n              value: confirmpassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: registerHandler,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"register-screen__subtext\",\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/landlordLogin\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LandlordRegister, \"158YSHKM3OfKvYCanRN/HzQIUrk=\", false, function () {\n  return [useHistory];\n});\n\n_c = LandlordRegister;\nexport default LandlordRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandlordRegister\");","map":{"version":3,"sources":["/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/LandlordRegister.js"],"names":["React","useState","Link","Redirect","useHistory","Button","Form","Grid","Segment","Header","axios","LandlordRegister","history","username","setUsername","email","setEmail","phone","setPhone","password","setPassword","confirmpassword","setConfirmPassword","error","setError","registerHandler","e","preventDefault","config","header","setTimeout","data","post","localStorage","setItem","token","push","response","minHeight","backgroundImage","height","fontSize","fontFamily","fontWeight","marginBottom","marginTop","color","target","value"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport { Link,Redirect,useHistory} from \"react-router-dom\";\nimport { Button,Form,Grid,Segment,Header} from 'semantic-ui-react'\nimport axios from 'axios';\nconst LandlordRegister = () => {\n    let history = useHistory()\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const registerHandler = async (e) => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (password !== confirmpassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const { data } = await axios.post(\n        \"http://localhost:5000/api/auth/landlordRegister\",\n        {\n          username,\n          phone,\n          email,\n          password,\n        },\n        config\n      );\n      localStorage.setItem(\"authToken\",data.token)\n      history.push(\"/listproperty\")\n      \n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n    return (\n        <div>\n          <Grid>\n    <Grid.Column width={7}>\n    <Segment\n        textAlign='center'\n        style={{\n          minHeight: 640,\n          backgroundImage: \"url(/des2.jpg)\",\n          height: \"80vh\"\n        }}\n      >\n        <Header\n          as='h1'\n          content='Need a house near your workplace'\n          style={{\n            fontSize: '4em',\n            fontFamily: \"NunitoSans, Helvetica, sans-serif\",\n            fontWeight: 'bold',\n            marginBottom: 0,\n            marginTop: '3em',\n            color: \"white\"\n          }}\n        />\n      </Segment>\n    </Grid.Column>\n    <Grid.Column width={9}>\n    {error && <span className=\"error-message\">{error}</span>}\n      <Form>\n        <Form.Field>\n          <label>User name</label>\n          <input\n            type=\"text\"\n            required\n            id=\"name\"\n            placeholder=\"Enter username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Phone</label>\n          <input\n            type=\"text\"\n            required\n            id=\"phone\"\n            placeholder=\"Enter phone\"\n            value={username}\n            onChange={(e) => setPhone(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>email</label>\n          <input\n            type=\"email\"\n            required\n            id=\"email\"\n            placeholder=\"Email address\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>password</label>\n        <input\n            type=\"password\"\n            required\n            id=\"password\"\n            autoComplete=\"true\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>confirm password</label>\n        <input\n            type=\"password\"\n            required  \n            autoComplete=\"true\"\n            placeholder=\"Confirm password\"\n            value={confirmpassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Field>\n        <Button onClick={registerHandler}>Submit</Button>\n    </Form>\n    <span className=\"register-screen__subtext\">\n          Already have an account? <Link to=\"/landlordLogin\">Login</Link>\n    </span>\n    </Grid.Column>\n   \n  </Grid>\n            \n        </div>\n    )\n}\n\nexport default LandlordRegister\n"]},"metadata":{},"sourceType":"module"}