{"ast":null,"code":"var _jsxFileName = \"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/FileUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport storage from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileUp = () => {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [urls, setUrls] = useState([]);\n  const [video, setVideo] = useState(null);\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = e => {\n    for (let i = 0; i < e.target.files.length; i++) {\n      const newImage = e.target.files[i];\n      newImage[\"id\"] = Math.random();\n      setImages(prevState => [...prevState, newImage]);\n    }\n  };\n\n  const handleUpload = () => {\n    const promises = [];\n    const uploadTaskTwo = storage.ref(`images/${video.name}`).put(video);\n    uploadTaskTwo.on(\"state_changed\", snapshot => {\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      console.log(error);\n    }, async () => {\n      await storage.ref(\"images\").child(video.name).getDownloadURL().then(urls => {\n        setUrls(prevState => [...prevState, urls]);\n      });\n    });\n    images.map(image => {\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      promises.push(uploadTask);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        setProgress(progress);\n      }, error => {\n        console.log(error);\n      }, async () => {\n        await storage.ref(\"images\").child(image.name).getDownloadURL().then(urls => {\n          setUrls(prevState => [...prevState, urls]);\n        });\n      });\n    });\n    Promise.all(promises).then(() => alert(\"All images uploaded\")).catch(err => console.log(err));\n  };\n\n  console.log(\"images: \", images);\n  console.log(\"urls\", urls);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"100px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n      value: progress,\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setVideo(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), urls.map((url, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        target: \"_blank\",\n        children: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), urls.map((url, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: \"500px\"\n      },\n      src: url || \"http://via.placeholder.com/300\",\n      alt: \"firebase-image\"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileUp, \"FE+KdPVTij3Dg52TAnbVD1Za2ME=\");\n\n_c = FileUp;\nexport default FileUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUp\");","map":{"version":3,"sources":["/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/FileUp.js"],"names":["React","useState","storage","FileUp","images","setImages","urls","setUrls","video","setVideo","progress","setProgress","handleChange","e","i","target","files","length","newImage","Math","random","prevState","handleUpload","promises","uploadTaskTwo","ref","name","put","on","snapshot","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","map","image","uploadTask","push","Promise","all","alert","catch","err","marginTop","url","width"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport storage from \"../../firebase\";\nconst FileUp = () => {\n    const [images, setImages] = useState([]);\n  const [urls, setUrls] = useState([]);const [video,setVideo] = useState(null)\n  \n  const [progress, setProgress] = useState(0);\n\n  const handleChange = (e) => {\n    for (let i = 0; i < e.target.files.length; i++) {\n      const newImage = e.target.files[i];\n      newImage[\"id\"] = Math.random();\n      setImages((prevState) => [...prevState, newImage]);\n    }\n  };\n\n  const handleUpload = () => {\n    const promises = [];\n    const uploadTaskTwo = storage.ref(`images/${video.name}`).put(video)\n    uploadTaskTwo.on(\n      \"state_changed\",\n      (snapshot) => {\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progress);\n      },\n      (error) => {\n        console.log(error);\n      },\n      async () => {\n        await storage\n          .ref(\"images\")\n          .child(video.name)\n          .getDownloadURL()\n          .then((urls) => {\n            setUrls((prevState) => [...prevState, urls]);\n          });\n      }\n    );\n    images.map((image) => {\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      promises.push(uploadTask);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n        },\n        (error) => {\n          console.log(error);\n        },\n        async () => {\n          await storage\n            .ref(\"images\")\n            .child(image.name)\n            .getDownloadURL()\n            .then((urls) => {\n              setUrls((prevState) => [...prevState, urls]);\n            });\n        }\n      );\n      \n    });\n\n    Promise.all(promises)\n      .then(() => alert(\"All images uploaded\"))\n      .catch((err) => console.log(err));\n  };\n\n  console.log(\"images: \", images);\n  console.log(\"urls\", urls);\n\n  return (\n    <div style={{marginTop:\"100px\"}}>\n      <progress value={progress} max=\"100\" />\n      <br />\n      <br />\n      <input type=\"file\" multiple onChange={handleChange} />\n      <input type=\"file\"  onChange={(e)=>setVideo(e.target.files[0])} />\n      <button onClick={handleUpload}>Upload</button>\n      <br />\n      {urls.map((url, i) => (\n        <div key={i}>\n          <a href={url} target=\"_blank\">\n            {url}\n          </a>\n        </div>\n      ))}\n      <br />\n      {urls.map((url, i) => (\n        <img\n          key={i}\n          style={{ width: \"500px\" }}\n          src={url || \"http://via.placeholder.com/300\"}\n          alt=\"firebase-image\"\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default FileUp\n\n\n\n"]},"metadata":{},"sourceType":"module"}