{"ast":null,"code":"var _jsxFileName = \"/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { Button, Form, Grid, Segment } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  let history = useHistory();\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const registerHandler = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (password !== confirmpassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const {\n        data\n      } = await axios.post(\"http://localhost:5000/api/auth/register\", {\n        firstname,\n        lastname,\n        username,\n        email,\n        password\n      }, config);\n      localStorage.setItem(\"authToken\", data.token);\n      history.push(\"/\");\n    } catch (error) {\n      setError(error.response.data.err.message);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      backgroundColor: \"#edeff2\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      style: {\n        paddingTop: \"70px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 8,\n        style: {\n          padding: \"0px\"\n        },\n        children: [error && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Ooops \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/landlordRegister\",\n            children: \"I'm Landlord\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: 2,\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                required: true,\n                id: \"name\",\n                placeholder: \"Enter FirstName\",\n                value: firstname,\n                onChange: e => setFirstname(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                required: true,\n                id: \"name\",\n                placeholder: \"Enter LastName\",\n                value: lastname,\n                onChange: e => setLastname(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"User Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              required: true,\n              id: \"name\",\n              placeholder: \"Enter username\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              required: true,\n              id: \"email\",\n              placeholder: \"Email address\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              required: true,\n              id: \"password\",\n              autoComplete: \"true\",\n              placeholder: \"Enter password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"confirm password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              required: true,\n              autoComplete: \"true\",\n              placeholder: \"Confirm password\",\n              value: confirmpassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: registerHandler,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 4,\n        style: {\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          textAlign: \"center\",\n          style: {\n            height: \"65vh\",\n            backgroundImage: \"url(/log.jpeg)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"8NwNx+gJdJuxTVad2KGSaBQqRSM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/Register.js"],"names":["React","useState","axios","Link","Redirect","useHistory","Button","Form","Grid","Segment","Register","history","firstname","setFirstname","lastname","setLastname","username","setUsername","email","setEmail","password","setPassword","confirmpassword","setConfirmPassword","error","setError","registerHandler","e","preventDefault","config","header","setTimeout","data","post","localStorage","setItem","token","push","response","err","message","height","backgroundColor","paddingTop","padding","target","value","backgroundImage"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport axios from \"axios\";\nimport { Link,Redirect,useHistory} from \"react-router-dom\";\nimport { Button,Form,Grid,Segment} from 'semantic-ui-react'\n\nconst Register = () => {\n  let history = useHistory()\n  const [firstname, setFirstname] = useState(\"\")\n  const [lastname, setLastname] = useState(\"\")\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const registerHandler = async (e) => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (password !== confirmpassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const { data } = await axios.post(\n        \"http://localhost:5000/api/auth/register\", {firstname,lastname,username, email, password,},\n        config\n      );\n      localStorage.setItem(\"authToken\",data.token)\n      history.push(\"/\")\n      \n    } catch (error) {\n      setError(error.response.data.err.message);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return (\n    <div style={{height:\"100vh\",backgroundColor:\"#edeff2\"}}>\n      <Grid textAlign=\"center\" verticalAlign='middle' style={{ paddingTop: \"70px\" }}>\n          <Grid.Column width={8} style={{ padding: \"0px\" }}>\n          {error && <span className=\"error-message\">{error}</span>}\n          <span >\n          Already have an account? <Link to=\"/login\">Login</Link>\n    </span>\n    <br/>\n    <span>\n    Ooops <Link to=\"/landlordRegister\">I'm Landlord</Link>\n    </span>\n      <Form>\n      <Form.Group widths={2}>\n      <Form.Field>\n          <label>First Name</label>\n          <input\n            type=\"text\"\n            required\n            id=\"name\"\n            placeholder=\"Enter FirstName\"\n            value={firstname}\n            onChange={(e) => setFirstname(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Last Name</label>\n          <input\n            type=\"text\"\n            required\n            id=\"name\"\n            placeholder=\"Enter LastName\"\n            value={lastname}\n            onChange={(e) => setLastname(e.target.value)}\n          />\n        </Form.Field>\n    </Form.Group>\n        <Form.Field>\n          <label>User Name</label>\n          <input\n            type=\"text\"\n            required\n            id=\"name\"\n            placeholder=\"Enter username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>email</label>\n          <input\n            type=\"email\"\n            required\n            id=\"email\"\n            placeholder=\"Email address\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>password</label>\n        <input\n            type=\"password\"\n            required\n            id=\"password\"\n            autoComplete=\"true\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>confirm password</label>\n        <input\n            type=\"password\"\n            required  \n            autoComplete=\"true\"\n            placeholder=\"Confirm password\"\n            value={confirmpassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Field>\n        <Button onClick={registerHandler}>Submit</Button>\n    </Form>\n   \n      \n          </Grid.Column>\n  \n          <Grid.Column width={4} style={{ padding: \"0px\" }}>\n          <Segment\n              textAlign='center'\n              style={{\n                height: \"65vh\",\n                backgroundImage: \"url(/log.jpeg)\"\n              }}\n            >\n            </Segment>\n                </Grid.Column>\n                \n  \n        </Grid>\n  \n      \n    </div>\n  );\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}