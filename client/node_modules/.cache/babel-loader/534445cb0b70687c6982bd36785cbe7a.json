{"ast":null,"code":"var _jsxFileName = \"/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/AdminLogin.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, Divider, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminLogin = () => {\n  _s();\n\n  let history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState({});\n\n  const loginHandler = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const {\n        data\n      } = await axios.get(\"http://localhost:5000/admin/login\", {\n        email,\n        password\n      }, config);\n      setUser(data);\n      localStorage.setItem(\"adminToken\", data.token);\n      history.push('/admin');\n    } catch (error) {\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: \"99vh\",\n      backgroundImage: \"url(/admin.jpeg)\",\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      style: {\n        paddingTop: \"70px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 4,\n        style: {\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          textAlign: \"center\",\n          style: {\n            height: \"65vh\",\n            backgroundImage: \"url(/lff.jpeg)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 4,\n        style: {\n          padding: \"0px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          stacked: true,\n          style: {\n            backgroundColor: \"lightGray\",\n            height: \"65vh\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            as: \"h2\",\n            color: \"teal\",\n            textAlign: \"center\",\n            children: \"Admin Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            size: \"large\",\n            style: {\n              verticalAlign: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              icon: \"user\",\n              iconPosition: \"left\",\n              type: \"email\",\n              required: true,\n              id: \"email\",\n              placeholder: \"Email address\",\n              onChange: e => setEmail(e.target.value),\n              name: \"email\",\n              tabIndex: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              icon: \"lock\",\n              iconPosition: \"left\",\n              type: \"password\",\n              required: true,\n              id: \"password\",\n              name: \"password\",\n              autoComplete: \"true\",\n              placeholder: \"Enter password\",\n              onChange: e => setPassword(e.target.value),\n              tabIndex: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: loginHandler,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminLogin, \"Gq7uaqwnQ2Asjhd6uQH6auPo7tE=\", false, function () {\n  return [useHistory];\n});\n\n_c = AdminLogin;\nexport default AdminLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"sources":["/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/AdminLogin.js"],"names":["axios","React","useState","Link","useHistory","Button","Divider","Form","Grid","Header","Message","Segment","AdminLogin","history","email","setEmail","password","setPassword","error","setError","user","setUser","loginHandler","e","preventDefault","config","header","data","get","localStorage","setItem","token","push","setTimeout","minHeight","backgroundImage","backgroundSize","backgroundRepeat","paddingTop","padding","height","backgroundColor","verticalAlign","target","value"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, Divider, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nconst AdminLogin = () => {\n    let history = useHistory()\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [user, setUser] = useState({})\n  \n    const loginHandler = async (e) => {\n      e.preventDefault();\n  \n      const config = {\n        header: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n  \n      try {\n        const { data } = await axios.get(\n          \"http://localhost:5000/admin/login\",\n          { email, password },\n          config\n        );\n        setUser(data)\n  \n        localStorage.setItem(\"adminToken\", data.token);\n        history.push('/admin');\n      } catch (error) {\n  \n        setTimeout(() => {\n          setError(\"\");\n        }, 5000);\n      }\n    };\n    return (\n        <div style={{ minHeight: \"99vh\", backgroundImage:\"url(/admin.jpeg)\",backgroundSize: \"cover\",backgroundRepeat:\"no-repeat\"}}>\n      <Grid textAlign=\"center\" verticalAlign='middle' style={{ paddingTop: \"70px\" }}>\n        <Grid.Column width={4} style={{ padding: \"0px\" }}>\n          <Segment\n            textAlign='center'\n            style={{\n              height: \"65vh\",\n              backgroundImage: \"url(/lff.jpeg)\"\n            }}\n          >\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column width={4} style={{ padding: \"0px\" }}>\n          <Segment\n            stacked style={{ backgroundColor: \"lightGray\", height: \"65vh\" }}\n            \n          >\n\n            <Header as='h2' color='teal' textAlign='center'>\n             Admin Login\n            </Header>\n            {error && <span className=\"error-message\">{error}</span>}\n            <Form size='large' style={{verticalAlign:\"center\"}}>\n\n              <Form.Input fluid icon='user' iconPosition='left' type=\"email\"\n                required\n                id=\"email\"\n                placeholder=\"Email address\"\n                onChange={(e) => setEmail(e.target.value)}\n                name=\"email\"\n                tabIndex={1}\n              />\n\n              <Form.Input\n                fluid\n                icon='lock'\n                iconPosition='left'\n                type=\"password\"\n                required\n                id=\"password\"\n                name=\"password\"\n                autoComplete=\"true\"\n                placeholder=\"Enter password\"\n                onChange={(e) => setPassword(e.target.value)}\n              \n                tabIndex={2}\n              />\n              \n              <Divider hidden/>\n              <Button onClick={loginHandler}>Login</Button>\n\n            </Form>\n            \n          </Segment>\n        </Grid.Column>\n\n      </Grid>\n\n\n\n    </div>\n    )\n}\n\nexport default AdminLogin\n"]},"metadata":{},"sourceType":"module"}