{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n\nconst useGeoLocation = () => {\n  _s();\n\n  const [location, setLocation] = useState({\n    loaded: false,\n    coordinates: {\n      lat: \"\",\n      lng: \"\"\n    }\n  });\n\n  const onSuccess = location => {\n    setLocation({\n      loaded: true,\n      coordinates: {\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      }\n    });\n  };\n\n  const onError = error => {\n    setLocation({\n      loaded: true,\n      error: {\n        code: error.code,\n        message: error.message\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      onError({\n        code: 0,\n        message: \"Geolocation not supported\"\n      });\n    }\n\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []);\n  return location;\n};\n\n_s(useGeoLocation, \"F/eUcbs58gUsRZXxr4MyKorg5cU=\");\n\nexport default useGeoLocation;","map":{"version":3,"sources":["/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/maps/useGeoLocation.js"],"names":["React","useState","useEffect","useGeoLocation","location","setLocation","loaded","coordinates","lat","lng","onSuccess","coords","latitude","longitude","onError","error","code","message","navigator","geolocation","getCurrentPosition"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC;AACrCK,IAAAA,MAAM,EAAE,KAD6B;AAErCC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,GAAG,EAAE;AAAhB;AAFwB,GAAD,CAAxC;;AAKA,QAAMC,SAAS,GAAIN,QAAD,IAAc;AAC5BC,IAAAA,WAAW,CAAC;AACRC,MAAAA,MAAM,EAAE,IADA;AAERC,MAAAA,WAAW,EAAE;AACTC,QAAAA,GAAG,EAAEJ,QAAQ,CAACO,MAAT,CAAgBC,QADZ;AAETH,QAAAA,GAAG,EAAEL,QAAQ,CAACO,MAAT,CAAgBE;AAFZ;AAFL,KAAD,CAAX;AAOH,GARD;;AAUA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACvBV,IAAAA,WAAW,CAAC;AACRC,MAAAA,MAAM,EAAE,IADA;AAERS,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAED,KAAK,CAACC,IADT;AAEHC,QAAAA,OAAO,EAAEF,KAAK,CAACE;AAFZ;AAFC,KAAD,CAAX;AAOH,GARD;;AAUAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,EAAE,iBAAiBgB,SAAnB,CAAJ,EAAmC;AAC/BJ,MAAAA,OAAO,CAAC;AACJE,QAAAA,IAAI,EAAE,CADF;AAEJC,QAAAA,OAAO,EAAE;AAFL,OAAD,CAAP;AAIH;;AAEDC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCV,SAAzC,EAAoDI,OAApD;AACH,GATQ,EASN,EATM,CAAT;AAWA,SAAOV,QAAP;AACH,CAtCD;;GAAMD,c;;AAwCN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst useGeoLocation = () => {\n    const [location, setLocation] = useState({\n        loaded: false,\n        coordinates: { lat: \"\", lng: \"\" },\n    });\n\n    const onSuccess = (location) => {\n        setLocation({\n            loaded: true,\n            coordinates: {\n                lat: location.coords.latitude,\n                lng: location.coords.longitude,\n            },\n        });\n    };\n\n    const onError = (error) => {\n        setLocation({\n            loaded: true,\n            error: {\n                code: error.code,\n                message: error.message,\n            },\n        });\n    };\n\n    useEffect(() => {\n        if (!(\"geolocation\" in navigator)) {\n            onError({\n                code: 0,\n                message: \"Geolocation not supported\",\n            });\n        }\n\n        navigator.geolocation.getCurrentPosition(onSuccess, onError);\n    }, []);\n\n    return location;\n};\n\nexport default useGeoLocation;"]},"metadata":{},"sourceType":"module"}