{"ast":null,"code":"var _jsxFileName = \"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/maps/HousesLocation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport useSwr from \"swr\";\nimport ReactMapGL, { Marker, FlyToInterpolator } from \"react-map-gl\";\nimport useSupercluster from \"use-supercluster\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\n\nconst HousesLocation = () => {\n  _s();\n\n  const [viewport, setViewport] = useState({\n    latitude: 52.6376,\n    longitude: -1.135171,\n    width: \"100vw\",\n    height: \"90vh\",\n    zoom: 12\n  });\n  const mapRef = useRef();\n  const url = \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2019-10\";\n  const {\n    data,\n    error\n  } = useSwr(url, {\n    fetcher\n  });\n  const crimes = data && !error ? data.slice(0, 2000) : [];\n  const points = crimes.map(crime => ({\n    type: \"Feature\",\n    properties: {\n      cluster: false,\n      crimeId: crime.id,\n      category: crime.category\n    },\n    geometry: {\n      type: \"Point\",\n      coordinates: [parseFloat(crime.location.longitude), parseFloat(crime.location.latitude)]\n    }\n  }));\n  const bounds = mapRef.current ? mapRef.current.getMap().getBounds().toArray().flat() : null;\n  const {\n    clusters,\n    supercluster\n  } = useSupercluster({\n    points,\n    bounds,\n    zoom: viewport.zoom,\n    options: {\n      radius: 75,\n      maxZoom: 20\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReactMapGL, { ...viewport,\n      maxZoom: 20,\n      mapboxApiAccessToken: 'pk.eyJ1IjoieW9oYW5uaXN3ZWRlIiwiYSI6ImNrc2x5dXNnYTA5cm4ybnAwdjM4MXI0MnAifQ.isUCw64XCoBGOAaEpDUPLw',\n      onViewportChange: newViewport => {\n        setViewport({ ...newViewport\n        });\n      },\n      ref: mapRef,\n      children: clusters.map(cluster => {\n        const [longitude, latitude] = cluster.geometry.coordinates;\n        const {\n          cluster: isCluster,\n          point_count: pointCount\n        } = cluster.properties;\n\n        if (isCluster) {\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            latitude: latitude,\n            longitude: longitude,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cluster-marker\",\n              style: {\n                width: `${10 + pointCount / points.length * 20}px`,\n                height: `${10 + pointCount / points.length * 20}px`\n              },\n              onClick: () => {\n                const expansionZoom = Math.min(supercluster.getClusterExpansionZoom(cluster.id), 20);\n                setViewport({ ...viewport,\n                  latitude,\n                  longitude,\n                  zoom: expansionZoom,\n                  transitionInterpolator: new FlyToInterpolator({\n                    speed: 2\n                  }),\n                  transitionDuration: \"auto\"\n                });\n              },\n              children: pointCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)\n          }, `cluster-${cluster.id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          latitude: latitude,\n          longitude: longitude,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"crime-marker\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/house.svg\",\n              alt: \"crime doesn't pay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, `crime-${cluster.properties.crimeId}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HousesLocation, \"jZjQ7Rm6UkTVqdfD6UaBtWTybVA=\", false, function () {\n  return [useSwr, useSupercluster];\n});\n\n_c = HousesLocation;\nexport default HousesLocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"HousesLocation\");","map":{"version":3,"sources":["/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/maps/HousesLocation.js"],"names":["React","useState","useRef","useSwr","ReactMapGL","Marker","FlyToInterpolator","useSupercluster","fetcher","args","fetch","then","response","json","HousesLocation","viewport","setViewport","latitude","longitude","width","height","zoom","mapRef","url","data","error","crimes","slice","points","map","crime","type","properties","cluster","crimeId","id","category","geometry","coordinates","parseFloat","location","bounds","current","getMap","getBounds","toArray","flat","clusters","supercluster","options","radius","maxZoom","newViewport","isCluster","point_count","pointCount","length","expansionZoom","Math","min","getClusterExpansionZoom","transitionInterpolator","speed","transitionDuration"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,UAAP,IAAqBC,MAArB,EAA6BC,iBAA7B,QAAsD,cAAtD;AACA,OAAOC,eAAP,MAA4B,kBAA5B;;;AACA,MAAMC,OAAO,GAAG,CAAC,GAAGC,IAAJ,KAAaC,KAAK,CAAC,GAAGD,IAAJ,CAAL,CAAeE,IAAf,CAAoBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAhC,CAA7B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC;AACrCgB,IAAAA,QAAQ,EAAE,OAD2B;AAErCC,IAAAA,SAAS,EAAE,CAAC,QAFyB;AAGrCC,IAAAA,KAAK,EAAE,OAH8B;AAIrCC,IAAAA,MAAM,EAAE,MAJ6B;AAKrCC,IAAAA,IAAI,EAAE;AAL+B,GAAD,CAAxC;AAOE,QAAMC,MAAM,GAAGpB,MAAM,EAArB;AAEA,QAAMqB,GAAG,GACP,6FADF;AAEA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBtB,MAAM,CAACoB,GAAD,EAAM;AAAEf,IAAAA;AAAF,GAAN,CAA9B;AACA,QAAMkB,MAAM,GAAGF,IAAI,IAAI,CAACC,KAAT,GAAiBD,IAAI,CAACG,KAAL,CAAW,CAAX,EAAc,IAAd,CAAjB,GAAuC,EAAtD;AACA,QAAMC,MAAM,GAAGF,MAAM,CAACG,GAAP,CAAWC,KAAK,KAAK;AAClCC,IAAAA,IAAI,EAAE,SAD4B;AAElCC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,OAAO,EAAEJ,KAAK,CAACK,EAAjC;AAAqCC,MAAAA,QAAQ,EAAEN,KAAK,CAACM;AAArD,KAFsB;AAGlCC,IAAAA,QAAQ,EAAE;AACRN,MAAAA,IAAI,EAAE,OADE;AAERO,MAAAA,WAAW,EAAE,CACXC,UAAU,CAACT,KAAK,CAACU,QAAN,CAAetB,SAAhB,CADC,EAEXqB,UAAU,CAACT,KAAK,CAACU,QAAN,CAAevB,QAAhB,CAFC;AAFL;AAHwB,GAAL,CAAhB,CAAf;AAYA,QAAMwB,MAAM,GAAGnB,MAAM,CAACoB,OAAP,GACXpB,MAAM,CAACoB,OAAP,CACGC,MADH,GAEGC,SAFH,GAGGC,OAHH,GAIGC,IAJH,EADW,GAMX,IANJ;AAQA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BzC,eAAe,CAAC;AACjDqB,IAAAA,MADiD;AAEjDa,IAAAA,MAFiD;AAGjDpB,IAAAA,IAAI,EAAEN,QAAQ,CAACM,IAHkC;AAIjD4B,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,OAAO,EAAE;AAAvB;AAJwC,GAAD,CAAlD;AAMF,sBACI;AAAA,2BACI,QAAC,UAAD,OACApC,QADA;AAEJ,MAAA,OAAO,EAAE,EAFL;AAGJ,MAAA,oBAAoB,EAAE,kGAHlB;AAIJ,MAAA,gBAAgB,EAAEqC,WAAW,IAAI;AAC/BpC,QAAAA,WAAW,CAAC,EAAE,GAAGoC;AAAL,SAAD,CAAX;AACD,OANG;AAOJ,MAAA,GAAG,EAAE9B,MAPD;AAAA,gBASHyB,QAAQ,CAAClB,GAAT,CAAaI,OAAO,IAAI;AACvB,cAAM,CAACf,SAAD,EAAYD,QAAZ,IAAwBgB,OAAO,CAACI,QAAR,CAAiBC,WAA/C;AACA,cAAM;AACJL,UAAAA,OAAO,EAAEoB,SADL;AAEJC,UAAAA,WAAW,EAAEC;AAFT,YAGFtB,OAAO,CAACD,UAHZ;;AAKA,YAAIqB,SAAJ,EAAe;AACb,8BACE,QAAC,MAAD;AAEE,YAAA,QAAQ,EAAEpC,QAFZ;AAGE,YAAA,SAAS,EAAEC,SAHb;AAAA,mCAKE;AACE,cAAA,SAAS,EAAC,gBADZ;AAEE,cAAA,KAAK,EAAE;AACLC,gBAAAA,KAAK,EAAG,GAAE,KAAMoC,UAAU,GAAG3B,MAAM,CAAC4B,MAArB,GAA+B,EAAG,IAD5C;AAELpC,gBAAAA,MAAM,EAAG,GAAE,KAAMmC,UAAU,GAAG3B,MAAM,CAAC4B,MAArB,GAA+B,EAAG;AAF7C,eAFT;AAME,cAAA,OAAO,EAAE,MAAM;AACb,sBAAMC,aAAa,GAAGC,IAAI,CAACC,GAAL,CACpBX,YAAY,CAACY,uBAAb,CAAqC3B,OAAO,CAACE,EAA7C,CADoB,EAEpB,EAFoB,CAAtB;AAKAnB,gBAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVE,kBAAAA,QAFU;AAGVC,kBAAAA,SAHU;AAIVG,kBAAAA,IAAI,EAAEoC,aAJI;AAKVI,kBAAAA,sBAAsB,EAAE,IAAIvD,iBAAJ,CAAsB;AAC5CwD,oBAAAA,KAAK,EAAE;AADqC,mBAAtB,CALd;AAQVC,kBAAAA,kBAAkB,EAAE;AARV,iBAAD,CAAX;AAUD,eAtBH;AAAA,wBAwBGR;AAxBH;AAAA;AAAA;AAAA;AAAA;AALF,aACQ,WAAUtB,OAAO,CAACE,EAAG,EAD7B;AAAA;AAAA;AAAA;AAAA,kBADF;AAkCD;;AAED,4BACE,QAAC,MAAD;AAEE,UAAA,QAAQ,EAAElB,QAFZ;AAGE,UAAA,SAAS,EAAEC,SAHb;AAAA,iCAKE;AAAQ,YAAA,SAAS,EAAC,cAAlB;AAAA,mCACE;AAAK,cAAA,GAAG,EAAC,YAAT;AAAsB,cAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF,WACQ,SAAQe,OAAO,CAACD,UAAR,CAAmBE,OAAQ,EAD3C;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAvDA;AATG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsEH,CA9GD;;GAAMpB,c;UAYwBX,M,EAsBWI,e;;;KAlCnCO,c;AAgHN,eAAeA,cAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport useSwr from \"swr\";\nimport ReactMapGL, { Marker, FlyToInterpolator } from \"react-map-gl\";\nimport useSupercluster from \"use-supercluster\";\nconst fetcher = (...args) => fetch(...args).then(response => response.json());  \n\nconst HousesLocation = () => {\n    const [viewport, setViewport] = useState({\n        latitude: 52.6376,\n        longitude: -1.135171,\n        width: \"100vw\",\n        height: \"90vh\",\n        zoom: 12\n      });\n      const mapRef = useRef();\n    \n      const url =\n        \"https://data.police.uk/api/crimes-street/all-crime?lat=52.629729&lng=-1.131592&date=2019-10\";\n      const { data, error } = useSwr(url, { fetcher });\n      const crimes = data && !error ? data.slice(0, 2000) : [];\n      const points = crimes.map(crime => ({\n        type: \"Feature\",\n        properties: { cluster: false, crimeId: crime.id, category: crime.category },\n        geometry: {\n          type: \"Point\",\n          coordinates: [\n            parseFloat(crime.location.longitude),\n            parseFloat(crime.location.latitude)\n          ]\n        }\n      }));\n    \n      const bounds = mapRef.current\n        ? mapRef.current\n            .getMap()\n            .getBounds()\n            .toArray()\n            .flat()\n        : null;\n    \n      const { clusters, supercluster } = useSupercluster({\n        points,\n        bounds,\n        zoom: viewport.zoom,\n        options: { radius: 75, maxZoom: 20 }\n      });\n    return (\n        <div>\n            <ReactMapGL\n        {...viewport}\n        maxZoom={20}\n        mapboxApiAccessToken={'pk.eyJ1IjoieW9oYW5uaXN3ZWRlIiwiYSI6ImNrc2x5dXNnYTA5cm4ybnAwdjM4MXI0MnAifQ.isUCw64XCoBGOAaEpDUPLw'}\n        onViewportChange={newViewport => {\n          setViewport({ ...newViewport });\n        }}\n        ref={mapRef}\n      >\n        {clusters.map(cluster => {\n          const [longitude, latitude] = cluster.geometry.coordinates;\n          const {\n            cluster: isCluster,\n            point_count: pointCount\n          } = cluster.properties;\n\n          if (isCluster) {\n            return (\n              <Marker\n                key={`cluster-${cluster.id}`}\n                latitude={latitude}\n                longitude={longitude}\n              >\n                <div\n                  className=\"cluster-marker\"\n                  style={{\n                    width: `${10 + (pointCount / points.length) * 20}px`,\n                    height: `${10 + (pointCount / points.length) * 20}px`\n                  }}\n                  onClick={() => {\n                    const expansionZoom = Math.min(\n                      supercluster.getClusterExpansionZoom(cluster.id),\n                      20\n                    );\n\n                    setViewport({\n                      ...viewport,\n                      latitude,\n                      longitude,\n                      zoom: expansionZoom,\n                      transitionInterpolator: new FlyToInterpolator({\n                        speed: 2\n                      }),\n                      transitionDuration: \"auto\"\n                    });\n                  }}\n                >\n                  {pointCount}\n                </div>\n              </Marker>\n            );\n          }\n\n          return (\n            <Marker\n              key={`crime-${cluster.properties.crimeId}`}\n              latitude={latitude}\n              longitude={longitude}\n            >\n              <button className=\"crime-marker\">\n                <img src=\"/house.svg\" alt=\"crime doesn't pay\" />\n              </button>\n            </Marker>\n          );\n        })}\n      </ReactMapGL>\n        </div>\n    )\n}\n\nexport default HousesLocation\n"]},"metadata":{},"sourceType":"module"}