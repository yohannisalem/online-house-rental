{"ast":null,"code":"var _jsxFileName = \"/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SignaturePanel.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport SignaturePad from 'signature_pad';\nimport trimCanvas from 'trim-canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SignaturePanel extends Component {\n  constructor(...args) {\n    super(...args);\n    this._signPad = null;\n\n    this._excludeProps = () => {\n      const {\n        canvasProps,\n        clearOnResize,\n        ...signPadProps\n      } = this.props;\n      return signPadProps;\n    };\n\n    this.getCanvas = () => {\n      return this._canvas;\n    };\n\n    this.getTrimmedCanvas = () => {\n      // copy the canvas\n      const copy = document.createElement('canvas');\n      copy.width = this._canvas.width;\n      copy.height = this._canvas.height;\n      copy.getContext('2d').drawImage(this._canvas, 0, 0); // then trim it\n\n      return trimCanvas(copy);\n    };\n\n    this.getSignaturePad = () => {\n      return this._signPad;\n    };\n\n    this.clear = () => {\n      return this._signPad.clear();\n    };\n\n    this.isEmpty = () => {\n      return this._signPad.isEmpty();\n    };\n\n    this.fromDataURL = (dataURL, options) => {\n      return this._signPad.fromDataURL(dataURL, options);\n    };\n\n    this.toDataURL = (type, encoderOptions) => {\n      return this._signPad.toDataURL(type, encoderOptions);\n    };\n\n    this.fromData = pointGroups => {\n      return this._signPad.fromData(pointGroups);\n    };\n\n    this.toData = () => {\n      return this._signPad.toData();\n    };\n\n    this.off = () => {\n      window.removeEventListener('resize', this._checkClearOnResize);\n      return this._signPad.off();\n    };\n  }\n\n  componentDidMount() {\n    this._signPad = new SignaturePad(this._canvas, this._excludeProps()); // this._resizeCanvas()\n    // this.on()\n  }\n\n  componentWillUnmount() {\n    this.off();\n  }\n\n  componentDidUpdate() {\n    Object.assign(this._signPad, this._excludeProps());\n  }\n\n  render() {\n    const {\n      canvasProps\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: ref => {\n        this._canvas = ref;\n      },\n      ...canvasProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nSignaturePanel.propTypes = {\n  velocityFilterWeight: PropTypes.number,\n  minWidth: PropTypes.number,\n  maxWidth: PropTypes.number,\n  minDistance: PropTypes.number,\n  dotSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  penColor: PropTypes.string,\n  throttle: PropTypes.number,\n  onEnd: PropTypes.func,\n  onBegin: PropTypes.func,\n  canvasProps: PropTypes.object,\n  clearOnResize: PropTypes.bool,\n  name: PropTypes.string\n};\nSignaturePanel.defaultProps = {\n  clearOnResize: true\n};","map":{"version":3,"sources":["/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SignaturePanel.js"],"names":["PropTypes","React","Component","SignaturePad","trimCanvas","SignaturePanel","_signPad","_excludeProps","canvasProps","clearOnResize","signPadProps","props","getCanvas","_canvas","getTrimmedCanvas","copy","document","createElement","width","height","getContext","drawImage","getSignaturePad","clear","isEmpty","fromDataURL","dataURL","options","toDataURL","type","encoderOptions","fromData","pointGroups","toData","off","window","removeEventListener","_checkClearOnResize","componentDidMount","componentWillUnmount","componentDidUpdate","Object","assign","render","ref","propTypes","velocityFilterWeight","number","minWidth","maxWidth","minDistance","dotSize","oneOfType","func","penColor","string","throttle","onEnd","onBegin","object","bool","name","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport SignaturePad from 'signature_pad';\nimport trimCanvas from 'trim-canvas';\n\nexport default class SignaturePanel extends Component {\n    static propTypes = {\n      velocityFilterWeight: PropTypes.number,\n      minWidth: PropTypes.number,\n      maxWidth: PropTypes.number,\n      minDistance: PropTypes.number,\n      dotSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n      penColor: PropTypes.string,\n      throttle: PropTypes.number,\n      onEnd: PropTypes.func,\n      onBegin: PropTypes.func,\n      canvasProps: PropTypes.object,\n      clearOnResize: PropTypes.bool,\n      name : PropTypes.string,\n    }\n\n    static defaultProps = {\n      clearOnResize : true\n    }\n\n    _signPad = null\n\n    _excludeProps = () => {\n      const { canvasProps, clearOnResize, ...signPadProps } = this.props\n      return signPadProps\n    }\n\n    componentDidMount () {\n      this._signPad = new SignaturePad(this._canvas, this._excludeProps())\n      // this._resizeCanvas()\n      // this.on()\n    }\n\n    componentWillUnmount () {\n      this.off()\n    }\n\n    componentDidUpdate () {\n      Object.assign(this._signPad, this._excludeProps())\n    }\n\n    getCanvas = () => {\n      return this._canvas\n    }\n\n    getTrimmedCanvas = () => {\n      // copy the canvas\n      const copy = document.createElement('canvas')\n      copy.width = this._canvas.width\n      copy.height = this._canvas.height\n      copy.getContext('2d').drawImage(this._canvas, 0, 0)\n      // then trim it\n      return trimCanvas(copy)\n    }\n\n    getSignaturePad = () => {\n      return this._signPad\n    }\n\n    render () {\n      const { canvasProps } = this.props\n    return <canvas ref={(ref) => { this._canvas = ref }} {...canvasProps} />\n    }\n\n    clear = () => {\n      return this._signPad.clear()\n    }\n  \n    isEmpty = () => {\n      return this._signPad.isEmpty()\n    }\n  \n    fromDataURL = (dataURL, options) => {\n      return this._signPad.fromDataURL(dataURL, options)\n    }\n  \n    toDataURL = (type, encoderOptions) => {\n      return this._signPad.toDataURL(type, encoderOptions)\n    }\n  \n    fromData = (pointGroups) => {\n      return this._signPad.fromData(pointGroups)\n    }\n  \n    toData = () => {\n      return this._signPad.toData()\n    }\n    // on = () => {\n    //   window.addEventListener('resize', this._checkClearOnResize)\n    //   return this._signPad.on()\n    // }\n  \n    off = () => {\n      window.removeEventListener('resize', this._checkClearOnResize)\n      return this._signPad.off()\n    }\n}"]},"metadata":{},"sourceType":"module"}