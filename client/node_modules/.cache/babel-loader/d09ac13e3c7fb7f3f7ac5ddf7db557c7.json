{"ast":null,"code":"var _jsxFileName = \"/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SignaturePanel.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport SignaturePad from 'signature_pad';\nimport trimCanvas from 'trim-canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class SignaturePanel extends Component {\n  constructor(...args) {\n    super(...args);\n    this._signPad = null;\n\n    this._excludeProps = () => {\n      const {\n        canvasProps,\n        clearOnResize,\n        ...signPadProps\n      } = this.props;\n      return signPadProps;\n    };\n\n    this.getCanvas = () => {\n      return this._canvas;\n    };\n\n    this.getTrimmedCanvas = () => {\n      // copy the canvas\n      copy.width = this._canvas.width;\n      copy.height = this._canvas.height;\n      copy.name = this._canvas.name;\n      copy.getContext('2d').drawImage(this._canvas, 0, 0); // then trim it\n\n      return trimCanvas(copy);\n    };\n\n    this.getSignaturePad = () => {\n      return this._signPad;\n    };\n\n    this.clear = () => {\n      return this._signPad.clear();\n    };\n\n    this.isEmpty = () => {\n      return this._signPad.isEmpty();\n    };\n\n    this.fromDataURL = (dataURL, options) => {\n      return this._signPad.fromDataURL(dataURL, options);\n    };\n\n    this.toDataURL = (type, encoderOptions) => {\n      return this._signPad.toDataURL(type, encoderOptions);\n    };\n\n    this.fromData = pointGroups => {\n      return this._signPad.fromData(pointGroups);\n    };\n\n    this.toData = () => {\n      return this._signPad.toData();\n    };\n\n    this.off = () => {\n      window.removeEventListener('resize', this._checkClearOnResize);\n      return this._signPad.off();\n    };\n  }\n\n  componentDidMount() {\n    this._signPad = new SignaturePad(this._canvas, this._excludeProps()); // this._resizeCanvas()\n    // this.on()\n  }\n\n  componentWillUnmount() {\n    this.off();\n  }\n\n  componentDidUpdate() {\n    Object.assign(this._signPad, this._excludeProps());\n  }\n\n  render() {\n    const {\n      canvasProps\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: ref => {\n        this._canvas = ref;\n      },\n      ...canvasProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nSignaturePanel.propTypes = {\n  velocityFilterWeight: PropTypes.number,\n  minWidth: PropTypes.number,\n  maxWidth: PropTypes.number,\n  minDistance: PropTypes.number,\n  dotSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n  penColor: PropTypes.string,\n  throttle: PropTypes.number,\n  onEnd: PropTypes.func,\n  onBegin: PropTypes.func,\n  canvasProps: PropTypes.object,\n  clearOnResize: PropTypes.bool\n};\nSignaturePanel.defaultProps = {\n  clearOnResize: true\n};","map":{"version":3,"sources":["/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SignaturePanel.js"],"names":["PropTypes","React","Component","SignaturePad","trimCanvas","SignaturePanel","_signPad","_excludeProps","canvasProps","clearOnResize","signPadProps","props","getCanvas","_canvas","getTrimmedCanvas","copy","width","height","name","getContext","drawImage","getSignaturePad","clear","isEmpty","fromDataURL","dataURL","options","toDataURL","type","encoderOptions","fromData","pointGroups","toData","off","window","removeEventListener","_checkClearOnResize","componentDidMount","componentWillUnmount","componentDidUpdate","Object","assign","render","ref","propTypes","velocityFilterWeight","number","minWidth","maxWidth","minDistance","dotSize","oneOfType","func","penColor","string","throttle","onEnd","onBegin","object","bool","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport SignaturePad from 'signature_pad';\nimport trimCanvas from 'trim-canvas';\n\nexport default class SignaturePanel extends Component {\n    static propTypes = {\n      velocityFilterWeight: PropTypes.number,\n      minWidth: PropTypes.number,\n      maxWidth: PropTypes.number,\n      minDistance: PropTypes.number,\n      dotSize: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n      penColor: PropTypes.string,\n      throttle: PropTypes.number,\n      onEnd: PropTypes.func,\n      onBegin: PropTypes.func,\n      canvasProps: PropTypes.object,\n      clearOnResize: PropTypes.bool,\n    }\n\n    static defaultProps = {\n      clearOnResize : true\n    }\n\n    _signPad = null\n\n    _excludeProps = () => {\n      const { canvasProps, clearOnResize, ...signPadProps } = this.props\n      return signPadProps\n    }\n\n    componentDidMount () {\n      this._signPad = new SignaturePad(this._canvas, this._excludeProps())\n      // this._resizeCanvas()\n      // this.on()\n    }\n\n    componentWillUnmount () {\n      this.off()\n    }\n\n    componentDidUpdate () {\n      Object.assign(this._signPad, this._excludeProps())\n    }\n\n    getCanvas = () => {\n      return this._canvas\n    }\n\n    getTrimmedCanvas = () => {\n      // copy the canvas\n      copy.width = this._canvas.width\n      copy.height = this._canvas.height\n      copy.name=this._canvas.name\n      copy.getContext('2d').drawImage(this._canvas, 0, 0)\n      // then trim it\n      return trimCanvas(copy)\n    }\n\n    getSignaturePad = () => {\n      return this._signPad\n    }\n\n    render () {\n      const { canvasProps } = this.props\n    return <canvas ref={(ref) => { this._canvas = ref }} {...canvasProps} />\n    }\n\n    clear = () => {\n      return this._signPad.clear()\n    }\n  \n    isEmpty = () => {\n      return this._signPad.isEmpty()\n    }\n  \n    fromDataURL = (dataURL, options) => {\n      return this._signPad.fromDataURL(dataURL, options)\n    }\n  \n    toDataURL = (type, encoderOptions) => {\n      return this._signPad.toDataURL(type, encoderOptions)\n    }\n  \n    fromData = (pointGroups) => {\n      return this._signPad.fromData(pointGroups)\n    }\n  \n    toData = () => {\n      return this._signPad.toData()\n    }\n    // on = () => {\n    //   window.addEventListener('resize', this._checkClearOnResize)\n    //   return this._signPad.on()\n    // }\n  \n    off = () => {\n      window.removeEventListener('resize', this._checkClearOnResize)\n      return this._signPad.off()\n    }\n}"]},"metadata":{},"sourceType":"module"}