{"ast":null,"code":"var _jsxFileName = \"/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/EditHouse.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextArea, Progress, Form, Grid, Input, Segment } from 'semantic-ui-react';\nimport storage from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditHouse = () => {\n  _s();\n\n  const [housename, setHousename] = useState('');\n  const [description, setDescription] = useState('');\n  const [numberofbeds, setNumberOfBeds] = useState(0);\n  const [district, setDistrict] = useState('');\n  const [sefer, setSefer] = useState('');\n  const [feepermonth, setFeeperMonth] = useState(0);\n  const [size, setSize] = useState(0);\n  const [available, setAvailable] = useState(false);\n  const [propertytype, setPropertytype] = useState('');\n  const [video, setVideo] = useState(null);\n  const [imageUrls, setImageUrls] = useState([]);\n  const [videoUrls, setVideoUrls] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = e => {\n    e.preventDefault();\n    console.log(e.target.name);\n\n    for (let i = 0; i < e.target.files.length; i++) {\n      const newImage = e.target.files[i];\n      newImage[\"id\"] = Math.random();\n      setFiles(prevState => [...prevState, newImage]);\n    }\n  };\n\n  const handleVideoChange = e => {\n    e.preventDefault();\n    setVideo(e.target.files[0]);\n  };\n\n  const handleNameChange = e => {\n    setHousename(e.target.value);\n    console.log(housename);\n  };\n\n  const handleDescrptionChange = e => {\n    setDescription(e.target.value);\n  };\n\n  const handleDestrictChange = e => {\n    setDistrict(e.target.value);\n  };\n\n  const handleSeferChange = e => {\n    setSefer(e.target.value);\n  };\n\n  const handleTypeChange = e => {\n    setPropertytype(e.target.value);\n  };\n\n  const handleFeeChange = e => {\n    setFeeperMonth(e.target.value);\n  };\n\n  const handleSizeChange = e => {\n    setSize(e.target.value);\n  };\n\n  const handleAvailableChange = e => {\n    setAvailable(e.target.value);\n  };\n\n  const handleBedChange = e => {\n    setNumberOfBeds(e.target.value);\n  };\n\n  const updateHouse = async (housedata, houseId) => {\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(`http://localhost:5000/api/updateHouse/${houseId}`, housedata, config);\n      console.log(res);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleMultipleFileSubmit = async id => {\n    const formData = new FormData();\n    formData.append('housename', housename);\n    formData.append('description', description);\n    formData.append('district', district);\n    formData.append('sefer', sefer);\n    formData.append('numberofbeds', numberofbeds);\n    formData.append('size', size);\n    formData.append('feepermonth', feepermonth);\n    formData.append('available', available);\n    formData.append('propertytype', propertytype);\n    formData.append('video', videoUrls);\n\n    for (let i = 0; i < imageUrls.length; i++) {\n      formData.append('files', imageUrls[i]);\n    }\n\n    await updateHouse(formData, id);\n    console.log(formData);\n  };\n\n  const handleUpload = () => {\n    const promises = [];\n    const uploadTaskTwo = storage.ref(`images/${video.name}`).put(video);\n    promises.push(uploadTaskTwo);\n    uploadTaskTwo.on(\"state_changed\", snapshot => {\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      console.log(error);\n    }, async () => {\n      const urls = await storage.ref(\"images\").child(video.name).getDownloadURL();\n      setVideoUrls(prevState => [...prevState, urls]);\n      console.log(\"this is a video part\", urls);\n    });\n    files.map(image => {\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      promises.push(uploadTask);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        setProgress(progress);\n      }, error => {\n        console.log(error);\n      }, async () => {\n        const urls = await storage.ref(\"images\").child(image.name).getDownloadURL();\n        setImageUrls(prevState => [...prevState, urls]);\n        console.log(\"this is a iamge part\", urls);\n      });\n    });\n    Promise.all(promises).then(() => alert(\"All images uploaded\")).then().catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            raised: true,\n            children: [/*#__PURE__*/_jsxDEV(Progress, {\n              percent: progress,\n              success: true,\n              progress: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              id: \"form-input-control-last-name\",\n              control: Input,\n              name: \"housename\",\n              type: \"text\",\n              label: \"House Name\",\n              placeholder: \"house name\",\n              onChange: handleNameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              id: \"property type\",\n              control: Input,\n              label: \"Property Type\",\n              name: \"propertytype\",\n              placeholder: \"property type\",\n              onChange: handleTypeChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              id: \"district\",\n              control: Input,\n              label: \"District\",\n              name: \"district\",\n              placeholder: \"District or Sub City\",\n              onChange: handleDestrictChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              id: \"form-input-control-last-name\",\n              control: Input,\n              label: \"Sefer\",\n              name: \"sefer\",\n              placeholder: \"Sefer or Village\",\n              onChange: handleSeferChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              id: \"form-input-control-last-name\",\n              control: TextArea,\n              label: \"Description\",\n              name: \"description\",\n              placeholder: \"House description\",\n              onChange: handleDescrptionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              id: \"form-input-control-last-name\",\n              control: Input,\n              type: \"number\",\n              name: \"size\",\n              label: \"Square Footage\",\n              placeholder: \"Size of a house\",\n              onChange: handleSizeChange,\n              value: size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              id: \"form-input-control-last-name\",\n              control: Input,\n              type: \"number\",\n              name: \"feepermonth\",\n              label: \"Lease Fee\",\n              placeholder: \"Fee\",\n              onChange: handleFeeChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              id: \"form-input-control-last-name\",\n              control: Input,\n              type: \"number\",\n              name: \"numberofbeds\",\n              label: \"Number of Beds\",\n              placeholder: \"beds\",\n              onChange: handleBedChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              control: Input,\n              type: \"file\",\n              name: \"files\",\n              multiple: true,\n              label: \"Photos of the House\",\n              icon: \"upload\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              id: \"form-input-control-last-name\",\n              control: Input,\n              type: \"file\",\n              name: \"video\",\n              label: \"Videos about the house\",\n              onChange: handleVideoChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"available\",\n              id: \"available\",\n              onChange: handleAvailableChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"false\",\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"true\",\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpload,\n              children: \"confirm Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMultipleFileSubmit(house._id),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditHouse, \"tjWVC4Q+mlM/qbDcR1FMl2wbQb8=\");\n\n_c = EditHouse;\nexport default EditHouse;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditHouse\");","map":{"version":3,"sources":["/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/EditHouse.js"],"names":["React","useState","TextArea","Progress","Form","Grid","Input","Segment","storage","EditHouse","housename","setHousename","description","setDescription","numberofbeds","setNumberOfBeds","district","setDistrict","sefer","setSefer","feepermonth","setFeeperMonth","size","setSize","available","setAvailable","propertytype","setPropertytype","video","setVideo","imageUrls","setImageUrls","videoUrls","setVideoUrls","files","setFiles","progress","setProgress","handleChange","e","preventDefault","console","log","target","name","i","length","newImage","Math","random","prevState","handleVideoChange","handleNameChange","value","handleDescrptionChange","handleDestrictChange","handleSeferChange","handleTypeChange","handleFeeChange","handleSizeChange","handleAvailableChange","handleBedChange","updateHouse","housedata","houseId","config","header","res","axios","post","err","handleMultipleFileSubmit","id","formData","FormData","append","handleUpload","promises","uploadTaskTwo","ref","put","push","on","snapshot","round","bytesTransferred","totalBytes","error","urls","child","getDownloadURL","map","image","uploadTask","Promise","all","then","alert","catch","house","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAkBC,QAAlB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwCC,KAAxC,EAA+CC,OAA/C,QAA8D,mBAA9D;AACA,OAAOC,OAAP,MAAoB,gBAApB;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACyB,YAAD,EAAeC,eAAf,IAAkC1B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC2B,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAC6B,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC+B,SAAD,EAAYC,YAAZ,IAA4BhC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiC,KAAD,EAAQC,QAAR,IAAoBlC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmC,QAAD,EAAWC,WAAX,IAA0BpC,QAAQ,CAAC,CAAD,CAAxC;;AAEA,QAAMqC,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,MAAF,CAASC,IAArB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,CAAC,CAACI,MAAF,CAAST,KAAT,CAAeY,MAAnC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5C,YAAME,QAAQ,GAAGR,CAAC,CAACI,MAAF,CAAST,KAAT,CAAeW,CAAf,CAAjB;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR,GAAiBC,IAAI,CAACC,MAAL,EAAjB;AACAd,MAAAA,QAAQ,CAAEe,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeH,QAAf,CAAhB,CAAR;AACH;AACJ,GARD;;AASA,QAAMI,iBAAiB,GAAIZ,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,QAAQ,CAACU,CAAC,CAACI,MAAF,CAAST,KAAT,CAAe,CAAf,CAAD,CAAR;AAEH,GAJD;;AAKA,QAAMkB,gBAAgB,GAAIb,CAAD,IAAO;AAC5B5B,IAAAA,YAAY,CAAC4B,CAAC,CAACI,MAAF,CAASU,KAAV,CAAZ;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYhC,SAAZ;AACH,GAHD;;AAIA,QAAM4C,sBAAsB,GAAIf,CAAD,IAAO;AAClC1B,IAAAA,cAAc,CAAC0B,CAAC,CAACI,MAAF,CAASU,KAAV,CAAd;AACH,GAFD;;AAGA,QAAME,oBAAoB,GAAIhB,CAAD,IAAO;AAChCtB,IAAAA,WAAW,CAACsB,CAAC,CAACI,MAAF,CAASU,KAAV,CAAX;AACH,GAFD;;AAGA,QAAMG,iBAAiB,GAAIjB,CAAD,IAAO;AAC7BpB,IAAAA,QAAQ,CAACoB,CAAC,CAACI,MAAF,CAASU,KAAV,CAAR;AACH,GAFD;;AAGA,QAAMI,gBAAgB,GAAIlB,CAAD,IAAO;AAC5BZ,IAAAA,eAAe,CAACY,CAAC,CAACI,MAAF,CAASU,KAAV,CAAf;AACH,GAFD;;AAGA,QAAMK,eAAe,GAAInB,CAAD,IAAO;AAC3BlB,IAAAA,cAAc,CAACkB,CAAC,CAACI,MAAF,CAASU,KAAV,CAAd;AACH,GAFD;;AAGA,QAAMM,gBAAgB,GAAIpB,CAAD,IAAO;AAC5BhB,IAAAA,OAAO,CAACgB,CAAC,CAACI,MAAF,CAASU,KAAV,CAAP;AACH,GAFD;;AAGA,QAAMO,qBAAqB,GAAIrB,CAAD,IAAO;AACjCd,IAAAA,YAAY,CAACc,CAAC,CAACI,MAAF,CAASU,KAAV,CAAZ;AACH,GAFD;;AAGA,QAAMQ,eAAe,GAAItB,CAAD,IAAO;AAC3BxB,IAAAA,eAAe,CAACwB,CAAC,CAACI,MAAF,CAASU,KAAV,CAAf;AACH,GAFD;;AAGA,QAAMS,WAAW,GAAG,OAAOC,SAAP,EAAkBC,OAAlB,KAA8B;AAC9C,UAAMC,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAE;AACJ,wBAAgB;AADZ;AADG,KAAf;;AAKA,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,IAAN,CAAY,yCAAwCL,OAAQ,EAA5D,EAA+DD,SAA/D,EAA0EE,MAA1E,CAAlB;AACAxB,MAAAA,OAAO,CAACC,GAAR,CAAYyB,GAAZ;AACH,KAHD,CAGE,OAAOG,GAAP,EAAY;AACV7B,MAAAA,OAAO,CAACC,GAAR,CAAY4B,GAAZ;AACH;AACJ,GAZD;;AAaA,QAAMC,wBAAwB,GAAG,MAAOC,EAAP,IAAc;AAC3C,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BjE,SAA7B;AACA+D,IAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+B/D,WAA/B;AACA6D,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B3D,QAA5B;AACAyD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBzD,KAAzB;AACAuD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgC7D,YAAhC;AACA2D,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBrD,IAAxB;AACAmD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BvD,WAA/B;AACAqD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BnD,SAA7B;AACAiD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgCjD,YAAhC;AACA+C,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB3C,SAAzB;;AACA,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,SAAS,CAACgB,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC4B,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB7C,SAAS,CAACe,CAAD,CAAlC;AACH;;AAED,UAAMiB,WAAW,CAACW,QAAD,EAAWD,EAAX,CAAjB;AACA/B,IAAAA,OAAO,CAACC,GAAR,CAAY+B,QAAZ;AAEH,GAnBD;;AAoBA,QAAMG,YAAY,GAAG,MAAM;AACvB,UAAMC,QAAQ,GAAG,EAAjB;AACA,UAAMC,aAAa,GAAGtE,OAAO,CAACuE,GAAR,CAAa,UAASnD,KAAK,CAACgB,IAAK,EAAjC,EAAoCoC,GAApC,CAAwCpD,KAAxC,CAAtB;AACAiD,IAAAA,QAAQ,CAACI,IAAT,CAAcH,aAAd;AACAA,IAAAA,aAAa,CAACI,EAAd,CACI,eADJ,EAEKC,QAAD,IAAc;AACV,YAAM/C,QAAQ,GAAGY,IAAI,CAACoC,KAAL,CACZD,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GADvC,CAAjB;AAGAjD,MAAAA,WAAW,CAACD,QAAD,CAAX;AACH,KAPL,EAQKmD,KAAD,IAAW;AACP9C,MAAAA,OAAO,CAACC,GAAR,CAAY6C,KAAZ;AACH,KAVL,EAWI,YAAY;AACR,YAAMC,IAAI,GAAG,MAAMhF,OAAO,CAACuE,GAAR,CAAY,QAAZ,EAAsBU,KAAtB,CAA4B7D,KAAK,CAACgB,IAAlC,EAAwC8C,cAAxC,EAAnB;AACAzD,MAAAA,YAAY,CAAEiB,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAesC,IAAf,CAAhB,CAAZ;AACA/C,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC8C,IAApC;AAEH,KAhBL;AAoBAtD,IAAAA,KAAK,CAACyD,GAAN,CAAWC,KAAD,IAAW;AACjB,YAAMC,UAAU,GAAGrF,OAAO,CAACuE,GAAR,CAAa,UAASa,KAAK,CAAChD,IAAK,EAAjC,EAAoCoC,GAApC,CAAwCY,KAAxC,CAAnB;AACAf,MAAAA,QAAQ,CAACI,IAAT,CAAcY,UAAd;AACAA,MAAAA,UAAU,CAACX,EAAX,CACI,eADJ,EAEKC,QAAD,IAAc;AACV,cAAM/C,QAAQ,GAAGY,IAAI,CAACoC,KAAL,CACZD,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GADvC,CAAjB;AAGAjD,QAAAA,WAAW,CAACD,QAAD,CAAX;AACH,OAPL,EAQKmD,KAAD,IAAW;AACP9C,QAAAA,OAAO,CAACC,GAAR,CAAY6C,KAAZ;AACH,OAVL,EAWI,YAAY;AACR,cAAMC,IAAI,GAAG,MAAMhF,OAAO,CAACuE,GAAR,CAAY,QAAZ,EAAsBU,KAAtB,CAA4BG,KAAK,CAAChD,IAAlC,EAAwC8C,cAAxC,EAAnB;AACA3D,QAAAA,YAAY,CAAEmB,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAesC,IAAf,CAAhB,CAAZ;AACA/C,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC8C,IAApC;AAEH,OAhBL;AAmBH,KAtBD;AAuBAM,IAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAZ,EACKmB,IADL,CAEQ,MAAMC,KAAK,CAAC,qBAAD,CAFnB,EAGMD,IAHN,GAIKE,KAJL,CAIY5B,GAAD,IAAS7B,OAAO,CAACC,GAAR,CAAY4B,GAAZ,CAJpB;AAMH,GArDD;;AAuDA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,SAAS,EAAC,QAAvB;AAAA,+BACI,QAAC,IAAD;AAAA,iCACI,QAAC,OAAD;AAAS,YAAA,MAAM,MAAf;AAAA,oCACI,QAAC,QAAD;AAAU,cAAA,OAAO,EAAElC,QAAnB;AAA6B,cAAA,OAAO,MAApC;AAAqC,cAAA,QAAQ;AAA7C;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,QAAQ,MADZ;AAEI,cAAA,EAAE,EAAC,8BAFP;AAGI,cAAA,OAAO,EAAE9B,KAHb;AAII,cAAA,IAAI,EAAC,WAJT;AAKI,cAAA,IAAI,EAAC,MALT;AAMI,cAAA,KAAK,EAAC,YANV;AAOI,cAAA,WAAW,EAAC,YAPhB;AAQI,cAAA,QAAQ,EAAE8C;AARd;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAYI,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,QAAQ,MADZ;AAEI,cAAA,EAAE,EAAC,eAFP;AAGI,cAAA,OAAO,EAAE9C,KAHb;AAII,cAAA,KAAK,EAAC,eAJV;AAKI,cAAA,IAAI,EAAC,cALT;AAMI,cAAA,WAAW,EAAC,eANhB;AAOI,cAAA,QAAQ,EAAEmD;AAPd;AAAA;AAAA;AAAA;AAAA,oBAZJ,eAsBI,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,QAAQ,MADZ;AAEI,cAAA,EAAE,EAAC,UAFP;AAGI,cAAA,OAAO,EAAEnD,KAHb;AAII,cAAA,KAAK,EAAC,UAJV;AAKI,cAAA,IAAI,EAAC,UALT;AAMI,cAAA,WAAW,EAAC,sBANhB;AAOI,cAAA,QAAQ,EAAEiD;AAPd;AAAA;AAAA;AAAA;AAAA,oBAtBJ,eA+BI,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,QAAQ,MADZ;AAEI,cAAA,EAAE,EAAC,8BAFP;AAGI,cAAA,OAAO,EAAEjD,KAHb;AAII,cAAA,KAAK,EAAC,OAJV;AAKI,cAAA,IAAI,EAAC,OALT;AAMI,cAAA,WAAW,EAAC,kBANhB;AAOI,cAAA,QAAQ,EAAEkD;AAPd;AAAA;AAAA;AAAA;AAAA,oBA/BJ,eAwCI,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,QAAQ,MADZ;AAEI,cAAA,EAAE,EAAC,8BAFP;AAGI,cAAA,OAAO,EAAEtD,QAHb;AAII,cAAA,KAAK,EAAC,aAJV;AAKI,cAAA,IAAI,EAAC,aALT;AAMI,cAAA,WAAW,EAAC,mBANhB;AAOI,cAAA,QAAQ,EAAEoD;AAPd;AAAA;AAAA;AAAA;AAAA,oBAxCJ,eAkDI,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,QAAQ,MADZ;AAEI,cAAA,EAAE,EAAC,8BAFP;AAGI,cAAA,OAAO,EAAEhD,KAHb;AAII,cAAA,IAAI,EAAC,QAJT;AAKI,cAAA,IAAI,EAAC,MALT;AAMI,cAAA,KAAK,EAAC,gBANV;AAOI,cAAA,WAAW,EAAC,iBAPhB;AAQI,cAAA,QAAQ,EAAEqD,gBARd;AASI,cAAA,KAAK,EAAErC;AATX;AAAA;AAAA;AAAA;AAAA,oBAlDJ,eA6DI,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,QAAQ,MADZ;AAEI,cAAA,EAAE,EAAC,8BAFP;AAGI,cAAA,OAAO,EAAEhB,KAHb;AAII,cAAA,IAAI,EAAC,QAJT;AAKI,cAAA,IAAI,EAAC,aALT;AAMI,cAAA,KAAK,EAAC,WANV;AAOI,cAAA,WAAW,EAAC,KAPhB;AAQI,cAAA,QAAQ,EAAEoD;AARd;AAAA;AAAA;AAAA;AAAA,oBA7DJ,eAuEI,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,QAAQ,MADZ;AAEI,cAAA,EAAE,EAAC,8BAFP;AAGI,cAAA,OAAO,EAAEpD,KAHb;AAII,cAAA,IAAI,EAAC,QAJT;AAKI,cAAA,IAAI,EAAC,cALT;AAMI,cAAA,KAAK,EAAC,gBANV;AAOI,cAAA,WAAW,EAAC,MAPhB;AAQI,cAAA,QAAQ,EAAEuD;AARd;AAAA;AAAA;AAAA;AAAA,oBAvEJ,eAiFI,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,QAAQ,MADZ;AAEI,cAAA,OAAO,EAAEvD,KAFb;AAGI,cAAA,IAAI,EAAC,MAHT;AAII,cAAA,IAAI,EAAC,OAJT;AAKI,cAAA,QAAQ,MALZ;AAMI,cAAA,KAAK,EAAC,qBANV;AAOI,cAAA,IAAI,EAAC,QAPT;AAQI,cAAA,QAAQ,EAAEgC;AARd;AAAA;AAAA;AAAA;AAAA,oBAjFJ,eA2FI,QAAC,IAAD,CAAM,KAAN;AACI,cAAA,QAAQ,MADZ;AAEI,cAAA,EAAE,EAAC,8BAFP;AAGI,cAAA,OAAO,EAAEhC,KAHb;AAII,cAAA,IAAI,EAAC,MAJT;AAKI,cAAA,IAAI,EAAC,OALT;AAMI,cAAA,KAAK,EAAC,wBANV;AAOI,cAAA,QAAQ,EAAE6C;AAPd;AAAA;AAAA;AAAA;AAAA,oBA3FJ,eAsGI;AAAQ,cAAA,IAAI,EAAC,WAAb;AAAyB,cAAA,EAAE,EAAC,WAA5B;AAAwC,cAAA,QAAQ,EAAES,qBAAlD;AAAA,sCACI;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAQ,gBAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtGJ,eA0GI;AAAQ,cAAA,OAAO,EAAEgB,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA1GJ,eA2GI;AAAQ,cAAA,OAAO,EAAE,MAAML,wBAAwB,CAAC4B,KAAK,CAACC,GAAP,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3GJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyHH,CA3QD;;GAAM3F,S;;KAAAA,S;AA6QN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport { TextArea,Progress, Form, Grid, Input, Segment } from 'semantic-ui-react'\nimport storage from \"../../firebase\"\nconst EditHouse = () => {\n    const [housename, setHousename] = useState('')\n    const [description, setDescription] = useState('')\n    const [numberofbeds, setNumberOfBeds] = useState(0)\n    const [district, setDistrict] = useState('')\n    const [sefer, setSefer] = useState('')\n    const [feepermonth, setFeeperMonth] = useState(0)\n    const [size, setSize] = useState(0)\n    const [available, setAvailable] = useState(false)\n    const [propertytype, setPropertytype] = useState('')\n    const [video, setVideo] = useState(null)\n    const [imageUrls, setImageUrls] = useState([]);\n    const [videoUrls, setVideoUrls] = useState([]);\n    const [files, setFiles] = useState([]);\n    const [progress, setProgress] = useState(0);\n\n    const handleChange = (e) => {\n        e.preventDefault()\n        console.log(e.target.name)\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i];\n            newImage[\"id\"] = Math.random();\n            setFiles((prevState) => [...prevState, newImage]);\n        }\n    };\n    const handleVideoChange = (e) => {\n        e.preventDefault()\n        setVideo(e.target.files[0])\n\n    }\n    const handleNameChange = (e) => {\n        setHousename(e.target.value)\n        console.log(housename)\n    }\n    const handleDescrptionChange = (e) => {\n        setDescription(e.target.value)\n    }\n    const handleDestrictChange = (e) => {\n        setDistrict(e.target.value)\n    }\n    const handleSeferChange = (e) => {\n        setSefer(e.target.value)\n    }\n    const handleTypeChange = (e) => {\n        setPropertytype(e.target.value)\n    }\n    const handleFeeChange = (e) => {\n        setFeeperMonth(e.target.value)\n    }\n    const handleSizeChange = (e) => {\n        setSize(e.target.value)\n    }\n    const handleAvailableChange = (e) => {\n        setAvailable(e.target.value)\n    }\n    const handleBedChange = (e) => {\n        setNumberOfBeds(e.target.value)\n    }\n    const updateHouse = async (housedata, houseId) => {\n        const config = {\n            header: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n        try {\n            const res = await axios.post(`http://localhost:5000/api/updateHouse/${houseId}`, housedata, config);\n            console.log(res)\n        } catch (err) {\n            console.log(err)\n        }\n    };\n    const handleMultipleFileSubmit = async (id) => {\n        const formData = new FormData();\n        formData.append('housename', housename);\n        formData.append('description', description);\n        formData.append('district', district);\n        formData.append('sefer', sefer);\n        formData.append('numberofbeds', numberofbeds);\n        formData.append('size', size);\n        formData.append('feepermonth', feepermonth);\n        formData.append('available', available);\n        formData.append('propertytype', propertytype);\n        formData.append('video', videoUrls);\n        for (let i = 0; i < imageUrls.length; i++) {\n            formData.append('files', imageUrls[i]);\n        }\n\n        await updateHouse(formData, id);\n        console.log(formData)\n\n    }\n    const handleUpload = () => {\n        const promises = [];\n        const uploadTaskTwo = storage.ref(`images/${video.name}`).put(video)\n        promises.push(uploadTaskTwo);\n        uploadTaskTwo.on(\n            \"state_changed\",\n            (snapshot) => {\n                const progress = Math.round(\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                );\n                setProgress(progress);\n            },\n            (error) => {\n                console.log(error);\n            },\n            async () => {\n                const urls = await storage.ref(\"images\").child(video.name).getDownloadURL()\n                setVideoUrls((prevState) => [...prevState, urls]);\n                console.log(\"this is a video part\", urls)\n\n            }\n\n        )\n\n        files.map((image) => {\n            const uploadTask = storage.ref(`images/${image.name}`).put(image);\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    const urls = await storage.ref(\"images\").child(image.name).getDownloadURL();\n                    setImageUrls((prevState) => [...prevState, urls]);\n                    console.log(\"this is a iamge part\", urls)\n\n                }\n            );\n\n        });\n        Promise.all(promises)\n            .then(\n                () => alert(\"All images uploaded\")\n            ).then()\n            .catch((err) => console.log(err));\n\n    };\n\n    return (\n        <div>\n            <Grid>\n                <Grid.Column textAlign='center'>\n                    <Form>\n                        <Segment raised >\n                            <Progress percent={progress} success progress />\n                            <Form.Field\n                                required\n                                id='form-input-control-last-name'\n                                control={Input}\n                                name='housename'\n                                type='text'\n                                label='House Name'\n                                placeholder='house name'\n                                onChange={handleNameChange}\n                            />\n                            <Form.Field\n                                required\n                                id='property type'\n                                control={Input}\n                                label='Property Type'\n                                name='propertytype'\n                                placeholder='property type'\n                                onChange={handleTypeChange}\n                            />\n\n                            <Form.Field\n                                required\n                                id='district'\n                                control={Input}\n                                label='District'\n                                name='district'\n                                placeholder='District or Sub City'\n                                onChange={handleDestrictChange}\n                            />\n                            <Form.Field\n                                required\n                                id='form-input-control-last-name'\n                                control={Input}\n                                label='Sefer'\n                                name='sefer'\n                                placeholder='Sefer or Village'\n                                onChange={handleSeferChange}\n                            />\n                            <Form.Field\n                                required\n                                id='form-input-control-last-name'\n                                control={TextArea}\n                                label='Description'\n                                name='description'\n                                placeholder='House description'\n                                onChange={handleDescrptionChange}\n\n                            />\n                            <Form.Field\n                                required\n                                id='form-input-control-last-name'\n                                control={Input}\n                                type=\"number\"\n                                name='size'\n                                label='Square Footage'\n                                placeholder='Size of a house'\n                                onChange={handleSizeChange}\n                                value={size}\n                            />\n                            <Form.Field\n                                required\n                                id='form-input-control-last-name'\n                                control={Input}\n                                type=\"number\"\n                                name='feepermonth'\n                                label='Lease Fee'\n                                placeholder='Fee'\n                                onChange={handleFeeChange}\n                            />\n                            <Form.Field\n                                required\n                                id='form-input-control-last-name'\n                                control={Input}\n                                type=\"number\"\n                                name='numberofbeds'\n                                label='Number of Beds'\n                                placeholder='beds'\n                                onChange={handleBedChange}\n                            />\n                            <Form.Field\n                                required\n                                control={Input}\n                                type=\"file\"\n                                name=\"files\"\n                                multiple\n                                label='Photos of the House'\n                                icon='upload'\n                                onChange={handleChange}\n                            />\n                            <Form.Field\n                                required\n                                id='form-input-control-last-name'\n                                control={Input}\n                                type=\"file\"\n                                name=\"video\"\n                                label='Videos about the house'\n                                onChange={handleVideoChange}\n\n                            />\n\n                            <select name=\"available\" id=\"available\" onChange={handleAvailableChange}>\n                                <option value=\"false\">No</option>\n                                <option value=\"true\">Yes</option>\n                            </select>\n                            <button onClick={handleUpload}>confirm Update</button>\n                            <button onClick={() => handleMultipleFileSubmit(house._id)}>Update</button>\n\n                        </Segment>\n                    </Form>\n                </Grid.Column>\n\n            </Grid>\n        </div>\n    )\n}\n\nexport default EditHouse\n"]},"metadata":{},"sourceType":"module"}