{"ast":null,"code":"var _jsxFileName = \"/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/SwiperSlider.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { createRef, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, Container, Form, Grid, GridColumn, Image, Ref, Segment, Sticky } from 'semantic-ui-react';\nimport SwiperCore, { Navigation, Pagination, Scrollbar } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper-bundle.css';\nimport HousesLocation from '../maps/HousesLocation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSwiperCore.use([Navigation, Pagination, Scrollbar]);\n\nconst SwiperSlider = () => {\n  _s();\n\n  const contextRef = /*#__PURE__*/createRef();\n  const [multipleFiles, setMultipleFiles] = useState([]);\n\n  const getMultipleFiles = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/getMultipleFiles');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const getMultipleFilesList = async () => {\n    try {\n      const fileslist = await getMultipleFiles();\n      setMultipleFiles(fileslist);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getMultipleFilesList(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Ref, {\n      innerRef: contextRef,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          columns: \"2\",\n          style: {\n            padding: \"0px\",\n            margin: \"0px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(GridColumn, {\n            style: {\n              padding: \"0px\",\n              margin: \"0px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                widths: \"equal\",\n                children: /*#__PURE__*/_jsxDEV(Form.Input, {\n                  type: \"search\",\n                  placeholder: \"Search...\",\n                  action: {\n                    icon: 'search'\n                  }\n                  /* defaultValue={this.state.value}\n                  onChange={this.handleInputChange} \n                  */\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              columns: 2,\n              style: {\n                padding: \"0px\",\n                margin: \"0px\",\n                width: \"70vw\"\n              },\n              children: multipleFiles.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  style: {\n                    height: \"350px\",\n                    width: \"308px\",\n                    margin: \"5px 0px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                    style: {\n                      padding: \"0px\",\n                      margin: \"0px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Swiper, {\n                      slidesPerView: 1,\n                      navigation: true,\n                      pagination: {\n                        clickable: true\n                      },\n                      scrollbar: {\n                        draggable: true\n                      },\n                      children: element.files.map((url, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n                        style: {\n                          height: \"250px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Link, {\n                          to: `/houseDetails/${element._id}`,\n                          children: /*#__PURE__*/_jsxDEV(Image, {\n                            src: url,\n                            alt: \"img\",\n                            style: {\n                              objectFit: \"cover\"\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 83,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 82,\n                          columnNumber: 31\n                        }, this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                      children: \"Matthew\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                      children: element.housename\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                      children: [element.district, \",\", element.sefer]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this)\n              }, element._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n            children: /*#__PURE__*/_jsxDEV(Sticky, {\n              context: contextRef,\n              offset: 60,\n              children: /*#__PURE__*/_jsxDEV(HousesLocation, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SwiperSlider, \"u4DBbpEWmX/78AfZEp0xEXPkVU8=\");\n\n_c = SwiperSlider;\nexport default SwiperSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwiperSlider\");","map":{"version":3,"sources":["/home/yohannis/Desktop/Final-Project OHR/client/src/components/screen/SwiperSlider.js"],"names":["axios","React","createRef","useEffect","useState","Link","Card","CardContent","Container","Form","Grid","GridColumn","Image","Ref","Segment","Sticky","SwiperCore","Navigation","Pagination","Scrollbar","Swiper","SwiperSlide","HousesLocation","use","SwiperSlider","contextRef","multipleFiles","setMultipleFiles","getMultipleFiles","data","get","error","getMultipleFilesList","fileslist","console","log","padding","margin","icon","width","map","element","index","height","clickable","draggable","files","url","_id","objectFit","housename","district","sefer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,IAAvC,EAA6CC,IAA7C,EAAmDC,UAAnD,EAA+DC,KAA/D,EAAsEC,GAAtE,EAA2EC,OAA3E,EAAoFC,MAApF,QAAkG,mBAAlG;AACA,OAAOC,UAAP,IAAqBC,UAArB,EAAiCC,UAAjC,EAA6CC,SAA7C,QAA8D,QAA9D;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AACA,OAAO,0BAAP;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;AAEAN,UAAU,CAACO,GAAX,CAAe,CAACN,UAAD,EAAaC,UAAb,EAAyBC,SAAzB,CAAf;;AACA,MAAMK,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,UAAU,gBAAGvB,SAAS,EAA5B;AAEA,QAAM,CAACwB,aAAD,EAAgBC,gBAAhB,IAAoCvB,QAAQ,CAAC,EAAD,CAAlD;;AACA,QAAMwB,gBAAgB,GAAG,YAAY;AACnC,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAM7B,KAAK,CAAC8B,GAAN,CAAU,4CAAV,CAAvB;AACA,aAAOD,IAAP;AACD,KAHD,CAGE,OAAOE,KAAP,EAAc;AACd,YAAMA,KAAN;AACD;AACF,GAPD;;AAQA,QAAMC,oBAAoB,GAAG,YAAY;AACvC,QAAI;AACF,YAAMC,SAAS,GAAG,MAAML,gBAAgB,EAAxC;AACAD,MAAAA,gBAAgB,CAACM,SAAD,CAAhB;AACD,KAHD,CAGE,OAAOF,KAAP,EAAc;AACdG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD;AACF,GAPD;;AAQA5B,EAAAA,SAAS,CAAC,MAAM;AACd6B,IAAAA,oBAAoB,GADN,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAEP,UAAf;AAAA,6BAEE,QAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,OAAO,EAAC,GAAd;AAAkB,UAAA,KAAK,EAAE;AAAEW,YAAAA,OAAO,EAAE,KAAX;AAAkBC,YAAAA,MAAM,EAAE;AAA1B,WAAzB;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAE;AAAED,cAAAA,OAAO,EAAE,KAAX;AAAkBC,cAAAA,MAAM,EAAE;AAA1B,aAAnB;AAAA,oCACA,QAAC,IAAD;AAAA,qCACE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,MAAM,EAAC,OAAnB;AAAA,uCAEI,QAAC,IAAD,CAAM,KAAN;AACE,kBAAA,IAAI,EAAC,QADP;AACgB,kBAAA,WAAW,EAAC,WAD5B;AAEE,kBAAA,MAAM,EAAE;AACNC,oBAAAA,IAAI,EAAE;AADA;AAKV;AAClB;AACA;;AATkB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADA,eAkBE,QAAC,IAAD;AAAM,cAAA,OAAO,EAAE,CAAf;AAAkB,cAAA,KAAK,EAAE;AAAEF,gBAAAA,OAAO,EAAE,KAAX;AAAkBC,gBAAAA,MAAM,EAAE,KAA1B;AAAiCE,gBAAAA,KAAK,EAAE;AAAxC,eAAzB;AAAA,wBACGb,aAAa,CAACc,GAAd,CAAkB,CAACC,OAAD,EAAUC,KAAV,kBAEjB;AAAA,uCACE,QAAC,IAAD;AACE,kBAAA,KAAK,EAAE;AACLC,oBAAAA,MAAM,EAAE,OADH;AAELJ,oBAAAA,KAAK,EAAE,OAFF;AAGLF,oBAAAA,MAAM,EAAE;AAHH,mBADT;AAAA,0CAOE,QAAC,IAAD,CAAM,MAAN;AAAa,oBAAA,KAAK,EAAE;AAAED,sBAAAA,OAAO,EAAE,KAAX;AAAkBC,sBAAAA,MAAM,EAAE;AAA1B,qBAApB;AAAA,2CACE,QAAC,MAAD;AACE,sBAAA,aAAa,EAAE,CADjB;AAEE,sBAAA,UAAU,MAFZ;AAGE,sBAAA,UAAU,EAAE;AAAEO,wBAAAA,SAAS,EAAE;AAAb,uBAHd;AAIE,sBAAA,SAAS,EAAE;AAAEC,wBAAAA,SAAS,EAAE;AAAb,uBAJb;AAAA,gCAMGJ,OAAO,CAACK,KAAR,CAAcN,GAAd,CAAkB,CAACO,GAAD,EAAML,KAAN,kBAEjB,QAAC,WAAD;AACE,wBAAA,KAAK,EAAE;AAAEC,0BAAAA,MAAM,EAAE;AAAV,yBADT;AAAA,+CAGE,QAAC,IAAD;AAAM,0BAAA,EAAE,EAAG,iBAAgBF,OAAO,CAACO,GAAI,EAAvC;AAAA,iDACE,QAAC,KAAD;AAAO,4BAAA,GAAG,EAAED,GAAZ;AAAiB,4BAAA,GAAG,EAAC,KAArB;AACE,4BAAA,KAAK,EAAE;AAELE,8BAAAA,SAAS,EAAE;AAFN;AADT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF,yBAAkBP,KAAlB;AAAA;AAAA;AAAA;AAAA,8BAFD;AANH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAPF,eAgCE,QAAC,WAAD;AAAA,4CACE,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,gCACGD,OAAO,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,4BAFF,eAKE,QAAC,IAAD,CAAM,WAAN;AAAA,iCAGIT,OAAO,CAACU,QAHZ,OAKGV,OAAO,CAACW,KALX;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF;AAAA;AAAA;AAAA;AAAA;AAAA,0BAhCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,iBAAUX,OAAO,CAACO,GAAlB;AAAA;AAAA;AAAA;AAAA,sBAFD;AADH;AAAA;AAAA;AAAA;AAAA,oBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA4EE,QAAC,UAAD;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAEvB,UAAjB;AAA6B,cAAA,MAAM,EAAE,EAArC;AAAA,qCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA5EF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8FD,CAtHD;;GAAMD,Y;;KAAAA,Y;AAwHN,eAAeA,YAAf","sourcesContent":["import axios from 'axios';\nimport React, { createRef, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, Container, Form, Grid, GridColumn, Image, Ref, Segment, Sticky } from 'semantic-ui-react';\nimport SwiperCore, { Navigation, Pagination, Scrollbar } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper-bundle.css';\nimport HousesLocation from '../maps/HousesLocation';\n\nSwiperCore.use([Navigation, Pagination, Scrollbar]);\nconst SwiperSlider = () => {\n  const contextRef = createRef()\n\n  const [multipleFiles, setMultipleFiles] = useState([]);\n  const getMultipleFiles = async () => {\n    try {\n      const { data } = await axios.get('http://localhost:5000/api/getMultipleFiles');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  const getMultipleFilesList = async () => {\n    try {\n      const fileslist = await getMultipleFiles();\n      setMultipleFiles(fileslist);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    getMultipleFilesList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <div >\n      <Ref innerRef={contextRef}>\n\n        <Container fluid >\n          <Grid columns='2' style={{ padding: \"0px\", margin: \"0px\" }}>\n            <GridColumn style={{ padding: \"0px\", margin: \"0px\" }}>\n            <Form>\n              <Form.Group widths='equal'>\n                \n                  <Form.Input\n                    type='search' placeholder='Search...'\n                    action={{\n                      icon: 'search',\n                      \n                      \n                    }}\n                  /* defaultValue={this.state.value}\n                  onChange={this.handleInputChange} \n                 */\n                  />\n                \n              </Form.Group>\n            </Form>\n              <Grid columns={2} style={{ padding: \"0px\", margin: \"0px\", width: \"70vw\" }}>\n                {multipleFiles.map((element, index) =>\n\n                  <div key={element._id} >\n                    <Card\n                      style={{\n                        height: \"350px\",\n                        width: \"308px\",\n                        margin: \"5px 0px\",\n                      }}\n                    >\n                      <Grid.Column style={{ padding: \"0px\", margin: \"0px\" }}>\n                        <Swiper\n                          slidesPerView={1}\n                          navigation\n                          pagination={{ clickable: true }}\n                          scrollbar={{ draggable: true }}\n                        >\n                          {element.files.map((url, index) =>\n\n                            <SwiperSlide key={index}\n                              style={{ height: \"250px\" }}\n                            >\n                              <Link to={`/houseDetails/${element._id}`}>\n                                <Image src={url} alt=\"img\"\n                                  style={{\n\n                                    objectFit: \"cover\"\n                                  }}\n                                />\n                              </Link>\n                            </SwiperSlide>\n\n                          )}\n                        </Swiper>\n                      </Grid.Column>\n                      <CardContent>\n                        <Card.Header>Matthew</Card.Header>\n                        <Card.Meta>\n                          {element.housename}\n                        </Card.Meta>\n                        <Card.Description>\n\n                          {\n                            element.district\n                          },\n                          {element.sefer}\n                        </Card.Description>\n                      </CardContent>\n\n                    </Card>\n                  </div>\n\n                )}\n\n              </Grid>\n            </GridColumn>\n            <GridColumn>\n              <Sticky context={contextRef} offset={60}>\n                <HousesLocation />\n              </Sticky>\n\n            </GridColumn>\n          </Grid>\n        </Container>\n      </Ref>\n\n\n    </div>\n  )\n}\n\nexport default SwiperSlider\n"]},"metadata":{},"sourceType":"module"}