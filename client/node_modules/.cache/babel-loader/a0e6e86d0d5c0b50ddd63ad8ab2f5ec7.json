{"ast":null,"code":"var _jsxFileName = \"/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SendAppointment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Header, Button, Grid, Form, Input, Segment, TextArea, Divider } from 'semantic-ui-react';\nimport Datetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SendAppointment = () => {\n  _s();\n\n  let params = useParams();\n  const houseid = params.id;\n  const [tenantEmail, setTenantEmail] = useState(\"\");\n  const [appointmentletter, setLetter] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n\n  const getSpecificRequestedHouse = async e => {\n    try {\n      const house = await axios.get('http://localhost:5000/admin/gethouserequestbyid/6150965002e168204caceb3c');\n    } catch (error) {}\n  };\n\n  const sendEmail = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const {\n        data\n      } = await axios.post(\"http://localhost:5000/admin/sendappointment\", {\n        tenantEmail,\n        appointmentletter,\n        date\n      }, config);\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      alignContent: \"center\",\n      margin: \"100px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      textAlign: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 7,\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          stacked: true,\n          style: {\n            backgroundColor: \"lightGray\"\n          },\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                required: true,\n                id: \"email\",\n                placeholder: \"Email address\",\n                value: tenantEmail,\n                onChange: e => setTenantEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                required: true,\n                id: \"letter\",\n                placeholder: \"appointment letter\",\n                value: appointmentletter,\n                onChange: e => setLetter(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Datetime, {\n                value: date,\n                onChange: e => setDate(e, date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 9\n            }, this), JSON.stringify({\n              date\n            }), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: sendEmail,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SendAppointment, \"N0xsb4e3a0OQY5PSJ/BOJOJv57w=\", false, function () {\n  return [useParams];\n});\n\n_c = SendAppointment;\nexport default SendAppointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendAppointment\");","map":{"version":3,"sources":["/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SendAppointment.js"],"names":["React","useState","Header","Button","Grid","Form","Input","Segment","TextArea","Divider","Datetime","axios","useParams","SendAppointment","params","houseid","id","tenantEmail","setTenantEmail","appointmentletter","setLetter","date","setDate","Date","getSpecificRequestedHouse","e","house","get","error","sendEmail","preventDefault","config","header","data","post","console","log","alignContent","margin","backgroundColor","target","value","JSON","stringify"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { Header, Button, Grid, Form, Input, Segment, TextArea, Divider } from 'semantic-ui-react';\nimport Datetime from 'react-datetime'\nimport \"react-datetime/css/react-datetime.css\";\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nconst SendAppointment = () => {\n    let params = useParams()\n    const houseid = params.id\n    const [tenantEmail, setTenantEmail] = useState(\"\")\n    const [appointmentletter, setLetter] = useState(\"\")\n    const [date, setDate] = useState(new Date())\n\n    const getSpecificRequestedHouse = async (e)=>{\n      try {\n        const house = await axios.get('http://localhost:5000/admin/gethouserequestbyid/6150965002e168204caceb3c')\n      } catch (error) {\n        \n      }\n    }\n    const sendEmail = async (e) => {\n        e.preventDefault();\n    \n        const config = {\n          header: {\n            \"Content-Type\": \"application/json\",\n          },\n        };\n    \n        try {\n          const { data } = await axios.post(\n            \"http://localhost:5000/admin/sendappointment\",\n            { tenantEmail,appointmentletter,date},\n            config\n          );\n         console.log(data)\n    \n        } catch (error) {\n        console.log(error)\n        }\n      };\n    return (\n        <div style={{ alignContent: \"center\", margin: \"100px\" }}>\n\n            <Grid textAlign='center'>\n                <Grid.Column width={7}>\n\n                    <Segment stacked style={{ backgroundColor: \"lightGray\" }} textAlign='center'>\n                    <Form>\n        \n        <Form.Field>\n        <label>email</label>\n          <input\n            type=\"email\"\n            required\n            id=\"email\"\n            placeholder=\"Email address\"\n            value={tenantEmail}\n            onChange={(e) => setTenantEmail(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>email</label>\n          <input\n            type=\"text\"\n            required\n            id=\"letter\"\n            placeholder=\"appointment letter\"\n            value={appointmentletter}\n            onChange={(e) => setLetter(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n        <label>Date</label>\n        <Datetime \n        value={date}\n        onChange={e=>setDate(e,date)}\n        />\n        </Form.Field>\n        \n  {\n      JSON.stringify({date})\n  }\n        <Button onClick={sendEmail}>Submit</Button>\n    </Form>\n                    </Segment>\n                </Grid.Column>\n\n\n            </Grid>\n        </div>\n    )\n}\n\nexport default SendAppointment\n"]},"metadata":{},"sourceType":"module"}