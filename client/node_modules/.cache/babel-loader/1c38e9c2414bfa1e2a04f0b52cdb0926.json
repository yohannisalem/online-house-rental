{"ast":null,"code":"var _jsxFileName = \"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  let history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    if (localStorage.getItem(\"authToken\")) {\n      history.push(\"/\");\n    }\n  }, [history]);\n\n  const loginHandler = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const {\n        data\n      } = await axios.post(\"http://localhost:5000/api/auth/login\", {\n        email,\n        password\n      }, config);\n      setUser(data);\n      localStorage.setItem(\"authToken\", data.token);\n      localStorage.setItem(\"username\", data.username);\n      localStorage.setItem(\"userid\", data.id);\n      history.push(\"/\");\n    } catch (error) {\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-screen\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          color: \"teal\",\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: \"/logo.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this), \" Log-in to your account\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          size: \"large\",\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            stacked: true,\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              icon: \"user\",\n              iconPosition: \"left\",\n              type: \"email\",\n              required: true,\n              id: \"email\",\n              placeholder: \"Email address\",\n              onChange: e => setEmail(e.target.value),\n              value: email,\n              tabIndex: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: [\"Password:\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/forgotpassword\",\n                className: \"login-screen__forgotpassword\",\n                children: \"Forgot Password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              icon: \"lock\",\n              iconPosition: \"left\",\n              type: \"password\",\n              required: true,\n              id: \"password\",\n              autoComplete: \"true\",\n              placeholder: \"Enter password\",\n              onChange: e => setPassword(e.target.value),\n              value: password,\n              tabIndex: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: loginHandler,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Message, {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"HF1uM834xfbljd6oec6PSFzNN9I=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/Login.js"],"names":["React","useState","useEffect","axios","Link","useHistory","Button","Form","Grid","Header","Image","Message","Segment","Login","history","email","setEmail","password","setPassword","error","setError","user","setUser","localStorage","getItem","push","loginHandler","e","preventDefault","config","header","data","post","setItem","token","username","id","setTimeout","height","maxWidth","target","value"],"mappings":"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","sourcesContent":["import React, {useState,useEffect}from 'react'\nimport axios from \"axios\";\nimport { Link,useHistory} from \"react-router-dom\";\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\n\nconst Login = () => {\n  let history = useHistory()\n    const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [user,setUser] =useState({})\n\n useEffect(() => {\n    if (localStorage.getItem(\"authToken\")) {\n      history.push(\"/\");\n    }\n  }, [history]); \n\n  const loginHandler = async (e) => {\n    e.preventDefault();\n\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      const { data } = await axios.post(\n        \"http://localhost:5000/api/auth/login\",\n        { email, password },\n        config\n      );\n      setUser(data)\n\n     localStorage.setItem(\"authToken\", data.token);\n     localStorage.setItem(\"username\",data.username)\n     localStorage.setItem(\"userid\",data.id)\n     history.push(\"/\");\n    } catch (error) {\n      \n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n  \n  return (\n    <div className=\"login-screen\">\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n    <Grid.Column style={{ maxWidth: 450 }}>\n      <Header as='h2' color='teal' textAlign='center'>\n        <Image src='/logo.png' /> Log-in to your account\n      </Header>\n      {error && <span className=\"error-message\">{error}</span>}\n      <Form size='large'>\n        <Segment stacked>\n          <Form.Input fluid icon='user' iconPosition='left' type=\"email\"\n            required\n            id=\"email\"\n            placeholder=\"Email address\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n            tabIndex={1}\n             />\n             <label htmlFor=\"password\">\n            Password:{\" \"}\n            <Link to=\"/forgotpassword\" className=\"login-screen__forgotpassword\">\n              Forgot Password?\n            </Link>\n          </label>\n          <Form.Input\n            fluid\n            icon='lock'\n            iconPosition='left'\n            type=\"password\"\n            required\n            id=\"password\"\n            autoComplete=\"true\"\n            placeholder=\"Enter password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n            tabIndex={2}\n          />\n\n          <Button onClick={loginHandler}>Login</Button>\n        </Segment>\n      </Form>\n      <Message>\n        Don't have an account? <Link to=\"/register\">Register</Link>\n      </Message>\n    </Grid.Column>\n  </Grid>\n       \n    </div>\n  );\n}\n\nexport default Login\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}