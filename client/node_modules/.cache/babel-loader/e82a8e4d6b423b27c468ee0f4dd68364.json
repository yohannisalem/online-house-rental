{"ast":null,"code":"var _jsxFileName = \"/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SendAppointment.js\";\nimport React from 'react';\nimport { Header, Button, Grid, Form, Input, Segment, TextArea, Divider } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SendAppointment = () => {\n  const publicVapidKey = 'BMffGk0gRxLPOSi-eOlXoR1ahY9Ce7uBY3010C06TeMoRYS_6n1A4ItVeOeNYutDlhPK27WW5UMrdyjBEj_-Pxo'; //register the service worker, register our push api, sedn the notifation\n\n  async function send() {\n    //register service worker\n    const register = await navigator.serviceWorker.register('/sw.js', {\n      scope: '/'\n    }); //register push\n\n    console.log('Registering push...');\n    const subscription = await register.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n    }); //Send push notification\n\n    await fetch(\"http://localhost:5000/api/subscribe\", {\n      method: \"POST\",\n      body: JSON.stringify(subscription),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n  }\n\n  function urlBase64ToUint8Array(base64String) {\n    const padding = \"=\".repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\");\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n\n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n\n    return outputArray;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      alignContent: \"center\",\n      margin: \"150px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"hello the landlord appointed you\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      textAlign: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 5,\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          stacked: true,\n          style: {\n            backgroundColor: \"lightGray\"\n          },\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            size: \"large\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              as: \"h2\",\n              color: \"teal\",\n              textAlign: \"center\",\n              children: \"hello the landlord appointed you\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              id: \"form-input-control-last-name\",\n              control: TextArea,\n              label: \"FeedBack\",\n              name: \"feedback\",\n              placeholder: \"feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              control: Input,\n              name: \"usertype\",\n              type: \"text\",\n              label: \"type of user\",\n              placeholder: \"identify who you are\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              required: true,\n              id: \"form-input-control-last-name\",\n              control: Input,\n              name: \"username\",\n              type: \"text\",\n              label: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"twitter\",\n              children: \"Send FeedBack\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SendAppointment;\nexport default SendAppointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendAppointment\");","map":{"version":3,"sources":["/home/yohannis/Desktop/Final-Project OHR/client/src/components/admin/SendAppointment.js"],"names":["React","Header","Button","Grid","Form","Input","Segment","TextArea","Divider","SendAppointment","publicVapidKey","send","register","navigator","serviceWorker","scope","console","log","subscription","pushManager","subscribe","userVisibleOnly","applicationServerKey","urlBase64ToUint8Array","fetch","method","body","JSON","stringify","headers","base64String","padding","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","alignContent","margin","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Header, Button,Grid,Form,Input,Segment,TextArea,Divider } from 'semantic-ui-react';\n\nconst SendAppointment = () => {\n\n    const publicVapidKey = 'BMffGk0gRxLPOSi-eOlXoR1ahY9Ce7uBY3010C06TeMoRYS_6n1A4ItVeOeNYutDlhPK27WW5UMrdyjBEj_-Pxo';\n\n    //register the service worker, register our push api, sedn the notifation\n    async function send() {\n        //register service worker\n        const register = await navigator.serviceWorker.register('/sw.js', {\n            scope: '/'\n        });\n\n        //register push\n        console.log('Registering push...')\n        const subscription = await register.pushManager.subscribe({\n            userVisibleOnly: true,\n            applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n        });\n\n        //Send push notification\n        await fetch(\"http://localhost:5000/api/subscribe\", {\n            method: \"POST\",\n            body: JSON.stringify(subscription),\n            headers: {\n                \"content-type\": \"application/json\"\n            }\n        });\n    }\n\n    function urlBase64ToUint8Array(base64String) {\n        const padding = \"=\".repeat((4 - base64String.length % 4) % 4);\n        const base64 = (base64String + padding)\n            .replace(/\\-/g, \"+\")\n            .replace(/_/g, \"/\");\n\n        const rawData = window.atob(base64);\n        const outputArray = new Uint8Array(rawData.length);\n\n        for (let i = 0; i < rawData.length; ++i) {\n            outputArray[i] = rawData.charCodeAt(i);\n        }\n        return outputArray;\n    }\n    return (\n        <div style={{ alignContent: \"center\", margin: \"150px\" }}>\n            <h2>\n                hello the landlord appointed you\n            </h2>\n            <Grid textAlign='center'>\n                <Grid.Column width={5}>\n                    {/* <Sticky active pushing context={contextRef}> */}\n\n                    <Segment stacked style={{ backgroundColor: \"lightGray\" }} textAlign='center'>\n                        <Form size='large' >\n                            <Header as='h2' color='teal' textAlign='center'>\n                            hello the landlord appointed you\n                            </Header>\n                            <Form.Field\n                                required\n                                id='form-input-control-last-name'\n                                control={TextArea}\n                                label='FeedBack'\n                                name='feedback'\n                                placeholder='feedback'\n                            />\n                            <Form.Field\n                                required\n                                control={Input}\n                                name='usertype'\n                                type='text'\n                                label='type of user'\n                                placeholder='identify who you are'\n                            />\n                            <Form.Field\n                                required\n                                id='form-input-control-last-name'\n                                control={Input}\n                                name='username'\n                                type='text'\n                                label='username'\n                            />\n\n                            <Divider hidden />\n                            <Button color=\"twitter\" >Send FeedBack</Button>\n                            <Divider hidden />\n\n                        </Form>\n                    </Segment>\n                    {/* </Sticky> */}\n                </Grid.Column>\n\n\n            </Grid>\n        </div>\n    )\n}\n\nexport default SendAppointment\n"]},"metadata":{},"sourceType":"module"}