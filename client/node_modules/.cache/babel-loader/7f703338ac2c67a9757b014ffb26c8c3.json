{"ast":null,"code":"var _jsxFileName = \"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/FileUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport storage from \"../../firebase\";\nimport axios from 'axios';\nimport useGeoLocation from \"../maps/useGeoLocation\";\nimport { Container, Form, Input, Select, Divider, Checkbox, Button, TextArea, Progress, Header, Segment } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileUp = () => {\n  _s();\n\n  const location = useGeoLocation();\n  const [housename, setHousename] = useState('');\n  const [description, setDescription] = useState('');\n  const [numberofbeds, setNumberOfBeds] = useState(0);\n  const [district, setDistrict] = useState('');\n  const [sefer, setSefer] = useState('');\n  const [feepermonth, setFeeperMonth] = useState(0);\n  const [size, setSize] = useState(0);\n  const [available, setAvailable] = useState(false);\n  const [propertytype, setPropertytype] = useState('');\n  const [video, setVideo] = useState(null);\n  const [imageUrls, setImageUrls] = useState([]);\n  const [videoUrls, setVideoUrls] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = e => {\n    console.log(e.target.name);\n\n    for (let i = 0; i < e.target.files.length; i++) {\n      const newImage = e.target.files[i];\n      newImage[\"id\"] = Math.random();\n      setFiles(prevState => [...prevState, newImage]);\n    }\n  };\n\n  const handleVideoChange = e => {\n    setVideo(e.target.files[0]);\n  };\n\n  const handleNameChange = e => {\n    setHousename(e.target.value);\n    console.log(housename);\n  };\n\n  const handleDescrptionChange = e => {\n    setDescription(e.target.value);\n  };\n\n  const handleDestrictChange = e => {\n    setDistrict(e.target.value);\n  };\n\n  const handleSeferChange = e => {\n    setSefer(e.target.value);\n  };\n\n  const handleTypeChange = e => {\n    setPropertytype(e.target.value);\n  };\n\n  const handleFeeChange = e => {\n    setFeeperMonth(e.target.value);\n  };\n\n  const handleSizeChange = e => {\n    setSize(e.target.value);\n  };\n\n  const handleAvailableChange = e => {\n    setAvailable(e.target.value);\n  };\n\n  const handleBedChange = e => {\n    setNumberOfBeds(e.target.value);\n  }; // const handleInputChange = (e) => {\n  //     const value = e.target.value;\n  //     setHousename({ ...housename, [e.target.name]: value });\n  //     setDescription({ ...description, [e.target.name]: value });\n  //     setPropertytype({ ...propertytype, [e.target.name]: value });\n  //     setFeeperMonth({ ...feepermonth, [e.target.name]: value });\n  //     setSize({ ...size, [e.target.name]: value });\n  //     setAvailable({ ...available, [e.target.name]: value });\n  //     setNumberOfBeds({ ...numberofbeds, [e.target.name]: value });\n  //   };\n\n\n  const createHouse = async housedata => {\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/multipleFiles\", housedata, config);\n      console.log(res);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleMultipleFileSubmit = async () => {\n    const formData = new FormData();\n    formData.append('housename', housename);\n    formData.append('description', description);\n    formData.append('district', district);\n    formData.append('sefer', sefer);\n    formData.append('numberofbeds', numberofbeds);\n    formData.append('size', size);\n    formData.append('feepermonth', feepermonth);\n    formData.append('available', available);\n    formData.append('propertytype', propertytype);\n    formData.append('video', videoUrls);\n\n    for (let i = 0; i < imageUrls.length; i++) {\n      formData.append('files', imageUrls[i]);\n    }\n\n    await createHouse(formData);\n  };\n\n  const propertytypeOptions = [{\n    key: 'n',\n    text: 'new',\n    value: 'new'\n  }, {\n    key: 'v',\n    text: 'brand new',\n    value: 'brand new'\n  }, {\n    key: 'o',\n    text: 'old',\n    value: 'old'\n  }];\n  const availableOptions = [{\n    key: 'n',\n    text: 'available',\n    value: 'true'\n  }, {\n    key: 'y',\n    text: 'not available',\n    value: 'false'\n  }];\n\n  const handleUpload = () => {\n    const promises = [];\n    const uploadTaskTwo = storage.ref(`images/${video.name}`).put(video);\n    promises.push(uploadTaskTwo);\n    uploadTaskTwo.on(\"state_changed\", snapshot => {\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      console.log(error);\n    }, async () => {\n      const urls = await storage.ref(\"images\").child(video.name).getDownloadURL();\n      setVideoUrls(prevState => [...prevState, urls]);\n      console.log(\"this is a video part\", urls);\n    });\n    files.map(image => {\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      promises.push(uploadTask);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        setProgress(progress);\n      }, error => {\n        console.log(error);\n      }, async () => {\n        const urls = await storage.ref(\"images\").child(image.name).getDownloadURL();\n        setImageUrls(prevState => [...prevState, urls]);\n        console.log(\"this is a iamge part\", urls);\n      });\n    });\n    Promise.all(promises).then(() => alert(\"All images uploaded\")).then().catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"100px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [\"Build your listing to find the perfect renter \\u2014 listings with a lot of detail and photos tend to attract the most leads, so don\\u2019t be shy! Not sure what to include? Check out our tips and tricks here.\", /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          raised: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Select,\n            options: propertytypeOptions,\n            label: \"Property Type\",\n            placeholder: \"property type\",\n            search: true,\n            onChange: e => setPropertytype(e.target.value),\n            value: propertytype\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Select,\n            options: availableOptions,\n            label: \"Availability\",\n            placeholder: \"available\",\n            search: true,\n            onChange: e => setAvailable(e.target.value),\n            value: available\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            required: true,\n            id: \"district\",\n            control: Input,\n            label: \"District\",\n            placeholder: \"District or Sub City\",\n            onChange: e => setDistrict(e.target.value),\n            value: district\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            required: true,\n            id: \"form-input-control-last-name\",\n            control: Input,\n            label: \"House Name\",\n            placeholder: \"house name\",\n            onChange: e => setHousename(e.target.value),\n            value: housename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            required: true,\n            id: \"form-input-control-last-name\",\n            control: Input,\n            label: \"Sefer\",\n            placeholder: \"Sefer or Village\",\n            onChange: e => setSefer(e.target.value),\n            value: sefer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            required: true,\n            id: \"form-input-control-last-name\",\n            control: TextArea,\n            label: \"Description\",\n            placeholder: \"House description\",\n            onChange: e => setDescription(e.target.value),\n            value: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            required: true,\n            id: \"form-input-control-last-name\",\n            control: Input,\n            type: \"number\",\n            label: \"Square Footage\",\n            placeholder: \"Size of a house\",\n            onChange: e => setSize(e.target.value),\n            value: size\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            required: true,\n            id: \"form-input-control-last-name\",\n            control: Input,\n            type: \"number\",\n            label: \"Lease Fee\",\n            placeholder: \"Fee\",\n            onChange: e => setFeeperMonth(e.target.value),\n            value: feepermonth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            required: true,\n            id: \"form-input-control-last-name\",\n            control: Input,\n            type: \"number\",\n            label: \"Number of Beds\",\n            placeholder: \"beds\",\n            onChange: e => setNumberOfBeds(e.target.value),\n            value: numberofbeds\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            required: true,\n            id: \"form-input-control-last-name\",\n            control: Input,\n            type: \"file\",\n            multiple: true,\n            label: \"Photos of the House\",\n            icon: \"upload\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            required: true,\n            id: \"form-input-control-last-name\",\n            control: Input,\n            type: \"file\",\n            label: \"Videos about the house\",\n            onChange: handleVideoChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpload,\n            children: \"create upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleMultipleFileSubmit,\n            children: \"final Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileUp, \"3CRIoOUHOYlDmnwxAYsKTTTBOxo=\", false, function () {\n  return [useGeoLocation];\n});\n\n_c = FileUp;\nexport default FileUp;\n/*\n\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUp\");","map":{"version":3,"sources":["/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/FileUp.js"],"names":["React","useState","storage","axios","useGeoLocation","Container","Form","Input","Select","Divider","Checkbox","Button","TextArea","Progress","Header","Segment","FileUp","location","housename","setHousename","description","setDescription","numberofbeds","setNumberOfBeds","district","setDistrict","sefer","setSefer","feepermonth","setFeeperMonth","size","setSize","available","setAvailable","propertytype","setPropertytype","video","setVideo","imageUrls","setImageUrls","videoUrls","setVideoUrls","files","setFiles","progress","setProgress","handleChange","e","console","log","target","name","i","length","newImage","Math","random","prevState","handleVideoChange","handleNameChange","value","handleDescrptionChange","handleDestrictChange","handleSeferChange","handleTypeChange","handleFeeChange","handleSizeChange","handleAvailableChange","handleBedChange","createHouse","housedata","config","header","res","post","err","handleMultipleFileSubmit","formData","FormData","append","propertytypeOptions","key","text","availableOptions","handleUpload","promises","uploadTaskTwo","ref","put","push","on","snapshot","round","bytesTransferred","totalBytes","error","urls","child","getDownloadURL","map","image","uploadTask","Promise","all","then","alert","catch","marginTop"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport storage from \"../../firebase\";\nimport axios from 'axios'\nimport useGeoLocation from \"../maps/useGeoLocation\";\nimport { Container, Form, Input, Select, Divider, Checkbox, Button, TextArea, Progress, Header, Segment, } from \"semantic-ui-react\";\nconst FileUp = () => {\n  const location = useGeoLocation()\n\n  const [housename, setHousename] = useState('')\n  const [description, setDescription] = useState('')\n  const [numberofbeds, setNumberOfBeds] = useState(0)\n  const [district, setDistrict] = useState('')\n  const [sefer, setSefer] = useState('')\n  const [feepermonth, setFeeperMonth] = useState(0)\n  const [size, setSize] = useState(0)\n  const [available, setAvailable] = useState(false)\n  const [propertytype, setPropertytype] = useState('')\n  const [video, setVideo] = useState(null)\n  const [imageUrls, setImageUrls] = useState([]);\n  const [videoUrls, setVideoUrls] = useState([]);\n  const [files, setFiles] = useState([]);\n\n\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = (e) => {\n    console.log(e.target.name)\n    for (let i = 0; i < e.target.files.length; i++) {\n      const newImage = e.target.files[i];\n      newImage[\"id\"] = Math.random();\n      setFiles((prevState) => [...prevState, newImage]);\n    }\n  };\n  const handleVideoChange = (e) => {\n    setVideo(e.target.files[0])\n\n  }\n  const handleNameChange = (e) => {\n    setHousename(e.target.value)\n    console.log(housename)\n  }\n  const handleDescrptionChange = (e) => {\n    setDescription(e.target.value)\n  }\n  const handleDestrictChange = (e) => {\n    setDistrict(e.target.value)\n  }\n  const handleSeferChange = (e) => {\n    setSefer(e.target.value)\n  }\n  const handleTypeChange = (e) => {\n    setPropertytype(e.target.value)\n  }\n  const handleFeeChange = (e) => {\n    setFeeperMonth(e.target.value)\n  }\n  const handleSizeChange = (e) => {\n    setSize(e.target.value)\n  }\n  const handleAvailableChange = (e) => {\n    setAvailable(e.target.value)\n  }\n  const handleBedChange = (e) => {\n    setNumberOfBeds(e.target.value)\n  }\n  // const handleInputChange = (e) => {\n  //     const value = e.target.value;\n  //     setHousename({ ...housename, [e.target.name]: value });\n  //     setDescription({ ...description, [e.target.name]: value });\n  //     setPropertytype({ ...propertytype, [e.target.name]: value });\n  //     setFeeperMonth({ ...feepermonth, [e.target.name]: value });\n  //     setSize({ ...size, [e.target.name]: value });\n  //     setAvailable({ ...available, [e.target.name]: value });\n  //     setNumberOfBeds({ ...numberofbeds, [e.target.name]: value });\n\n  //   };\n\n  const createHouse = async (housedata) => {\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/multipleFiles\", housedata, config);\n      console.log(res)\n    } catch (err) {\n      console.log(err)\n    }\n  };\n  const handleMultipleFileSubmit = async () => {\n    const formData = new FormData();\n    formData.append('housename', housename);\n    formData.append('description', description);\n    formData.append('district', district);\n    formData.append('sefer', sefer);\n    formData.append('numberofbeds', numberofbeds);\n    formData.append('size', size);\n    formData.append('feepermonth', feepermonth);\n    formData.append('available', available);\n    formData.append('propertytype', propertytype);\n    formData.append('video', videoUrls);\n    for (let i = 0; i < imageUrls.length; i++) {\n      formData.append('files', imageUrls[i]);\n    }\n\n    await createHouse(formData);\n\n  }\n  const propertytypeOptions = [\n    { key: 'n', text: 'new', value: 'new' },\n    { key: 'v', text: 'brand new', value: 'brand new' },\n    { key: 'o', text: 'old', value: 'old' },\n  ]\n  const availableOptions = [\n    { key: 'n', text: 'available', value: 'true' },\n    { key: 'y', text: 'not available', value: 'false' },\n \n  ]\n\n  const handleUpload = () => {\n    const promises = [];\n    const uploadTaskTwo = storage.ref(`images/${video.name}`).put(video)\n    promises.push(uploadTaskTwo);\n    uploadTaskTwo.on(\n      \"state_changed\",\n      (snapshot) => {\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progress);\n      },\n      (error) => {\n        console.log(error);\n      },\n      async () => {\n        const urls = await storage.ref(\"images\").child(video.name).getDownloadURL()\n        setVideoUrls((prevState) => [...prevState, urls]);\n        console.log(\"this is a video part\", urls)\n\n      }\n\n    )\n\n    files.map((image) => {\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      promises.push(uploadTask);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n        },\n        (error) => {\n          console.log(error);\n        },\n        async () => {\n          const urls = await storage.ref(\"images\").child(image.name).getDownloadURL();\n          setImageUrls((prevState) => [...prevState, urls]);\n          console.log(\"this is a iamge part\", urls)\n\n        }\n      );\n\n    });\n\n\n\n    Promise.all(promises)\n      .then(\n        () => alert(\"All images uploaded\")\n      ).then()\n      .catch((err) => console.log(err));\n\n  };\n\n\n\n  return (\n    <div style={{ marginTop: \"100px\" }}>\n      <Container>\n\n        Build your listing to find the perfect renter — listings with a lot of detail and photos tend to attract the most leads, so don’t be shy! Not sure what to include? Check out our tips and tricks here.\n        <Form>\n          <Segment raised >\n            <Form.Field\n              control={Select}\n              options={propertytypeOptions}\n              label=\"Property Type\"\n              placeholder='property type'\n              search\n              onChange={(e) => setPropertytype(e.target.value)}\n              value={propertytype}\n            />\n            <Form.Field\n              control={Select}\n              options={availableOptions}\n              label=\"Availability\"\n              placeholder='available'\n              search\n              onChange={(e) => setAvailable(e.target.value)}\n              value={available}\n            />\n            <Form.Field\n              required\n              id='district'\n              control={Input}\n              label='District'\n              placeholder='District or Sub City'\n              onChange={(e) => setDistrict(e.target.value)}\n              value={district}\n            />\n            <Form.Field\n              required\n              id='form-input-control-last-name'\n              control={Input}\n              label='House Name'\n              placeholder='house name'\n              onChange={(e) => setHousename(e.target.value)}\n              value={housename}\n            />\n            <Form.Field\n              required\n              id='form-input-control-last-name'\n              control={Input}\n              label='Sefer'\n              placeholder='Sefer or Village'\n              onChange={(e) => setSefer(e.target.value)}\n              value={sefer}\n            />\n            <Form.Field\n              required\n              id='form-input-control-last-name'\n              control={TextArea}\n              label='Description'\n              placeholder='House description'\n              onChange={(e) => setDescription(e.target.value)}\n              value={description}\n            />\n            <Form.Field\n              required\n              id='form-input-control-last-name'\n              control={Input}\n              type=\"number\"\n              label='Square Footage'\n              placeholder='Size of a house'\n              onChange={(e) => setSize(e.target.value)}\n              value={size}\n            />\n            <Form.Field\n              required\n              id='form-input-control-last-name'\n              control={Input}\n              type=\"number\"\n              label='Lease Fee'\n              placeholder='Fee'\n              onChange={(e) => setFeeperMonth(e.target.value)}\n              value={feepermonth}\n            />\n              <Form.Field\n                required\n                id='form-input-control-last-name'\n                control={Input}\n                type=\"number\"\n                label='Number of Beds'\n                placeholder='beds'\n                onChange={(e) => setNumberOfBeds(e.target.value)}\n                value={numberofbeds}\n              />\n            <Form.Field\n              required\n              id='form-input-control-last-name'\n              control={Input}\n              type=\"file\"\n              multiple\n              label='Photos of the House'\n              icon='upload'\n              onChange={handleChange}\n            />\n            <Form.Field\n              required\n              id='form-input-control-last-name'\n              control={Input}\n              type=\"file\"\n              label='Videos about the house'\n              onChange={handleVideoChange}\n              \n            />\n\n            \n            <button onClick={handleUpload}>create upload</button>\n        <button onClick={handleMultipleFileSubmit}>final Upload</button>\n\n          </Segment>\n          \n        </Form>\n\n\n        {/* <br />\n        <br />\n        <input type=\"file\" name=\"files\" multiple onChange={handleChange} />\n        <input type=\"file\" name=\"video\" onChange={handleVideoChange} />\n        <div className=\"addProductItem\">\n          <label>House Name</label>\n          <input\n            type=\"text\"\n            placeholder=\"housename\"\n            name=\"housename\"\n            onChange={handleNameChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Description</label>\n          <input\n            type=\"text\"\n            placeholder=\"description\"\n            name=\"description\"\n            onChange={handleDescrptionChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>District</label>\n          <input\n            type=\"text\"\n            placeholder=\"district\"\n            name=\"district\"\n            onChange={handleDestrictChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Sefer</label>\n          <input\n            type=\"text\"\n            placeholder=\"sefer\"\n            name=\"sefer\"\n            onChange={handleSeferChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Fee per Month</label>\n          <input\n            type=\"number\"\n            placeholder=\"feepermonth\"\n            name=\"feepermonth\"\n            onChange={handleFeeChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Size</label>\n          <input\n            type=\"number\"\n            placeholder=\"size\"\n            name=\"size\"\n            onChange={handleSizeChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Number of Beds</label>\n          <input\n            type=\"number\"\n            placeholder=\"numberofbeds\"\n            name=\"numberofbeds\"\n            onChange={handleBedChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>propertytype</label>\n          <input\n            type=\"text\"\n            placeholder=\"propertytype\"\n            name=\"propertytype\"\n            onChange={handleTypeChange}\n          />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Available?</label>\n          <select name=\"available\" id=\"available\" onChange={handleAvailableChange}>\n            <option value=\"false\">No</option>\n            <option value=\"true\">Yes</option>\n          </select>\n        </div>\n        \n\n        <br />\n        {location.loaded ? JSON.stringify(location) : \"not loaded correctly\"}\n        <br />\n        <br />\n        {imageUrls.map((url, i) => (\n          <div key={i}>\n            <a href={url} target=\"_blank\">\n              {url}\n            </a>\n          </div>\n        ))}\n        <br />\n        {imageUrls.map((url, i) => (\n          <img\n            key={i}\n            style={{ width: \"500px\" }}\n            src={url || \"http://via.placeholder.com/300\"}\n            alt=\"firebase-image\"\n          />\n        ))}\n        {\n          <video\n            style={{ width: \"500px\" }}\n            src={videoUrls || \"http://via.placeholder.com/300\"}\n            alt=\"firebase-image\"\n            autoPlay\n          />\n        } */}\n      </Container>\n    </div>\n  );\n}\n\nexport default FileUp\n\n/*\n\n\n*/\n\n\n"]},"metadata":{},"sourceType":"module"}