{"ast":null,"code":"var _jsxFileName = \"/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/SwiperSlider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, createRef } from 'react';\nimport axios from 'axios';\nimport SwiperCore, { Navigation, Pagination, Scrollbar } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper-bundle.css';\nimport { Grid, Image, Card, Input, Form, GridColumn, CardContent, CardDescription, Container, Sticky, Ref } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { StyledButton } from '../StyledComponent';\nimport HousesLocation from '../maps/HousesLocation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSwiperCore.use([Navigation, Pagination, Scrollbar]);\n\nconst SwiperSlider = () => {\n  _s();\n\n  const contextRef = /*#__PURE__*/createRef();\n  const [multipleFiles, setMultipleFiles] = useState([]);\n\n  const getMultipleFiles = async () => {\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/getMultipleFiles');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const getMultipleFilesList = async () => {\n    try {\n      const fileslist = await getMultipleFiles();\n      setMultipleFiles(fileslist);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getMultipleFilesList(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"100px 10px 10px 20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Ref, {\n      innerRef: contextRef,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Sticky, {\n          context: contextRef,\n          offset: 10,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              widths: \"equal\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n                type: \"search\",\n                placeholder: \"Search...\",\n                action: {\n                  icon: 'search'\n                }\n                /* defaultValue={this.state.value}\n                onChange={this.handleInputChange} \n                */\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                label: \"First name\",\n                placeholder: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                label: \"Last name\",\n                placeholder: \"Last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                label: \"Gender\",\n                placeholder: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          columns: \"2\",\n          style: {\n            padding: \"0px\",\n            margin: \"0px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(GridColumn, {\n            style: {\n              padding: \"0px\",\n              margin: \"0px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                widths: \"equal\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n                  fluid: true,\n                  label: \"First name\",\n                  placeholder: \"First name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                  fluid: true,\n                  label: \"Last name\",\n                  placeholder: \"Last name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  fluid: true,\n                  label: \"Gender\",\n                  placeholder: \"Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              columns: 2,\n              style: {\n                padding: \"0px\",\n                margin: \"0px\",\n                width: \"70vw\"\n              },\n              children: multipleFiles.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  style: {\n                    height: \"350px\",\n                    width: \"308px\",\n                    margin: \"5px 0px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n                    style: {\n                      padding: \"0px\",\n                      margin: \"0px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Swiper, {\n                      slidesPerView: 1,\n                      navigation: true,\n                      pagination: {\n                        clickable: true\n                      },\n                      scrollbar: {\n                        draggable: true\n                      },\n                      children: element.files.map((url, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n                        style: {\n                          height: \"250px\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Link, {\n                          to: `/houseDetails/${element._id}`,\n                          children: /*#__PURE__*/_jsxDEV(Image, {\n                            src: url,\n                            alt: \"img\",\n                            style: {\n                              objectFit: \"cover\"\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 110,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 109,\n                          columnNumber: 31\n                        }, this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 106,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                      children: \"Matthew\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                      children: element.housename\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                      children: [element.district, \",\", element.sefer]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, this)\n              }, element._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n            children: /*#__PURE__*/_jsxDEV(Sticky, {\n              context: contextRef,\n              offset: 60,\n              children: /*#__PURE__*/_jsxDEV(HousesLocation, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SwiperSlider, \"u4DBbpEWmX/78AfZEp0xEXPkVU8=\");\n\n_c = SwiperSlider;\nexport default SwiperSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwiperSlider\");","map":{"version":3,"sources":["/home/yohannis/Desktop/min/Final-Project OHR/client/src/components/screen/SwiperSlider.js"],"names":["React","useState","useEffect","useRef","createRef","axios","SwiperCore","Navigation","Pagination","Scrollbar","Swiper","SwiperSlide","Grid","Image","Card","Input","Form","GridColumn","CardContent","CardDescription","Container","Sticky","Ref","Link","StyledButton","HousesLocation","use","SwiperSlider","contextRef","multipleFiles","setMultipleFiles","getMultipleFiles","data","get","error","getMultipleFilesList","fileslist","console","log","margin","icon","padding","width","map","element","index","height","clickable","draggable","files","url","_id","objectFit","housename","district","sefer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, createRef } from 'react'\nimport axios from 'axios'\nimport SwiperCore, { Navigation, Pagination, Scrollbar } from 'swiper';\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper-bundle.css';\n\nimport { Grid, Image, Card, Input, Form, GridColumn, CardContent, CardDescription, Container, Sticky, Ref } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nimport { StyledButton } from '../StyledComponent'\nimport HousesLocation from '../maps/HousesLocation';\n\n\nSwiperCore.use([Navigation, Pagination, Scrollbar]);\nconst SwiperSlider = () => {\n  const contextRef = createRef()\n\n  const [multipleFiles, setMultipleFiles] = useState([]);\n  const getMultipleFiles = async () => {\n    try {\n      const { data } = await axios.get('http://localhost:5000/api/getMultipleFiles');\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n  const getMultipleFilesList = async () => {\n    try {\n      const fileslist = await getMultipleFiles();\n      setMultipleFiles(fileslist);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  useEffect(() => {\n    getMultipleFilesList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <div style={{\n      margin: \"100px 10px 10px 20px\",\n\n    }}>\n      <Ref innerRef={contextRef}>\n\n        <Container fluid >\n          <Sticky context={contextRef} offset={10}>\n            <Form>\n              <Form.Group widths='equal'>\n                \n                  <Form.Input\n                    type='search' placeholder='Search...'\n                    action={{\n                      icon: 'search',\n                      \n                    }}\n                  /* defaultValue={this.state.value}\n                  onChange={this.handleInputChange} \n                 */\n                  />\n                \n                <Form.Input label='First name' placeholder='First name' />\n                <Form.Input label='Last name' placeholder='Last name' />\n                <Form.Select\n                  label='Gender'\n                  placeholder='Gender'\n                />\n              </Form.Group>\n            </Form>\n          </Sticky>\n\n          <Grid columns='2' style={{ padding: \"0px\", margin: \"0px\" }}>\n            <GridColumn style={{ padding: \"0px\", margin: \"0px\" }}>\n              <Form>\n                <Form.Group widths='equal'>\n                  <Form.Input fluid label='First name' placeholder='First name' />\n                  <Form.Input fluid label='Last name' placeholder='Last name' />\n                  <Form.Select\n                    fluid\n                    label='Gender'\n                    placeholder='Gender'\n                  />\n                </Form.Group>\n              </Form>\n              <Grid columns={2} style={{ padding: \"0px\", margin: \"0px\", width: \"70vw\" }}>\n                {multipleFiles.map((element, index) =>\n\n                  <div key={element._id} >\n                    <Card\n                      style={{\n                        height: \"350px\",\n                        width: \"308px\",\n                        margin: \"5px 0px\",\n                      }}\n                    >\n                      <Grid.Column style={{ padding: \"0px\", margin: \"0px\" }}>\n                        <Swiper\n                          slidesPerView={1}\n                          navigation\n                          pagination={{ clickable: true }}\n                          scrollbar={{ draggable: true }}\n                        >\n                          {element.files.map((url, index) =>\n\n                            <SwiperSlide key={index}\n                              style={{ height: \"250px\" }}\n                            >\n                              <Link to={`/houseDetails/${element._id}`}>\n                                <Image src={url} alt=\"img\"\n                                  style={{\n\n                                    objectFit: \"cover\"\n                                  }}\n                                />\n                              </Link>\n                            </SwiperSlide>\n\n                          )}\n                        </Swiper>\n                      </Grid.Column>\n                      <CardContent>\n                        <Card.Header>Matthew</Card.Header>\n                        <Card.Meta>\n                          {element.housename}\n                        </Card.Meta>\n                        <Card.Description>\n\n                          {\n                            element.district\n                          },\n                          {element.sefer}\n                        </Card.Description>\n                      </CardContent>\n\n                    </Card>\n                  </div>\n\n                )}\n\n              </Grid>\n            </GridColumn>\n            <GridColumn>\n              <Sticky context={contextRef} offset={60}>\n                <HousesLocation />\n              </Sticky>\n\n            </GridColumn>\n          </Grid>\n        </Container>\n      </Ref>\n\n\n    </div>\n  )\n}\n\nexport default SwiperSlider\n"]},"metadata":{},"sourceType":"module"}